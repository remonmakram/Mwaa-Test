/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0APO
BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.C$_0APO';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END; 

&


/*-----------------------------------------------*/
/* TASK No. 6 */
/* Load data */

create table RAX_APP_USER.C$_0APO as
select	
	APO.APO_ID	   C1_APO_CODE,
	SOURCE_SYSTEM.SOURCE_SYSTEM_SHORT_NAME	   C2_SOURCE_SYSTEM_NAME,
	APO.SCHOOL_YEAR	   C3_SCHOOL_YEAR,
	nvl(APO.SELLING_METHOD,'Unknown')	   C4_SELLING_METHOD_NAME,
	nvl(APO.PROCESSING_LAB,'Unknown')	   C5_PLANT_NAME,
	nvl(ACC.LIFETOUCH_ID,-1)	   C6_LIFETOUCH_ID,
	nvl(APO.TERRITORY_CODE,'Unknown')	   C7_TERRITORY_CODE,
	nvl(APO.DESCRIPTION,'Unknown')	   C8_DESCRIPTION,
	nvl(APO.PRICE_PROGRAM_NAME,'Unknown')	   C9_PRICE_PROGRAM_NAME,
	nvl(TRIM(APO.PHOTOGAPHY_LOCIATION),'Unknown')	   C10_PHOTOGRAPHY_LOCATION,
	nvl(APO.PORTRAIT_PRICELIST_PARTNO,'.')	   C11_PORTRAIT_PRICELIST_PARTNO,
	nvl(APO.SIT_PRICELIST_PARTNO,'.')	   C12_SIT_PRICELIST_PARTNO,
	APO.FINANCIAL_PROCESSING_SYSTEM	   C13_FINANCIAL_PROCESSING_SYSTE,
	APO.FULFILLING_LAB_SYSTEM	   C14_FULFILLING_LAB_SYSTEM,
	APO.ORIGINAL_BOOKING_REP	   C15_ORIGINAL_BOOKING_REP,
	APO.ORIGINAL_BOOKING_REP_NAME	   C16_ORIGINAL_BOOKING_REP_NAME,
	APO.IMAGE_ACCESS_PRODUCT_IND	   C17_IMAGE_ACCESS_PRODUCT_IND,
	nvl(APO.STATUS, '.')	   C18_STATUS,
	APO.IS_TAX_EXEMPT	   C19_IS_TAX_EXEMPT,
	nvl(APO.APO_TYPE,'N/A')	   C20_APO_TYPE,
	nvl(APO.PARENT_NOTIFY_STATUS,'Unknown')	   C21_PARENT_NOTIFY_STATUS,
	nvl(APO.BOOKING_PROGRAM, 'Unknown')	   C22_BOOKING_PROGRAM,
	APO.ESTIMATED_ENROLLMENT	   C29_ESTIMATED_ENROLLMENT,
	APO.GLOSSIES_PAPER_DEADLINE	   C28_GLOSSIES_PAPER_DEADLINE,
	APO.STUDENT_ID_REQD	   C27_STUDENT_ID_REQD,
	APO.TERRITORY_GROUP_ID	   C26_TERRITORY_GROUP_ID,
	APO.SOLO_ACCESS	   C25_SOLO_ACCESS,
	APO.STUDIO_ID	   C24_STUDIO_ID,
	APO.STATUS	   C23_STATUS
from	ODS_OWN.SOURCE_SYSTEM   SOURCE_SYSTEM, ODS_OWN.APO   APO, ODS_OWN.ACCOUNT   ACC, ODS_OWN.PRICE_PROGRAM   PP
where	(1=1)
And (APO.ODS_MODIFY_DATE >= 
TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS') - :v_cdc_sales_ods_overlap)
 And (APO.SCHOOL_YEAR >=2015)
 And (APO.SOURCE_SYSTEM_OID=SOURCE_SYSTEM.SOURCE_SYSTEM_OID (+))
AND (APO.ACCOUNT_OID=ACC.ACCOUNT_OID (+))
AND (APO.PRICE_PROGRAM_OID=PP.PRICE_PROGRAM_OID (+))



&


/*-----------------------------------------------*/
/* TASK No. 7 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0APO',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Drop flow table */

-- drop table RAX_APP_USER.I$_APO 
BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_APO';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 10 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_APO
(
	APO_ID		NUMBER NULL,
	EFFECTIVE_DATE		DATE NULL,
	LOAD_ID		NUMBER NULL,
	ACTIVE_IND		VARCHAR2(5) NULL,
	APO_CODE		VARCHAR2(30) NULL,
	SOURCE_SYSTEM_NAME		VARCHAR2(10) NULL,
	SCHOOL_YEAR		NUMBER NULL,
	SELLING_METHOD_NAME		VARCHAR2(40) NULL,
	PLANT_NAME		VARCHAR2(40) NULL,
	PHOTOGRAPHY_DATE		DATE NULL,
	LIFETOUCH_ID		NUMBER NULL,
	MARKETING_CODE		VARCHAR2(20) NULL,
	TERRITORY_CODE		VARCHAR2(10) NULL,
	APY_ID		NUMBER NULL,
	DESCRIPTION		VARCHAR2(255) NULL,
	PRICE_PROGRAM_NAME		VARCHAR2(50) NULL,
	PHOTOGRAPHY_LOCATION		VARCHAR2(50) NULL,
	STUDIO_CODE		VARCHAR2(50) NULL,
	INTERNET_ORDER_OFFERED_IND		CHAR(1) NULL,
	TERRITORY_GROUP_CODE		VARCHAR2(80) NULL,
	STUDENT_ID_IND		CHAR(1) NULL,
	STUDENT_YB_POSE_SEL_DEADLINE		DATE NULL,
	PORTRAIT_PRICELIST_PARTNO		VARCHAR2(20) NULL,
	SIT_PRICELIST_PARTNO		VARCHAR2(20) NULL,
	ESTIMATED_ENROLLMENT		NUMBER NULL,
	DEFAULT_LOOK_CODE		VARCHAR2(255) NULL,
	FINANCIAL_PROCESSING_SYSTEM		VARCHAR2(255) NULL,
	FULFILLING_LAB_SYSTEM		VARCHAR2(255) NULL,
	ORIGINAL_BOOKING_REP		VARCHAR2(255) NULL,
	ORIGINAL_BOOKING_REP_NAME		VARCHAR2(255) NULL,
	IMAGE_ACCESS_PRODUCT_IND		CHAR(1) NULL,
	STATUS		VARCHAR2(255) NULL,
	IS_TAX_EXEMPT		NUMBER(1) NULL,
	APO_TYPE		VARCHAR2(255) NULL,
	PARENT_NOTIFY_STATUS		VARCHAR2(20) NULL,
	BOOKING_PROGRAM		VARCHAR2(50) NULL,
	IND_UPDATE		CHAR(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 11 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 


  


insert into	RAX_APP_USER.I$_APO
(
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM,
	IND_UPDATE
)
select 
ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM,
	IND_UPDATE
 from (


select 	 
	
	(CASE WHEN C23_STATUS = 'Inactive' THEN 'I' ELSE 'A' END) ACTIVE_IND,
	C1_APO_CODE APO_CODE,
	C2_SOURCE_SYSTEM_NAME SOURCE_SYSTEM_NAME,
	C3_SCHOOL_YEAR SCHOOL_YEAR,
	C4_SELLING_METHOD_NAME SELLING_METHOD_NAME,
	C5_PLANT_NAME PLANT_NAME,
	to_date('01011900','mmddyyyy') PHOTOGRAPHY_DATE,
	C6_LIFETOUCH_ID LIFETOUCH_ID,
	'Do not use' MARKETING_CODE,
	C7_TERRITORY_CODE TERRITORY_CODE,
	-1 APY_ID,
	C8_DESCRIPTION DESCRIPTION,
	C9_PRICE_PROGRAM_NAME PRICE_PROGRAM_NAME,
	C10_PHOTOGRAPHY_LOCATION PHOTOGRAPHY_LOCATION,
	nvl(TRIM(C24_STUDIO_ID),'Unknown') STUDIO_CODE,
	nvl(C25_SOLO_ACCESS,'N') INTERNET_ORDER_OFFERED_IND,
	nvl(TRIM(C26_TERRITORY_GROUP_ID),'Unknown') TERRITORY_GROUP_CODE,
	nvl(C27_STUDENT_ID_REQD,'N') STUDENT_ID_IND,
	nvl(TRUNC(C28_GLOSSIES_PAPER_DEADLINE),to_date('25000101','yyyymmdd') ) STUDENT_YB_POSE_SEL_DEADLINE,
	C11_PORTRAIT_PRICELIST_PARTNO PORTRAIT_PRICELIST_PARTNO,
	C12_SIT_PRICELIST_PARTNO SIT_PRICELIST_PARTNO,
	nvl(C29_ESTIMATED_ENROLLMENT,0) ESTIMATED_ENROLLMENT,
	C13_FINANCIAL_PROCESSING_SYSTE FINANCIAL_PROCESSING_SYSTEM,
	C14_FULFILLING_LAB_SYSTEM FULFILLING_LAB_SYSTEM,
	C15_ORIGINAL_BOOKING_REP ORIGINAL_BOOKING_REP,
	C16_ORIGINAL_BOOKING_REP_NAME ORIGINAL_BOOKING_REP_NAME,
	C17_IMAGE_ACCESS_PRODUCT_IND IMAGE_ACCESS_PRODUCT_IND,
	C18_STATUS STATUS,
	C19_IS_TAX_EXEMPT IS_TAX_EXEMPT,
	C20_APO_TYPE APO_TYPE,
	C21_PARENT_NOTIFY_STATUS PARENT_NOTIFY_STATUS,
	C22_BOOKING_PROGRAM BOOKING_PROGRAM,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0APO
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from MART.APO T
	where	T.APO_CODE	= S.APO_CODE 
		 and ((T.ACTIVE_IND = S.ACTIVE_IND) or (T.ACTIVE_IND IS NULL and S.ACTIVE_IND IS NULL)) and
		((T.SOURCE_SYSTEM_NAME = S.SOURCE_SYSTEM_NAME) or (T.SOURCE_SYSTEM_NAME IS NULL and S.SOURCE_SYSTEM_NAME IS NULL)) and
		((T.SCHOOL_YEAR = S.SCHOOL_YEAR) or (T.SCHOOL_YEAR IS NULL and S.SCHOOL_YEAR IS NULL)) and
		((T.SELLING_METHOD_NAME = S.SELLING_METHOD_NAME) or (T.SELLING_METHOD_NAME IS NULL and S.SELLING_METHOD_NAME IS NULL)) and
		((T.PLANT_NAME = S.PLANT_NAME) or (T.PLANT_NAME IS NULL and S.PLANT_NAME IS NULL)) and
		((T.PHOTOGRAPHY_DATE = S.PHOTOGRAPHY_DATE) or (T.PHOTOGRAPHY_DATE IS NULL and S.PHOTOGRAPHY_DATE IS NULL)) and
		((T.LIFETOUCH_ID = S.LIFETOUCH_ID) or (T.LIFETOUCH_ID IS NULL and S.LIFETOUCH_ID IS NULL)) and
		((T.MARKETING_CODE = S.MARKETING_CODE) or (T.MARKETING_CODE IS NULL and S.MARKETING_CODE IS NULL)) and
		((T.TERRITORY_CODE = S.TERRITORY_CODE) or (T.TERRITORY_CODE IS NULL and S.TERRITORY_CODE IS NULL)) and
		((T.APY_ID = S.APY_ID) or (T.APY_ID IS NULL and S.APY_ID IS NULL)) and
		((T.DESCRIPTION = S.DESCRIPTION) or (T.DESCRIPTION IS NULL and S.DESCRIPTION IS NULL)) and
		((T.PRICE_PROGRAM_NAME = S.PRICE_PROGRAM_NAME) or (T.PRICE_PROGRAM_NAME IS NULL and S.PRICE_PROGRAM_NAME IS NULL)) and
		((T.PHOTOGRAPHY_LOCATION = S.PHOTOGRAPHY_LOCATION) or (T.PHOTOGRAPHY_LOCATION IS NULL and S.PHOTOGRAPHY_LOCATION IS NULL)) and
		((T.STUDIO_CODE = S.STUDIO_CODE) or (T.STUDIO_CODE IS NULL and S.STUDIO_CODE IS NULL)) and
		((T.INTERNET_ORDER_OFFERED_IND = S.INTERNET_ORDER_OFFERED_IND) or (T.INTERNET_ORDER_OFFERED_IND IS NULL and S.INTERNET_ORDER_OFFERED_IND IS NULL)) and
		((T.TERRITORY_GROUP_CODE = S.TERRITORY_GROUP_CODE) or (T.TERRITORY_GROUP_CODE IS NULL and S.TERRITORY_GROUP_CODE IS NULL)) and
		((T.STUDENT_ID_IND = S.STUDENT_ID_IND) or (T.STUDENT_ID_IND IS NULL and S.STUDENT_ID_IND IS NULL)) and
		((T.STUDENT_YB_POSE_SEL_DEADLINE = S.STUDENT_YB_POSE_SEL_DEADLINE) or (T.STUDENT_YB_POSE_SEL_DEADLINE IS NULL and S.STUDENT_YB_POSE_SEL_DEADLINE IS NULL)) and
		((T.PORTRAIT_PRICELIST_PARTNO = S.PORTRAIT_PRICELIST_PARTNO) or (T.PORTRAIT_PRICELIST_PARTNO IS NULL and S.PORTRAIT_PRICELIST_PARTNO IS NULL)) and
		((T.SIT_PRICELIST_PARTNO = S.SIT_PRICELIST_PARTNO) or (T.SIT_PRICELIST_PARTNO IS NULL and S.SIT_PRICELIST_PARTNO IS NULL)) and
		((T.ESTIMATED_ENROLLMENT = S.ESTIMATED_ENROLLMENT) or (T.ESTIMATED_ENROLLMENT IS NULL and S.ESTIMATED_ENROLLMENT IS NULL)) and
		((T.FINANCIAL_PROCESSING_SYSTEM = S.FINANCIAL_PROCESSING_SYSTEM) or (T.FINANCIAL_PROCESSING_SYSTEM IS NULL and S.FINANCIAL_PROCESSING_SYSTEM IS NULL)) and
		((T.FULFILLING_LAB_SYSTEM = S.FULFILLING_LAB_SYSTEM) or (T.FULFILLING_LAB_SYSTEM IS NULL and S.FULFILLING_LAB_SYSTEM IS NULL)) and
		((T.ORIGINAL_BOOKING_REP = S.ORIGINAL_BOOKING_REP) or (T.ORIGINAL_BOOKING_REP IS NULL and S.ORIGINAL_BOOKING_REP IS NULL)) and
		((T.ORIGINAL_BOOKING_REP_NAME = S.ORIGINAL_BOOKING_REP_NAME) or (T.ORIGINAL_BOOKING_REP_NAME IS NULL and S.ORIGINAL_BOOKING_REP_NAME IS NULL)) and
		((T.IMAGE_ACCESS_PRODUCT_IND = S.IMAGE_ACCESS_PRODUCT_IND) or (T.IMAGE_ACCESS_PRODUCT_IND IS NULL and S.IMAGE_ACCESS_PRODUCT_IND IS NULL)) and
		((T.STATUS = S.STATUS) or (T.STATUS IS NULL and S.STATUS IS NULL)) and
		((T.IS_TAX_EXEMPT = S.IS_TAX_EXEMPT) or (T.IS_TAX_EXEMPT IS NULL and S.IS_TAX_EXEMPT IS NULL)) and
		((T.APO_TYPE = S.APO_TYPE) or (T.APO_TYPE IS NULL and S.APO_TYPE IS NULL)) and
		((T.PARENT_NOTIFY_STATUS = S.PARENT_NOTIFY_STATUS) or (T.PARENT_NOTIFY_STATUS IS NULL and S.PARENT_NOTIFY_STATUS IS NULL)) and
		((T.BOOKING_PROGRAM = S.BOOKING_PROGRAM) or (T.BOOKING_PROGRAM IS NULL and S.BOOKING_PROGRAM IS NULL))
        )

  
  

  

 


&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* Create Index on flow table */

create index	RAX_APP_USER.I$_APO_IDX
on		RAX_APP_USER.I$_APO (APO_CODE)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_APO',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 14 */
/* create check table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.SNP_CHECK_TAB 
   ( 
		CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
		SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
		RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
		FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
		ERR_TYPE		VARCHAR2(1 CHAR) NULL,
		ERR_MESS		VARCHAR2(250 CHAR) NULL ,
		CHECK_DATE	DATE NULL,
		ORIGIN		VARCHAR2(100 CHAR) NULL,
		CONS_NAME	VARCHAR2(35 CHAR) NULL,
		CONS_TYPE		VARCHAR2(2 CHAR) NULL,
		ERR_COUNT		NUMBER(10) NULL 
	)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END; 

&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'MART'
and	ORIGIN 		= '(229003)Warehouse_Project.LOAD_APO_DIM_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 16 */
/* create error table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.E$_APO
	(
		ODI_ROW_ID 		UROWID,
		ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
		ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
		ODI_CHECK_DATE	DATE NULL, 
		APO_ID	NUMBER NULL,
		EFFECTIVE_DATE	DATE NULL,
		LOAD_ID	NUMBER NULL,
		ACTIVE_IND	VARCHAR2(5) NULL,
		APO_CODE	VARCHAR2(30) NULL,
		SOURCE_SYSTEM_NAME	VARCHAR2(10) NULL,
		SCHOOL_YEAR	NUMBER NULL,
		SELLING_METHOD_NAME	VARCHAR2(40) NULL,
		PLANT_NAME	VARCHAR2(40) NULL,
		PHOTOGRAPHY_DATE	DATE NULL,
		LIFETOUCH_ID	NUMBER NULL,
		MARKETING_CODE	VARCHAR2(20) NULL,
		TERRITORY_CODE	VARCHAR2(10) NULL,
		APY_ID	NUMBER NULL,
		DESCRIPTION	VARCHAR2(255) NULL,
		PRICE_PROGRAM_NAME	VARCHAR2(50) NULL,
		PHOTOGRAPHY_LOCATION	VARCHAR2(50) NULL,
		STUDIO_CODE	VARCHAR2(50) NULL,
		INTERNET_ORDER_OFFERED_IND	CHAR(1) NULL,
		TERRITORY_GROUP_CODE	VARCHAR2(80) NULL,
		STUDENT_ID_IND	CHAR(1) NULL,
		STUDENT_YB_POSE_SEL_DEADLINE	DATE NULL,
		PORTRAIT_PRICELIST_PARTNO	VARCHAR2(20) NULL,
		SIT_PRICELIST_PARTNO	VARCHAR2(20) NULL,
		ESTIMATED_ENROLLMENT	NUMBER NULL,
		DEFAULT_LOOK_CODE	VARCHAR2(255) NULL,
		FINANCIAL_PROCESSING_SYSTEM	VARCHAR2(255) NULL,
		FULFILLING_LAB_SYSTEM	VARCHAR2(255) NULL,
		ORIGINAL_BOOKING_REP	VARCHAR2(255) NULL,
		ORIGINAL_BOOKING_REP_NAME	VARCHAR2(255) NULL,
		IMAGE_ACCESS_PRODUCT_IND	CHAR(1) NULL,
		STATUS	VARCHAR2(255) NULL,
		IS_TAX_EXEMPT	NUMBER(1) NULL,
		APO_TYPE	VARCHAR2(255) NULL,
		PARENT_NOTIFY_STATUS	VARCHAR2(20) NULL,
		BOOKING_PROGRAM	VARCHAR2(50) NULL,
		ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
		ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
		ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
		ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
		ODI_SESS_NO		VARCHAR2(19 CHAR)
	)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END; 


&


/*-----------------------------------------------*/
/* TASK No. 17 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_APO
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(229003)Warehouse_Project.LOAD_APO_DIM_INT')


&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* Create index on AK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */

BEGIN  
   EXECUTE IMMEDIATE 'create index 	APO_CIX1_flow on RAX_APP_USER.I$_APO (APO_CODE)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -1408 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 19 */
/* insert AK errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15063: The alternate key APO_CIX1 is not unique.',
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	sysdate,
	'APO_CIX1',
	'AK',	
	APO.APO_ID,
	APO.EFFECTIVE_DATE,
	APO.LOAD_ID,
	APO.ACTIVE_IND,
	APO.APO_CODE,
	APO.SOURCE_SYSTEM_NAME,
	APO.SCHOOL_YEAR,
	APO.SELLING_METHOD_NAME,
	APO.PLANT_NAME,
	APO.PHOTOGRAPHY_DATE,
	APO.LIFETOUCH_ID,
	APO.MARKETING_CODE,
	APO.TERRITORY_CODE,
	APO.APY_ID,
	APO.DESCRIPTION,
	APO.PRICE_PROGRAM_NAME,
	APO.PHOTOGRAPHY_LOCATION,
	APO.STUDIO_CODE,
	APO.INTERNET_ORDER_OFFERED_IND,
	APO.TERRITORY_GROUP_CODE,
	APO.STUDENT_ID_IND,
	APO.STUDENT_YB_POSE_SEL_DEADLINE,
	APO.PORTRAIT_PRICELIST_PARTNO,
	APO.SIT_PRICELIST_PARTNO,
	APO.ESTIMATED_ENROLLMENT,
	APO.DEFAULT_LOOK_CODE,
	APO.FINANCIAL_PROCESSING_SYSTEM,
	APO.FULFILLING_LAB_SYSTEM,
	APO.ORIGINAL_BOOKING_REP,
	APO.ORIGINAL_BOOKING_REP_NAME,
	APO.IMAGE_ACCESS_PRODUCT_IND,
	APO.STATUS,
	APO.IS_TAX_EXEMPT,
	APO.APO_TYPE,
	APO.PARENT_NOTIFY_STATUS,
	APO.BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO   APO
where	exists  (
		select	SUB.APO_CODE
		from 	RAX_APP_USER.I$_APO SUB
		where 	SUB.APO_CODE=APO.APO_CODE
		group by 	SUB.APO_CODE
		having 	count(1) > 1
		)



&


/*-----------------------------------------------*/
/* TASK No. 20 */
/* Create index on AK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
create index 	APO_CIX2_flow
on	RAX_APP_USER.I$_APO 
	(APO_ID)


&


/*-----------------------------------------------*/
/* TASK No. 21 */
/* insert AK errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15063: The alternate key APO_CIX2 is not unique.',
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	sysdate,
	'APO_CIX2',
	'AK',	
	APO.APO_ID,
	APO.EFFECTIVE_DATE,
	APO.LOAD_ID,
	APO.ACTIVE_IND,
	APO.APO_CODE,
	APO.SOURCE_SYSTEM_NAME,
	APO.SCHOOL_YEAR,
	APO.SELLING_METHOD_NAME,
	APO.PLANT_NAME,
	APO.PHOTOGRAPHY_DATE,
	APO.LIFETOUCH_ID,
	APO.MARKETING_CODE,
	APO.TERRITORY_CODE,
	APO.APY_ID,
	APO.DESCRIPTION,
	APO.PRICE_PROGRAM_NAME,
	APO.PHOTOGRAPHY_LOCATION,
	APO.STUDIO_CODE,
	APO.INTERNET_ORDER_OFFERED_IND,
	APO.TERRITORY_GROUP_CODE,
	APO.STUDENT_ID_IND,
	APO.STUDENT_YB_POSE_SEL_DEADLINE,
	APO.PORTRAIT_PRICELIST_PARTNO,
	APO.SIT_PRICELIST_PARTNO,
	APO.ESTIMATED_ENROLLMENT,
	APO.DEFAULT_LOOK_CODE,
	APO.FINANCIAL_PROCESSING_SYSTEM,
	APO.FULFILLING_LAB_SYSTEM,
	APO.ORIGINAL_BOOKING_REP,
	APO.ORIGINAL_BOOKING_REP_NAME,
	APO.IMAGE_ACCESS_PRODUCT_IND,
	APO.STATUS,
	APO.IS_TAX_EXEMPT,
	APO.APO_TYPE,
	APO.PARENT_NOTIFY_STATUS,
	APO.BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO   APO
where	exists  (
		select	SUB.APO_ID
		from 	RAX_APP_USER.I$_APO SUB
		where 	SUB.APO_ID=APO.APO_ID
		group by 	SUB.APO_ID
		having 	count(1) > 1
		)



&


/*-----------------------------------------------*/
/* TASK No. 22 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column APO_CODE cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'APO_CODE',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	APO_CODE is null



&


/*-----------------------------------------------*/
/* TASK No. 23 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SOURCE_SYSTEM_NAME cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'SOURCE_SYSTEM_NAME',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	SOURCE_SYSTEM_NAME is null



&


/*-----------------------------------------------*/
/* TASK No. 24 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SCHOOL_YEAR cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'SCHOOL_YEAR',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	SCHOOL_YEAR is null



&


/*-----------------------------------------------*/
/* TASK No. 25 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SELLING_METHOD_NAME cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'SELLING_METHOD_NAME',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	SELLING_METHOD_NAME is null



&


/*-----------------------------------------------*/
/* TASK No. 26 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column PLANT_NAME cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'PLANT_NAME',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	PLANT_NAME is null



&


/*-----------------------------------------------*/
/* TASK No. 27 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column PHOTOGRAPHY_DATE cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'PHOTOGRAPHY_DATE',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	PHOTOGRAPHY_DATE is null



&


/*-----------------------------------------------*/
/* TASK No. 28 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column LIFETOUCH_ID cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'LIFETOUCH_ID',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	LIFETOUCH_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 29 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column MARKETING_CODE cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'MARKETING_CODE',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	MARKETING_CODE is null



&


/*-----------------------------------------------*/
/* TASK No. 30 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column TERRITORY_CODE cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'TERRITORY_CODE',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	TERRITORY_CODE is null



&


/*-----------------------------------------------*/
/* TASK No. 31 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column APY_ID cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'APY_ID',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	APY_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 32 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column DESCRIPTION cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'DESCRIPTION',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	DESCRIPTION is null



&


/*-----------------------------------------------*/
/* TASK No. 33 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column PRICE_PROGRAM_NAME cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'PRICE_PROGRAM_NAME',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	PRICE_PROGRAM_NAME is null



&


/*-----------------------------------------------*/
/* TASK No. 34 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column PHOTOGRAPHY_LOCATION cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'PHOTOGRAPHY_LOCATION',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	PHOTOGRAPHY_LOCATION is null



&


/*-----------------------------------------------*/
/* TASK No. 35 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column STUDIO_CODE cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'STUDIO_CODE',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	STUDIO_CODE is null



&


/*-----------------------------------------------*/
/* TASK No. 36 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column INTERNET_ORDER_OFFERED_IND cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'INTERNET_ORDER_OFFERED_IND',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	INTERNET_ORDER_OFFERED_IND is null



&


/*-----------------------------------------------*/
/* TASK No. 37 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column TERRITORY_GROUP_CODE cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'TERRITORY_GROUP_CODE',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	TERRITORY_GROUP_CODE is null



&


/*-----------------------------------------------*/
/* TASK No. 38 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_APO
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column STUDENT_ID_IND cannot be null.',
	sysdate,
	'(229003)Warehouse_Project.LOAD_APO_DIM_INT',
	'STUDENT_ID_IND',
	'NN',	
	APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	DEFAULT_LOOK_CODE,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
from	RAX_APP_USER.I$_APO
where	STUDENT_ID_IND is null



&


/*-----------------------------------------------*/
/* TASK No. 39 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_APO_IDX on	RAX_APP_USER.E$_APO (ODI_ROW_ID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 40 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_APO  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_APO E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 41 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'MART',
	'APO',
	'MART.APO',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_APO E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(229003)Warehouse_Project.LOAD_APO_DIM_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 42 */
/* Flag rows for update */

/* DETECTION_STRATEGY = NOT_EXISTS */


update	RAX_APP_USER.I$_APO
set	IND_UPDATE = 'U'
where	(APO_CODE)
	in	(
		select	APO_CODE
		from	MART.APO
		)



&


/*-----------------------------------------------*/
/* TASK No. 43 */
/* Flag useless rows */

/* DETECTION_STRATEGY = NOT_EXISTS */

/* Command skipped due to chosen DETECTION_STRATEGY */



/*-----------------------------------------------*/
/* TASK No. 44 */
/* Update existing rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
update	MART.APO T
set 	
	(
	T.ACTIVE_IND,
	T.SOURCE_SYSTEM_NAME,
	T.SCHOOL_YEAR,
	T.SELLING_METHOD_NAME,
	T.PLANT_NAME,
	T.PHOTOGRAPHY_DATE,
	T.LIFETOUCH_ID,
	T.MARKETING_CODE,
	T.TERRITORY_CODE,
	T.APY_ID,
	T.DESCRIPTION,
	T.PRICE_PROGRAM_NAME,
	T.PHOTOGRAPHY_LOCATION,
	T.STUDIO_CODE,
	T.INTERNET_ORDER_OFFERED_IND,
	T.TERRITORY_GROUP_CODE,
	T.STUDENT_ID_IND,
	T.STUDENT_YB_POSE_SEL_DEADLINE,
	T.PORTRAIT_PRICELIST_PARTNO,
	T.SIT_PRICELIST_PARTNO,
	T.ESTIMATED_ENROLLMENT,
	T.FINANCIAL_PROCESSING_SYSTEM,
	T.FULFILLING_LAB_SYSTEM,
	T.ORIGINAL_BOOKING_REP,
	T.ORIGINAL_BOOKING_REP_NAME,
	T.IMAGE_ACCESS_PRODUCT_IND,
	T.STATUS,
	T.IS_TAX_EXEMPT,
	T.APO_TYPE,
	T.PARENT_NOTIFY_STATUS,
	T.BOOKING_PROGRAM
	) =
		(
		select	S.ACTIVE_IND,
			S.SOURCE_SYSTEM_NAME,
			S.SCHOOL_YEAR,
			S.SELLING_METHOD_NAME,
			S.PLANT_NAME,
			S.PHOTOGRAPHY_DATE,
			S.LIFETOUCH_ID,
			S.MARKETING_CODE,
			S.TERRITORY_CODE,
			S.APY_ID,
			S.DESCRIPTION,
			S.PRICE_PROGRAM_NAME,
			S.PHOTOGRAPHY_LOCATION,
			S.STUDIO_CODE,
			S.INTERNET_ORDER_OFFERED_IND,
			S.TERRITORY_GROUP_CODE,
			S.STUDENT_ID_IND,
			S.STUDENT_YB_POSE_SEL_DEADLINE,
			S.PORTRAIT_PRICELIST_PARTNO,
			S.SIT_PRICELIST_PARTNO,
			S.ESTIMATED_ENROLLMENT,
			S.FINANCIAL_PROCESSING_SYSTEM,
			S.FULFILLING_LAB_SYSTEM,
			S.ORIGINAL_BOOKING_REP,
			S.ORIGINAL_BOOKING_REP_NAME,
			S.IMAGE_ACCESS_PRODUCT_IND,
			S.STATUS,
			S.IS_TAX_EXEMPT,
			S.APO_TYPE,
			S.PARENT_NOTIFY_STATUS,
			S.BOOKING_PROGRAM
		from	RAX_APP_USER.I$_APO S
		where	T.APO_CODE	=S.APO_CODE
	    	 )
	,                               T.EFFECTIVE_DATE = sysdate
,
	T.LOAD_ID = :v_sess_no,
	T.DEFAULT_LOOK_CODE = 'NA'

where	(APO_CODE)
	in	(
		select	APO_CODE
		from	RAX_APP_USER.I$_APO
		where	IND_UPDATE = 'U'
		)




&


/*-----------------------------------------------*/
/* TASK No. 45 */
/* Insert new rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
insert into 	MART.APO T
	(
	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
	,                                APO_ID,
	EFFECTIVE_DATE,
	LOAD_ID,
	DEFAULT_LOOK_CODE
	)
select 	ACTIVE_IND,
	APO_CODE,
	SOURCE_SYSTEM_NAME,
	SCHOOL_YEAR,
	SELLING_METHOD_NAME,
	PLANT_NAME,
	PHOTOGRAPHY_DATE,
	LIFETOUCH_ID,
	MARKETING_CODE,
	TERRITORY_CODE,
	APY_ID,
	DESCRIPTION,
	PRICE_PROGRAM_NAME,
	PHOTOGRAPHY_LOCATION,
	STUDIO_CODE,
	INTERNET_ORDER_OFFERED_IND,
	TERRITORY_GROUP_CODE,
	STUDENT_ID_IND,
	STUDENT_YB_POSE_SEL_DEADLINE,
	PORTRAIT_PRICELIST_PARTNO,
	SIT_PRICELIST_PARTNO,
	ESTIMATED_ENROLLMENT,
	FINANCIAL_PROCESSING_SYSTEM,
	FULFILLING_LAB_SYSTEM,
	ORIGINAL_BOOKING_REP,
	ORIGINAL_BOOKING_REP_NAME,
	IMAGE_ACCESS_PRODUCT_IND,
	STATUS,
	IS_TAX_EXEMPT,
	APO_TYPE,
	PARENT_NOTIFY_STATUS,
	BOOKING_PROGRAM
	,                                MART.APO_ID_SEQ.nextval,
	sysdate
,
	:v_sess_no,
	'NA'
from	RAX_APP_USER.I$_APO S



where	IND_UPDATE = 'I'



&


/*-----------------------------------------------*/
/* TASK No. 46 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */

drop table RAX_APP_USER.C$_0APO 

&


/*-----------------------------------------------*/
/* TASK No. 47 */
/* Update mart.apo.apy_id */

merge into mart.apo T
using 
(select 
    APO.APO_ID,
    APY.APY_ID
--    ,APO.MARKETING_CODE, M.MARKETING_CODE,
--    m.sub_program_name ,apy.sub_program_name,
--    apo.lifetouch_id , apy.lifetouch_id,
--    apo.school_year , apy.fiscal_year,apo.*,apy.*,m.*
from 
    mart.APO apo,
    --mart.marketing m ,
    mart.apy apy,
    ods_own.apo ods_apo,
    ods_own.sub_program sp
where (1=1)
    and apo.school_year >= 2014
    --and APO.MARKETING_CODE = M.MARKETING_CODE
    and apo.apo_code = ods_apo.apo_id
    and ods_apo.sub_program_oid = sp.sub_program_oid
    and sp.sub_program_name = apy.sub_program_name
   -- and m.sub_program_name = apy.sub_program_name
    and apo.lifetouch_id = apy.lifetouch_id(+)
    and apo.school_year = apy.fiscal_year(+)
    and APY.APY_ID <> nvl(APO.APY_ID,-1)
) S
on (T.APO_ID = S.APO_ID)
when matched
then update set
    T.APY_ID = S.APY_ID

&


/*-----------------------------------------------*/
/* TASK No. 48 */
/* Update mart.apo.default_look_code */

/* This is stolen from the original translate_y1apo.sql to set the default_look _code */
merge into mart.apo t
using
(select 
    apo.apo_code
    ,max(trim(lt.name)) default_look_code
--,max(apo.DEFAULT_LOOK_CODE) old_DEFAULT_LOOK_CODE
--,max(apo.SCHOOL_YEAR)
 from 
    mart.apo apo
    ,ods.y1lt_apo_curr apoc
    ,ods.y1lt_layout_theme_assoc_curr a
    ,ods.lm_layout_theme_curr lt
where (1=1)
    and APO.SCHOOL_YEAR >= 2014
    and apoc.VISUAL_MERCH_KEY=a.VISUAL_MERCH_KEY
    and a.LOOK_LAYOUT_THEME_ID=lt.EXTERNAL_KEY
    and a.look_no='D'
    and a.active_ind='A'
    and apo.apo_code=apoc.apo_id
--s.DEFAULT_LOOK_CODE=a.DEFAULT_LOOK_CODE    
group by 
    apo.apo_code
having max(trim(lt.name)) <> max(apo.DEFAULT_LOOK_CODE)
) s
on (t.apo_code=s.apo_code)
when matched then  update
set t.DEFAULT_LOOK_CODE=s.DEFAULT_LOOK_CODE

&


/*-----------------------------------------------*/
/* TASK No. 49 */
/* Update mart.apo.portrait_pricelist_partno */

merge into mart.apo t
using
(select 
    apo.apo_code
    ,max(nvl(pp.extn_portrait_pricelist_partno,'.')) as portrait_pricelist_partno
    ,max(nvl(pp.extn_sit_pricelist_partno,'.')) as sit_pricelist_partno
 from 
mart.apo apo
,(   select 
    'OMS2' SOURCE_SYSTEM_NAME,price_program_name,extn_portrait_pricelist_partno,extn_sit_pricelist_partno
    from
        ods.y0yfs_price_program_curr
    where (extn_portrait_pricelist_partno is not null or extn_sit_pricelist_partno is not null)
    group by 
    'OMS2',price_program_name,extn_portrait_pricelist_partno,extn_sit_pricelist_partno
UNION
    select 
    'APOCS' SOURCE_SYSTEM_NAME,price_program_name,extn_portrait_pricelist_partno,extn_sit_pricelist_partno
    from
        ods.y1yfs_price_program_curr
    where (extn_portrait_pricelist_partno is not null or extn_sit_pricelist_partno is not null)
    group by 
    'APOCS',price_program_name,extn_portrait_pricelist_partno,extn_sit_pricelist_partno
) pp
where (1=1)
--and APO.SCHOOL_YEAR >= 2014
and APO.SOURCE_SYSTEM_NAME in ('APOCS','FOW','OMS2')
and APO.PRICE_PROGRAM_NAME = pp.price_program_name(+) and case when APO.SOURCE_SYSTEM_NAME in ('APOCS','FOW') then 'APOCS' else APO.SOURCE_SYSTEM_NAME end = pp.SOURCE_SYSTEM_NAME(+)  
and ( nvl(pp.extn_portrait_pricelist_partno,'.') <> apo.portrait_pricelist_partno
   or nvl(pp.extn_sit_pricelist_partno,'.') <> apo.sit_pricelist_partno)
group by 
    apo.apo_code
) s
on (t.apo_code=s.apo_code)
when matched then  update
set t.portrait_pricelist_partno=s.portrait_pricelist_partno
,t.sit_pricelist_partno=s.sit_pricelist_partno

&


/*-----------------------------------------------*/
/* TASK No. 50 */
/* update mart.booking_sub_program */

merge into mart.apo t
using (
 select mapo.apo_id, sp.sub_program_name from ods_own.apo apo
  ,ods_own.booking_opportunity bo
  ,ods_own.sub_program sp
  ,mart.apo mapo
  where apo.booking_opp_oid = bo.booking_opportunity_oid
  and bo.sub_program_oid = sp.sub_program_oid
  and apo.apo_id = mapo.apo_code
  and apo.school_year >2017
  and nvl(mapo.booking_sub_program,'.') <> sp.sub_program_name
)s
on (s.apo_id = t.apo_id)
when matched then update
set t.booking_sub_program = s.sub_program_name

&


/*-----------------------------------------------*/
/* TASK No. 51 */
/* Update CDC Load Status */

UPDATE ODS.DW_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS') 
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE DW_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env


&


/*-----------------------------------------------*/
/* TASK No. 52 */
/* Insert Audit Record */

INSERT INTO RAX_APP_USER.DW_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,              
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_APO_DIM',
'018',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          ),
:v_cdc_ods_overlap,
SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS.DW_CDC_LOAD_STATUS
WHERE DW_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env


&


/*-----------------------------------------------*/
