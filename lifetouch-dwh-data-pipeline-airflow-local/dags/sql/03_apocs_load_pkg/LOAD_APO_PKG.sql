
BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0STG_APO',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;

&& /*-----------------------------------------------*/
/* TASK No. 9 */
/* Create target table  */





BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.STG_APO
(
	ORDER_FORM_ITEMID	VARCHAR2(255) NULL,
	LAB_NOTES	VARCHAR2(255) NULL,
	SERVICE_CENTER	VARCHAR2(255) NULL,
	GLOSSY_SUBMISSION_DATE	TIMESTAMP(6) NULL,
	GLOSSIES_REQD	VARCHAR2(255) NULL,
	SHIP_PROOFS_TO_STUDIO_ATTN	VARCHAR2(255) NULL,
	SHIP_ORDER_TO_STUDIO_ATTN	VARCHAR2(255) NULL,
	SPECIAL_COMMISSION	FLOAT(126) NULL,
	YB_SELECTION_ONLINE	VARCHAR2(255) NULL,
	MULTIPLE_IMAGES_OPTION	VARCHAR2(255) NULL,
	AUDIT_MODIFY_DATE	TIMESTAMP(6) NULL,
	SELECT_ORDER_BY_PHONE_NO	VARCHAR2(255) NULL,
	ENVELOPE_TYPE	VARCHAR2(255) NULL,
	ORDER_ASSIST_REQD	VARCHAR2(255) NULL,
	MARKETING_CODE	VARCHAR2(255) NULL,
	BUSINESS_KEY	VARCHAR2(255) NULL,
	YEARBOOK_OUTFIT_OTHER1	VARCHAR2(255) NULL,
	PUBLISHER_ADDRESS	NUMBER(19) NULL,
	YEARBOOK_SPL_INST	VARCHAR2(255) NULL,
	PHOTOGRAPHY_LOCATION	VARCHAR2(255) NULL,
	RETAKE_ORDERFORM_DUEDATE	NUMBER(19) NULL,
	COMPOSITE_PRODUCT_CODE	VARCHAR2(255) NULL,
	IS_HISTORY	VARCHAR2(255) NULL,
	TAX_EXEMPT	VARCHAR2(255) NULL,
	ORDER_INQUIRY_NO	VARCHAR2(255) NULL,
	STATUS	VARCHAR2(255) NULL,
	STUDIOID	VARCHAR2(255) NULL,
	ORIGINAL_ORDERFORM_DUEDATE	NUMBER(19) NULL,
	YEARBOOK_POSE_STYLE1	VARCHAR2(255) NULL,
	BOYS_TASSEL_COLOR2	VARCHAR2(255) NULL,
	PROCESSING_LAB	VARCHAR2(255) NULL,
	SHIP_GLOSSIES_TO_STUDIO_ATTN	VARCHAR2(255) NULL,
	SELLER_FOR_ORDER	VARCHAR2(255) NULL,
	GLOSSIES_DELIVERY_DEADLINE	TIMESTAMP(6) NULL,
	APO_ID	NUMBER(19) NULL,
	GRAD_YEAR	NUMBER(10) NULL,
	BOYS_GOWN_COLOR2	VARCHAR2(255) NULL,
	ORDER_RETURN_MSG_REQD	VARCHAR2(255) NULL,
	FULFILLING_LAB_SYSTEM	VARCHAR2(255) NULL,
	ORDER_REMINDER_REQD	VARCHAR2(255) NULL,
	TERRITORY_GROUPID	VARCHAR2(255) NULL,
	VISUAL_MERCH_KEY	VARCHAR2(255) NULL,
	YEARBOOK_POSE_STYLE_OTHER1	VARCHAR2(255) NULL,
	YEARBOOK_OUTFIT1	VARCHAR2(255) NULL,
	FLYERID	VARCHAR2(255) NULL,
	VISION_JOB_NO	VARCHAR2(255) NULL,
	SHIP_GLOSSIES_TO	VARCHAR2(255) NULL,
	AUDIT_CREATE_DATE	TIMESTAMP(6) NULL,
	GIRLS_GOWN_COLOR1	VARCHAR2(255) NULL,
	LAB_REVISION_NUMBER	NUMBER(10) NULL,
	GRAD_ANNOUNCE_PSTR_INSRT	VARCHAR2(255) NULL,
	YEARBOOK_BACK_GROUND_OTHER2	VARCHAR2(255) NULL,
	GIRLS_GOWN_COLOR2	VARCHAR2(255) NULL,
	LIFETOUCH_ID	NUMBER(19) NULL,
	SELLING_METHOD	VARCHAR2(255) NULL,
	INCLUDE_RETURN_ENVELOPE	VARCHAR2(255) NULL,
	CURRENCY	VARCHAR2(255) NULL,
	COMMISSION_GUARANTEED	FLOAT(126) NULL,
	GLOSSIES_PAPER_DEADLINE	TIMESTAMP(6) NULL,
	SELECT_ORDER_INQUIRY_NO	VARCHAR2(255) NULL,
	YEARBOOK_OUTFIT2	VARCHAR2(255) NULL,
	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	MODEL_GENDER	VARCHAR2(255) NULL,
	PROGRAM_TYPE	VARCHAR2(255) NULL,
	LOCKID	NUMBER(10) NULL,
	NUMBER_OF_PROOF_SETS	NUMBER(10) NULL,
	GROUP_PRODUCT_CODE	VARCHAR2(255) NULL,
	OTHER_PUBLISHER	VARCHAR2(255) NULL,
	BOYS_GOWN_COLOR1	VARCHAR2(255) NULL,
	YEARBOOK_POSE_STYLE2	VARCHAR2(255) NULL,
	YEARBOOK_BACK_GROUND_OTHER1	VARCHAR2(255) NULL,
	TAX_EXEMPT_CERTIFICATE_NUMBER	VARCHAR2(255) NULL,
	COMMISSION_PER_CUSTOMER	FLOAT(126) NULL,
	YEARBOOK_POSE_REQD	VARCHAR2(255) NULL,
	GLOSSIES_OUTPUT	VARCHAR2(255) NULL,
	EVENT_IMAGE_COMPLETE	VARCHAR2(255) NULL,
	SUB_PROGRAM_TYPE	VARCHAR2(255) NULL,
	REVISION_NO	NUMBER(10) NULL,
	IS_PROOF_EXPRESS	VARCHAR2(255) NULL,
	YEARBOOK_POSE_STYLE_OTHER2	VARCHAR2(255) NULL,
	TERRITORYID	VARCHAR2(255) NULL,
	EVALUATE	VARCHAR2(255) NULL,
	SHIP_ORDERS_TO	VARCHAR2(255) NULL,
	COMMISSION_PERCENTAGE	FLOAT(126) NULL,
	CONFIRMED_PROCESSING_LAB	VARCHAR2(255) NULL,
	BOYS_TASSEL_COLOR1	VARCHAR2(255) NULL,
	TERRITORY_NOTES	VARCHAR2(255) NULL,
	GIRLS_TASSEL_COLOR1	VARCHAR2(255) NULL,
	SORT_TYPE	VARCHAR2(255) NULL,
	APO_OVRID_VM_ID	NUMBER(19) NULL,
	VM_ID	NUMBER(19) NULL,
	SHIP_ORDERS_TO_STUDIO_CODE	VARCHAR2(255) NULL,
	COMPOSITE_DELIVERY_TYPE	VARCHAR2(255) NULL,
	SHIP_PROOFS_TO	VARCHAR2(255) NULL,
	DESCRIPTION	VARCHAR2(255) NULL,
	CUSTOM_LANGUAGE	VARCHAR2(255) NULL,
	SOLO_ACCESS	VARCHAR2(255) NULL,
	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
	PRINTABLE_FRAMES	VARCHAR2(255) NULL,
	MODEL_ETHNICITY	VARCHAR2(255) NULL,
	ESTIMATED_ENROLLMENT	NUMBER(10) NULL,
	INCLUDE_ORDER_FORM	VARCHAR2(255) NULL,
	SHIP_TO_ACCOUNT_BUFFER_DAYS	NUMBER(19) NULL,
	GUARANTEED_DOLLAR_AMOUNT	FLOAT(126) NULL,
	MODEL_GRADE	VARCHAR2(255) NULL,
	SHIP_PROOFS_TO_STUDIO_CODE	VARCHAR2(255) NULL,
	YEARBOOK_BACK_GROUND1	VARCHAR2(255) NULL,
	GROUP_DELIVERY_TYPE	VARCHAR2(255) NULL,
	YEARBOOK_BACK_GROUND2	VARCHAR2(255) NULL,
	STUDENTID_REQD	VARCHAR2(255) NULL,
	GIRLS_TASSEL_COLOR2	VARCHAR2(255) NULL,
	SHIP_GLOSSIES_TO_STUDIO_CODE	VARCHAR2(255) NULL,
	YEARBOOK_OUTFIT_OTHER2	VARCHAR2(255) NULL,
	FINANCIAL_PROCESSING_SYSTEM	VARCHAR2(255) NULL,
	NUMBER_OF_GLOSSY_SETS	NUMBER(10) NULL,
	ORDER_BY_PHON_NO	VARCHAR2(255) NULL,
	PRICE_PROGRAM_NAME	VARCHAR2(255) NULL,
	VISUAL_MERCH_PAYMENT_MODE	VARCHAR2(255) NULL,
	VM_BUSINESS_KEY	VARCHAR2(255) NULL,
	LIFETOUCH_PHOTOGRAPHED	VARCHAR2(1) NULL
)';  
EXCEPTION  
   WHEN OTHERS THEN  
      NULL;
END;
&& /*-----------------------------------------------*/
/* TASK No. 10 */
/* Truncate target table */



truncate table RAX_APP_USER.STG_APO

&& /*-----------------------------------------------*/
/* TASK No. 11 */
/* Insert new rows */



insert into	RAX_APP_USER.STG_APO 
( 
	ORDER_FORM_ITEMID,
	LAB_NOTES,
	SERVICE_CENTER,
	GLOSSY_SUBMISSION_DATE,
	GLOSSIES_REQD,
	SHIP_PROOFS_TO_STUDIO_ATTN,
	SHIP_ORDER_TO_STUDIO_ATTN,
	SPECIAL_COMMISSION,
	YB_SELECTION_ONLINE,
	MULTIPLE_IMAGES_OPTION,
	AUDIT_MODIFY_DATE,
	SELECT_ORDER_BY_PHONE_NO,
	ENVELOPE_TYPE,
	ORDER_ASSIST_REQD,
	MARKETING_CODE,
	BUSINESS_KEY,
	YEARBOOK_OUTFIT_OTHER1,
	PUBLISHER_ADDRESS,
	YEARBOOK_SPL_INST,
	PHOTOGRAPHY_LOCATION,
	RETAKE_ORDERFORM_DUEDATE,
	COMPOSITE_PRODUCT_CODE,
	IS_HISTORY,
	TAX_EXEMPT,
	ORDER_INQUIRY_NO,
	STATUS,
	STUDIOID,
	ORIGINAL_ORDERFORM_DUEDATE,
	YEARBOOK_POSE_STYLE1,
	BOYS_TASSEL_COLOR2,
	PROCESSING_LAB,
	SHIP_GLOSSIES_TO_STUDIO_ATTN,
	SELLER_FOR_ORDER,
	GLOSSIES_DELIVERY_DEADLINE,
	APO_ID,
	GRAD_YEAR,
	BOYS_GOWN_COLOR2,
	ORDER_RETURN_MSG_REQD,
	FULFILLING_LAB_SYSTEM,
	ORDER_REMINDER_REQD,
	TERRITORY_GROUPID,
	VISUAL_MERCH_KEY,
	YEARBOOK_POSE_STYLE_OTHER1,
	YEARBOOK_OUTFIT1,
	FLYERID,
	VISION_JOB_NO,
	SHIP_GLOSSIES_TO,
	AUDIT_CREATE_DATE,
	GIRLS_GOWN_COLOR1,
	LAB_REVISION_NUMBER,
	GRAD_ANNOUNCE_PSTR_INSRT,
	YEARBOOK_BACK_GROUND_OTHER2,
	GIRLS_GOWN_COLOR2,
	LIFETOUCH_ID,
	SELLING_METHOD,
	INCLUDE_RETURN_ENVELOPE,
	CURRENCY,
	COMMISSION_GUARANTEED,
	GLOSSIES_PAPER_DEADLINE,
	SELECT_ORDER_INQUIRY_NO,
	YEARBOOK_OUTFIT2,
	AUDIT_CREATED_BY,
	MODEL_GENDER,
	PROGRAM_TYPE,
	LOCKID,
	NUMBER_OF_PROOF_SETS,
	GROUP_PRODUCT_CODE,
	OTHER_PUBLISHER,
	BOYS_GOWN_COLOR1,
	YEARBOOK_POSE_STYLE2,
	YEARBOOK_BACK_GROUND_OTHER1,
	TAX_EXEMPT_CERTIFICATE_NUMBER,
	COMMISSION_PER_CUSTOMER,
	YEARBOOK_POSE_REQD,
	GLOSSIES_OUTPUT,
	EVENT_IMAGE_COMPLETE,
	SUB_PROGRAM_TYPE,
	REVISION_NO,
	IS_PROOF_EXPRESS,
	YEARBOOK_POSE_STYLE_OTHER2,
	TERRITORYID,
	EVALUATE,
	SHIP_ORDERS_TO,
	COMMISSION_PERCENTAGE,
	CONFIRMED_PROCESSING_LAB,
	BOYS_TASSEL_COLOR1,
	TERRITORY_NOTES,
	GIRLS_TASSEL_COLOR1,
	SORT_TYPE,
	APO_OVRID_VM_ID,
	VM_ID,
	SHIP_ORDERS_TO_STUDIO_CODE,
	COMPOSITE_DELIVERY_TYPE,
	SHIP_PROOFS_TO,
	DESCRIPTION,
	CUSTOM_LANGUAGE,
	SOLO_ACCESS,
	AUDIT_MODIFIED_BY,
	PRINTABLE_FRAMES,
	MODEL_ETHNICITY,
	ESTIMATED_ENROLLMENT,
	INCLUDE_ORDER_FORM,
	SHIP_TO_ACCOUNT_BUFFER_DAYS,
	GUARANTEED_DOLLAR_AMOUNT,
	MODEL_GRADE,
	SHIP_PROOFS_TO_STUDIO_CODE,
	YEARBOOK_BACK_GROUND1,
	GROUP_DELIVERY_TYPE,
	YEARBOOK_BACK_GROUND2,
	STUDENTID_REQD,
	GIRLS_TASSEL_COLOR2,
	SHIP_GLOSSIES_TO_STUDIO_CODE,
	YEARBOOK_OUTFIT_OTHER2,
	FINANCIAL_PROCESSING_SYSTEM,
	NUMBER_OF_GLOSSY_SETS,
	ORDER_BY_PHON_NO,
	PRICE_PROGRAM_NAME,
	VISUAL_MERCH_PAYMENT_MODE,
	VM_BUSINESS_KEY,
	LIFETOUCH_PHOTOGRAPHED 
	 
) 

select
    ORDER_FORM_ITEMID,
	LAB_NOTES,
	SERVICE_CENTER,
	GLOSSY_SUBMISSION_DATE,
	GLOSSIES_REQD,
	SHIP_PROOFS_TO_STUDIO_ATTN,
	SHIP_ORDER_TO_STUDIO_ATTN,
	SPECIAL_COMMISSION,
	YB_SELECTION_ONLINE,
	MULTIPLE_IMAGES_OPTION,
	AUDIT_MODIFY_DATE,
	SELECT_ORDER_BY_PHONE_NO,
	ENVELOPE_TYPE,
	ORDER_ASSIST_REQD,
	MARKETING_CODE,
	BUSINESS_KEY,
	YEARBOOK_OUTFIT_OTHER1,
	PUBLISHER_ADDRESS,
	YEARBOOK_SPL_INST,
	PHOTOGRAPHY_LOCATION,
	RETAKE_ORDERFORM_DUEDATE,
	COMPOSITE_PRODUCT_CODE,
	IS_HISTORY,
	TAX_EXEMPT,
	ORDER_INQUIRY_NO,
	STATUS,
	STUDIOID,
	ORIGINAL_ORDERFORM_DUEDATE,
	YEARBOOK_POSE_STYLE1,
	BOYS_TASSEL_COLOR2,
	PROCESSING_LAB,
	SHIP_GLOSSIES_TO_STUDIO_ATTN,
	SELLER_FOR_ORDER,
	GLOSSIES_DELIVERY_DEADLINE,
	APO_ID,
	GRAD_YEAR,
	BOYS_GOWN_COLOR2,
	ORDER_RETURN_MSG_REQD,
	FULFILLING_LAB_SYSTEM,
	ORDER_REMINDER_REQD,
	TERRITORY_GROUPID,
	VISUAL_MERCH_KEY,
	YEARBOOK_POSE_STYLE_OTHER1,
	YEARBOOK_OUTFIT1,
	FLYERID,
	VISION_JOB_NO,
	SHIP_GLOSSIES_TO,
	AUDIT_CREATE_DATE,
	GIRLS_GOWN_COLOR1,
	LAB_REVISION_NUMBER,
	GRAD_ANNOUNCE_PSTR_INSRT,
	YEARBOOK_BACK_GROUND_OTHER2,
	GIRLS_GOWN_COLOR2,
	LIFETOUCH_ID,
	SELLING_METHOD,
	INCLUDE_RETURN_ENVELOPE,
	CURRENCY,
	COMMISSION_GUARANTEED,
	GLOSSIES_PAPER_DEADLINE,
	SELECT_ORDER_INQUIRY_NO,
	YEARBOOK_OUTFIT2,
	AUDIT_CREATED_BY,
	MODEL_GENDER,
	PROGRAM_TYPE,
	LOCKID,
	NUMBER_OF_PROOF_SETS,
	GROUP_PRODUCT_CODE,
	OTHER_PUBLISHER,
	BOYS_GOWN_COLOR1,
	YEARBOOK_POSE_STYLE2,
	YEARBOOK_BACK_GROUND_OTHER1,
	TAX_EXEMPT_CERTIFICATE_NUMBER,
	COMMISSION_PER_CUSTOMER,
	YEARBOOK_POSE_REQD,
	GLOSSIES_OUTPUT,
	EVENT_IMAGE_COMPLETE,
	SUB_PROGRAM_TYPE,
	REVISION_NO,
	IS_PROOF_EXPRESS,
	YEARBOOK_POSE_STYLE_OTHER2,
	TERRITORYID,
	EVALUATE,
	SHIP_ORDERS_TO,
	COMMISSION_PERCENTAGE,
	CONFIRMED_PROCESSING_LAB,
	BOYS_TASSEL_COLOR1,
	TERRITORY_NOTES,
	GIRLS_TASSEL_COLOR1,
	SORT_TYPE,
	APO_OVRID_VM_ID,
	VM_ID,
	SHIP_ORDERS_TO_STUDIO_CODE,
	COMPOSITE_DELIVERY_TYPE,
	SHIP_PROOFS_TO,
	DESCRIPTION,
	CUSTOM_LANGUAGE,
	SOLO_ACCESS,
	AUDIT_MODIFIED_BY,
	PRINTABLE_FRAMES,
	MODEL_ETHNICITY,
	ESTIMATED_ENROLLMENT,
	INCLUDE_ORDER_FORM,
	SHIP_TO_ACCOUNT_BUFFER_DAYS,
	GUARANTEED_DOLLAR_AMOUNT,
	MODEL_GRADE,
	SHIP_PROOFS_TO_STUDIO_CODE,
	YEARBOOK_BACK_GROUND1,
	GROUP_DELIVERY_TYPE,
	YEARBOOK_BACK_GROUND2,
	STUDENTID_REQD,
	GIRLS_TASSEL_COLOR2,
	SHIP_GLOSSIES_TO_STUDIO_CODE,
	YEARBOOK_OUTFIT_OTHER2,
	FINANCIAL_PROCESSING_SYSTEM,
	NUMBER_OF_GLOSSY_SETS,
	ORDER_BY_PHON_NO,
	PRICE_PROGRAM_NAME,
	VISUAL_MERCH_PAYMENT_MODE,
	VM_BUSINESS_KEY,
	LIFETOUCH_PHOTOGRAPHED   
   
FROM (	


select 	
	C1_ORDER_FORM_ITEMID ORDER_FORM_ITEMID,
	C2_LAB_NOTES LAB_NOTES,
	C3_SERVICE_CENTER SERVICE_CENTER,
	C4_GLOSSY_SUBMISSION_DATE GLOSSY_SUBMISSION_DATE,
	C5_GLOSSIES_REQD GLOSSIES_REQD,
	C6_SHIP_PROOFS_TO_STUDIO_ATTN SHIP_PROOFS_TO_STUDIO_ATTN,
	C7_SHIP_ORDER_TO_STUDIO_ATTN SHIP_ORDER_TO_STUDIO_ATTN,
	C8_SPECIAL_COMMISSION SPECIAL_COMMISSION,
	C9_YB_SELECTION_ONLINE YB_SELECTION_ONLINE,
	C10_MULTIPLE_IMAGES_OPTION MULTIPLE_IMAGES_OPTION,
	C11_AUDIT_MODIFY_DATE AUDIT_MODIFY_DATE,
	C12_SELECT_ORDER_BY_PHONE_NO SELECT_ORDER_BY_PHONE_NO,
	C13_ENVELOPE_TYPE ENVELOPE_TYPE,
	C14_ORDER_ASSIST_REQD ORDER_ASSIST_REQD,
	C15_MARKETING_CODE MARKETING_CODE,
	C16_BUSINESS_KEY BUSINESS_KEY,
	C17_YEARBOOK_OUTFIT_OTHER1 YEARBOOK_OUTFIT_OTHER1,
	C18_PUBLISHER_ADDRESS PUBLISHER_ADDRESS,
	C19_YEARBOOK_SPL_INST YEARBOOK_SPL_INST,
	C20_PHOTOGRAPHY_LOCATION PHOTOGRAPHY_LOCATION,
	C21_RETAKE_ORDERFORM_DUEDATE RETAKE_ORDERFORM_DUEDATE,
	C22_COMPOSITE_PRODUCT_CODE COMPOSITE_PRODUCT_CODE,
	C23_IS_HISTORY IS_HISTORY,
	C24_TAX_EXEMPT TAX_EXEMPT,
	C25_ORDER_INQUIRY_NO ORDER_INQUIRY_NO,
	C26_STATUS STATUS,
	C27_STUDIOID STUDIOID,
	C28_ORIGINAL_ORDERFORM_DUEDATE ORIGINAL_ORDERFORM_DUEDATE,
	C29_YEARBOOK_POSE_STYLE1 YEARBOOK_POSE_STYLE1,
	C30_BOYS_TASSEL_COLOR2 BOYS_TASSEL_COLOR2,
	C31_PROCESSING_LAB PROCESSING_LAB,
	C32_SHIP_GLOSSIES_TO_STUDIO_AT SHIP_GLOSSIES_TO_STUDIO_ATTN,
	C33_SELLER_FOR_ORDER SELLER_FOR_ORDER,
	C34_GLOSSIES_DELIVERY_DEADLINE GLOSSIES_DELIVERY_DEADLINE,
	C35_APO_ID APO_ID,
	C36_GRAD_YEAR GRAD_YEAR,
	C37_BOYS_GOWN_COLOR2 BOYS_GOWN_COLOR2,
	C38_ORDER_RETURN_MSG_REQD ORDER_RETURN_MSG_REQD,
	C39_FULFILLING_LAB_SYSTEM FULFILLING_LAB_SYSTEM,
	C40_ORDER_REMINDER_REQD ORDER_REMINDER_REQD,
	C41_TERRITORY_GROUPID TERRITORY_GROUPID,
	C42_VISUAL_MERCH_KEY VISUAL_MERCH_KEY,
	C43_YEARBOOK_POSE_STYLE_OTHER1 YEARBOOK_POSE_STYLE_OTHER1,
	C44_YEARBOOK_OUTFIT1 YEARBOOK_OUTFIT1,
	C45_FLYERID FLYERID,
	C46_VISION_JOB_NO VISION_JOB_NO,
	C47_SHIP_GLOSSIES_TO SHIP_GLOSSIES_TO,
	C48_AUDIT_CREATE_DATE AUDIT_CREATE_DATE,
	C49_GIRLS_GOWN_COLOR1 GIRLS_GOWN_COLOR1,
	C50_LAB_REVISION_NUMBER LAB_REVISION_NUMBER,
	C51_GRAD_ANNOUNCE_PSTR_INSRT GRAD_ANNOUNCE_PSTR_INSRT,
	C52_YEARBOOK_BACK_GROUND_OTHER YEARBOOK_BACK_GROUND_OTHER2,
	C53_GIRLS_GOWN_COLOR2 GIRLS_GOWN_COLOR2,
	C54_LIFETOUCH_ID LIFETOUCH_ID,
	C55_SELLING_METHOD SELLING_METHOD,
	C56_INCLUDE_RETURN_ENVELOPE INCLUDE_RETURN_ENVELOPE,
	C57_CURRENCY CURRENCY,
	C58_COMMISSION_GUARANTEED COMMISSION_GUARANTEED,
	C59_GLOSSIES_PAPER_DEADLINE GLOSSIES_PAPER_DEADLINE,
	C60_SELECT_ORDER_INQUIRY_NO SELECT_ORDER_INQUIRY_NO,
	C61_YEARBOOK_OUTFIT2 YEARBOOK_OUTFIT2,
	C62_AUDIT_CREATED_BY AUDIT_CREATED_BY,
	C63_MODEL_GENDER MODEL_GENDER,
	C64_PROGRAM_TYPE PROGRAM_TYPE,
	C65_LOCKID LOCKID,
	C66_NUMBER_OF_PROOF_SETS NUMBER_OF_PROOF_SETS,
	C67_GROUP_PRODUCT_CODE GROUP_PRODUCT_CODE,
	C68_OTHER_PUBLISHER OTHER_PUBLISHER,
	C69_BOYS_GOWN_COLOR1 BOYS_GOWN_COLOR1,
	C70_YEARBOOK_POSE_STYLE2 YEARBOOK_POSE_STYLE2,
	C71_YEARBOOK_BACK_GROUND_OTHER YEARBOOK_BACK_GROUND_OTHER1,
	C72_TAX_EXEMPT_CERTIFICATE_NUM TAX_EXEMPT_CERTIFICATE_NUMBER,
	C73_COMMISSION_PER_CUSTOMER COMMISSION_PER_CUSTOMER,
	C74_YEARBOOK_POSE_REQD YEARBOOK_POSE_REQD,
	C75_GLOSSIES_OUTPUT GLOSSIES_OUTPUT,
	C76_EVENT_IMAGE_COMPLETE EVENT_IMAGE_COMPLETE,
	C77_SUB_PROGRAM_TYPE SUB_PROGRAM_TYPE,
	C78_REVISION_NO REVISION_NO,
	C79_IS_PROOF_EXPRESS IS_PROOF_EXPRESS,
	C80_YEARBOOK_POSE_STYLE_OTHER2 YEARBOOK_POSE_STYLE_OTHER2,
	C81_TERRITORYID TERRITORYID,
	C82_EVALUATE EVALUATE,
	C83_SHIP_ORDERS_TO SHIP_ORDERS_TO,
	C84_COMMISSION_PERCENTAGE COMMISSION_PERCENTAGE,
	C85_CONFIRMED_PROCESSING_LAB CONFIRMED_PROCESSING_LAB,
	C86_BOYS_TASSEL_COLOR1 BOYS_TASSEL_COLOR1,
	C87_TERRITORY_NOTES TERRITORY_NOTES,
	C88_GIRLS_TASSEL_COLOR1 GIRLS_TASSEL_COLOR1,
	C89_SORT_TYPE SORT_TYPE,
	C90_APO_OVRID_VM_ID APO_OVRID_VM_ID,
	C91_VM_ID VM_ID,
	C92_SHIP_ORDERS_TO_STUDIO_CODE SHIP_ORDERS_TO_STUDIO_CODE,
	C93_COMPOSITE_DELIVERY_TYPE COMPOSITE_DELIVERY_TYPE,
	C94_SHIP_PROOFS_TO SHIP_PROOFS_TO,
	C95_DESCRIPTION DESCRIPTION,
	C96_CUSTOM_LANGUAGE CUSTOM_LANGUAGE,
	C97_SOLO_ACCESS SOLO_ACCESS,
	C98_AUDIT_MODIFIED_BY AUDIT_MODIFIED_BY,
	C99_PRINTABLE_FRAMES PRINTABLE_FRAMES,
	C100_MODEL_ETHNICITY MODEL_ETHNICITY,
	C101_ESTIMATED_ENROLLMENT ESTIMATED_ENROLLMENT,
	C102_INCLUDE_ORDER_FORM INCLUDE_ORDER_FORM,
	C103_SHIP_TO_ACCOUNT_BUFFER_DA SHIP_TO_ACCOUNT_BUFFER_DAYS,
	C104_GUARANTEED_DOLLAR_AMOUNT GUARANTEED_DOLLAR_AMOUNT,
	C105_MODEL_GRADE MODEL_GRADE,
	C106_SHIP_PROOFS_TO_STUDIO_COD SHIP_PROOFS_TO_STUDIO_CODE,
	C107_YEARBOOK_BACK_GROUND1 YEARBOOK_BACK_GROUND1,
	C108_GROUP_DELIVERY_TYPE GROUP_DELIVERY_TYPE,
	C109_YEARBOOK_BACK_GROUND2 YEARBOOK_BACK_GROUND2,
	C110_STUDENTID_REQD STUDENTID_REQD,
	C111_GIRLS_TASSEL_COLOR2 GIRLS_TASSEL_COLOR2,
	C112_SHIP_GLOSSIES_TO_STUDIO_C SHIP_GLOSSIES_TO_STUDIO_CODE,
	C113_YEARBOOK_OUTFIT_OTHER2 YEARBOOK_OUTFIT_OTHER2,
	C114_FINANCIAL_PROCESSING_SYST FINANCIAL_PROCESSING_SYSTEM,
	C115_NUMBER_OF_GLOSSY_SETS NUMBER_OF_GLOSSY_SETS,
	C116_ORDER_BY_PHON_NO ORDER_BY_PHON_NO,
	C117_PRICE_PROGRAM_NAME PRICE_PROGRAM_NAME,
	C118_VISUAL_MERCH_PAYMENT_MODE VISUAL_MERCH_PAYMENT_MODE,
	C119_VM_BUSINESS_KEY VM_BUSINESS_KEY,
	C120_LIFETOUCH_PHOTOGRAPHED LIFETOUCH_PHOTOGRAPHED 
from	RAX_APP_USER.C$_0STG_APO
where		(1=1)	






)    ODI_GET_FROM

&& /*-----------------------------------------------*/
/* TASK No. 12 */
/* Commit transaction */
/* commit */
/*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */


 /* drop table RAX_APP_USER.C$_0STG_APO */ 


BEGIN
    EXECUTE IMMEDIATE 'drop table RAX_APP_USER.C$_0STG_APO';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
    END;
    

&& /*-----------------------------------------------*/
/* TASK No. 13 */
/* APOCS MERGE INTO ODS_STAGE.APO_XR */



-- apocs_xr
MERGE INTO ODS_STAGE.APO_XR d
USING (
select * from
    (  Select
    apo.apo_oid as apo_apo_oid,xr.apo_oid as xr_apo_oid,
    nvl(apo.apo_oid,xr.apo_oid) apo_oid,
        STG.BUSINESS_KEY as APO_ID,
        STG.APO_ID as APOCS_SK_APO_ID,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') then xr.SYSTEM_OF_RECORD else 'APOCS' end as SYSTEM_OF_RECORD,
        --'APOCS' as SYSTEM_OF_RECORD,
        xr.FOW_SK_ID,
        xr.OMS2_SK_BUSINESS_KEY,
        xr.LPIP_SK_APO_ID,
        xr.ODS_SK_FAUX_APO_ID,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') then xr.SCHOOL_YEAR else stg.GRAD_YEAR end as SCHOOL_YEAR,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') then xr.PRICE_PROGRAM_NAME else STG.PRICE_PROGRAM_NAME end as PRICE_PROGRAM_NAME,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') then xr.LIFETOUCH_ID else STG.LIFETOUCH_ID end as LIFETOUCH_ID,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') then xr.SUB_PROGRAM_NAME else SP_LKUP.SUB_PROGRAM_NAME end as SUB_PROGRAM_NAME,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') then xr.TERRITORY_CODE else STG.TERRITORYID end as TERRITORY_CODE,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') then xr.VISUAL_MERCH_ID else STG.VM_BUSINESS_KEY end as VISUAL_MERCH_ID,
        case when xr.SYSTEM_OF_RECORD in ('OMS2') or xr.SELLING_METHOD = 'Service Non Rev' then xr.SELLING_METHOD else STG.SELLING_METHOD end as SELLING_METHOD,
        sysdate as ODS_CREATE_DATE,
        sysdate as ODS_MODIFY_DATE
    -- select *
    FROM 
        RAX_APP_USER.STG_APO stg
        ,ODS_STAGE.OMS_SPT_AMS_SP_LKUP sp_lkup
        ,ODS_OWN.APO apo
        ,ODS_STAGE.APO_XR xr
    WHERE (1=1)
        and stg.SUB_PROGRAM_TYPE=sp_lkup.SUB_PROGRAM_TYPE(+)
        and stg.BUSINESS_KEY=APO.APO_ID(+)
        and stg.BUSINESS_KEY=XR.APO_ID(+)
     ) s
where NOT EXISTS 
	( select 1 from ODS_STAGE.APO_XR T
	where	T.APO_ID	= S.APO_ID 
		 and
		((T.APO_OID = S.APO_OID) or (T.APO_OID IS NULL and S.APO_OID IS NULL)) and
		((T.APOCS_SK_APO_ID = S.APOCS_SK_APO_ID) or (T.APOCS_SK_APO_ID IS NULL and S.APOCS_SK_APO_ID IS NULL)) and
		((T.SYSTEM_OF_RECORD = S.SYSTEM_OF_RECORD) or (T.SYSTEM_OF_RECORD IS NULL and S.SYSTEM_OF_RECORD IS NULL)) and
		((T.SCHOOL_YEAR = S.SCHOOL_YEAR) or (T.SCHOOL_YEAR IS NULL and S.SCHOOL_YEAR IS NULL)) and
		((T.PRICE_PROGRAM_NAME = S.PRICE_PROGRAM_NAME) or (T.PRICE_PROGRAM_NAME IS NULL and S.PRICE_PROGRAM_NAME IS NULL)) and
		((T.LIFETOUCH_ID = S.LIFETOUCH_ID) or (T.LIFETOUCH_ID IS NULL and S.LIFETOUCH_ID IS NULL)) and
		((T.SUB_PROGRAM_NAME = S.SUB_PROGRAM_NAME) or (T.SUB_PROGRAM_NAME IS NULL and S.SUB_PROGRAM_NAME IS NULL)) and
		((T.TERRITORY_CODE = S.TERRITORY_CODE) or (T.TERRITORY_CODE IS NULL and S.TERRITORY_CODE IS NULL)) and
		((T.VISUAL_MERCH_ID = S.VISUAL_MERCH_ID) or (T.VISUAL_MERCH_ID IS NULL and S.VISUAL_MERCH_ID IS NULL)) and
		((T.SELLING_METHOD = S.SELLING_METHOD) or (T.SELLING_METHOD IS NULL and S.SELLING_METHOD IS NULL))
        )
) s 
ON
  (s.APO_ID=d.APO_ID)
WHEN MATCHED
THEN
UPDATE SET
  d.APO_OID = s.APO_OID,
  d.APOCS_SK_APO_ID = s.APOCS_SK_APO_ID,
  d.SYSTEM_OF_RECORD = s.SYSTEM_OF_RECORD,
  d.SCHOOL_YEAR = s.SCHOOL_YEAR,
  d.PRICE_PROGRAM_NAME = s.PRICE_PROGRAM_NAME,
  d.LIFETOUCH_ID = s.LIFETOUCH_ID,
  d.SUB_PROGRAM_NAME = s.SUB_PROGRAM_NAME,
  d.TERRITORY_CODE = s.TERRITORY_CODE,
  d.VISUAL_MERCH_ID = s.VISUAL_MERCH_ID,
  d.SELLING_METHOD = s.SELLING_METHOD,
  d.ODS_MODIFY_DATE = s.ODS_MODIFY_DATE
WHEN NOT MATCHED
THEN
INSERT (
  APO_OID, APO_ID, APOCS_SK_APO_ID,SYSTEM_OF_RECORD,
  FOW_SK_ID, OMS2_SK_BUSINESS_KEY, LPIP_SK_APO_ID,ODS_SK_FAUX_APO_ID,
  SCHOOL_YEAR, PRICE_PROGRAM_NAME, LIFETOUCH_ID,
  SUB_PROGRAM_NAME, TERRITORY_CODE, VISUAL_MERCH_ID,
  SELLING_METHOD, ODS_CREATE_DATE, ODS_MODIFY_DATE)
VALUES (
  ODS_STAGE.APO_OID_SEQ.nextval, s.APO_ID, s.APOCS_SK_APO_ID,s.SYSTEM_OF_RECORD,
  s.FOW_SK_ID, s.OMS2_SK_BUSINESS_KEY, s.LPIP_SK_APO_ID,s.ODS_SK_FAUX_APO_ID,
  s.SCHOOL_YEAR, s.PRICE_PROGRAM_NAME, s.LIFETOUCH_ID,
  s.SUB_PROGRAM_NAME, s.TERRITORY_CODE, s.VISUAL_MERCH_ID,
  s.SELLING_METHOD, s.ODS_CREATE_DATE, s.ODS_MODIFY_DATE)

&& /*-----------------------------------------------*/
/* TASK No. 14 */
/* MERGE INTO ODS_OWN.APO */
/*                when org_vw.business_unit_name like '%' || dc.data_center_name || '%'
                         then STG.FINANCIAL_PROCESSING_SYSTEM
                         else 'GDT'
*/



MERGE INTO ODS_OWN.APO d
USING (
select * from (
      Select
        xr.APO_OID as APO_OID,
        xr.APO_ID as APO_ID,
        nvl(acc.ACCOUNT_OID,-1) as ACCOUNT_OID,
        XR.SCHOOL_YEAR as SCHOOL_YEAR,
        nvl(SP.SUB_PROGRAM_OID,-1) as SUB_PROGRAM_OID,
        nvl(ORG.ORGANIZATION_OID,-1) as ORGANIZATION_OID,
        STG.DESCRIPTION as DESCRIPTION,
        XR.LIFETOUCH_ID as LIFETOUCH_ID,
        XR.TERRITORY_CODE as TERRITORY_CODE,
        XR.SELLING_METHOD as SELLING_METHOD,
        case 
             when trim(STG.CONFIRMED_PROCESSING_LAB) is not null 
             then STG.CONFIRMED_PROCESSING_LAB 
             when (trim(STG.PROCESSING_LAB) is null 
                        and trim(STG.SERVICE_CENTER) is not null 
                        and STG.FULFILLING_LAB_SYSTEM = 'Prism')
             then STG.SERVICE_CENTER
             else STG.PROCESSING_LAB 
        end as PROCESSING_LAB,
        STG.PHOTOGRAPHY_LOCATION as PHOTOGAPHY_LOCIATION,
        STG.VISION_JOB_NO as VISION_JOB_NO,
        STG.COMMISSION_GUARANTEED as COMMISSION_GUARANTEED,
        STG.COMMISSION_PER_CUSTOMER as COMMISSION_PER_CUSTOMER,
        STG.COMMISSION_PERCENTAGE as COMMISSION_PERCENTAGE,
        STG.GUARANTEED_DOLLAR_AMOUNT as GUARANTEED_DOLLAR_AMOUNT,
        STG.SPECIAL_COMMISSION as SPECIAL_COMMISSION,
        VM.VISUAL_MERCH_OID as VISUAL_MERCH_OID,
        XR.PRICE_PROGRAM_NAME as PRICE_PROGRAM_NAME,
        STG.MARKETING_CODE as MARKETING_CODE,
        STG.SORT_TYPE as SORT_TYPE,
        STG.FLYERID as FLYER_ID,
        STG.ENVELOPE_TYPE as ENVELOPE_TYPE,
        STG.TAX_EXEMPT_CERTIFICATE_NUMBER as TAX_EXEMPT_CERTIFICATE_NUMBER,
        STG.COMPOSITE_PRODUCT_CODE as COMP_PROD_CODE,
        STG.COMPOSITE_DELIVERY_TYPE as COMP_PROD_DELIVERY_TYPE,
        STG.GROUP_PRODUCT_CODE as GROUP_PROD_CODE,
        STG.GROUP_DELIVERY_TYPE as GROUP_PROD_DELIVERY_TYPE,
        sysdate as ODS_CREATE_DATE,
        sysdate as ODS_MODIFY_DATE,
        SS.SOURCE_SYSTEM_OID as SOURCE_SYSTEM_OID,
        STG.FULFILLING_LAB_SYSTEM as FULFILLING_LAB_SYSTEM,
        case when dc.data_center_name is null 
                         then STG.FINANCIAL_PROCESSING_SYSTEM
                when ((org_vw.business_unit_name like '%' || dc.data_center_name || '%')
                   or (nvl(dc.data_center_name,'United States') = 'United States' and org_vw.BUSINESS_UNIT_NAME = 'Lifetouch Preschool Portraits')
                     ) then STG.FINANCIAL_PROCESSING_SYSTEM 
                else 'OtherSRM' 

        end as FINANCIAL_PROCESSING_SYSTEM,
        PP.PRICE_PROGRAM_OID as PRICE_PROGRAM_OID,
        STG.ESTIMATED_ENROLLMENT as ESTIMATED_ENROLLMENT,
        STG.GLOSSIES_PAPER_DEADLINE as GLOSSIES_PAPER_DEADLINE,
        STG.STUDENTID_REQD as STUDENT_ID_REQD,
        STG.TERRITORY_GROUPID as TERRITORY_GROUP_ID,
        STG.SOLO_ACCESS as SOLO_ACCESS,
        trim(STG.STUDIOID) as STUDIO_ID,
        STG.STATUS as STATUS,
        SM.SELLING_METHOD_OID as SELLING_METHOD_OID,
        case when STG.TAX_EXEMPT = 'Y' then 1 else 0 end as IS_TAX_EXEMPT,
        STG.SERVICE_CENTER AS SERVICE_CENTER
        ,STG.YB_SELECTION_ONLINE
        ,STG.SHIP_GLOSSIES_TO
        ,STG.SHIP_ORDERS_TO
        ,STG.SHIP_PROOFS_TO
        ,STG.IS_PROOF_EXPRESS
        ,case when sp.sub_program_name = 'Yearbook' then stg.vision_job_no else null end as LPIP_JOB_NUMBER
        ,STG.LIFETOUCH_PHOTOGRAPHED
        --select *
    from
        RAX_APP_USER.STG_APO stg
        ,ODS_STAGE.APO_XR xr 
        ,ODS_OWN.ACCOUNT acc
        ,ODS_OWN.SUB_PROGRAM sp
        ,ODS_OWN.ORGANIZATION org
        ,ODS_OWN.VISUAL_MERCH vm
        ,ODS_OWN.SOURCE_SYSTEM ss
        ,ODS_OWN.PRICE_PROGRAM pp
        ,ODS_OWN.SELLING_METHOD sm
        ,ODS_OWN.ORGANIZATION_VW org_vw
        ,ODS_OWN.DATA_CENTER dc
    where (1=1)
        and STG.BUSINESS_KEY=XR.APO_ID
        and xr.LIFETOUCH_ID=acc.LIFETOUCH_ID(+)
        and XR.SUB_PROGRAM_NAME=SP.SUB_PROGRAM_NAME(+)
        and XR.TERRITORY_CODE=ORG.ORG_CODE(+)
        and XR.VISUAL_MERCH_ID=VM.VISUAL_MERCH_ID(+)
        and SS.SOURCE_SYSTEM_SHORT_NAME='APOCS'
        and XR.PRICE_PROGRAM_NAME=PP.PRICE_PROGRAM_NAME(+)
        and XR.SELLING_METHOD=SM.SELLING_METHOD(+)
        and org.org_code = org_vw.territory_code(+)
        and xr.SYSTEM_OF_RECORD = 'APOCS'
         ) s
where NOT EXISTS 
	( select 1 from ODS_OWN.APO T
	where	T.APO_OID	= S.APO_OID 
		 and ((T.APO_ID = S.APO_ID) or (T.APO_ID IS NULL and S.APO_ID IS NULL)) and
        ((T.ACCOUNT_OID = S.ACCOUNT_OID) or (T.ACCOUNT_OID IS NULL and S.ACCOUNT_OID IS NULL)) and
        ((T.SCHOOL_YEAR = S.SCHOOL_YEAR) or (T.SCHOOL_YEAR IS NULL and S.SCHOOL_YEAR IS NULL)) and
        ((T.SUB_PROGRAM_OID = S.SUB_PROGRAM_OID) or (T.SUB_PROGRAM_OID IS NULL and S.SUB_PROGRAM_OID IS NULL)) and
        ((T.ORGANIZATION_OID = S.ORGANIZATION_OID) or (T.ORGANIZATION_OID IS NULL and S.ORGANIZATION_OID IS NULL)) and
        ((T.DESCRIPTION = S.DESCRIPTION) or (T.DESCRIPTION IS NULL and S.DESCRIPTION IS NULL)) and
        ((T.LIFETOUCH_ID = S.LIFETOUCH_ID) or (T.LIFETOUCH_ID IS NULL and S.LIFETOUCH_ID IS NULL)) and
        ((T.TERRITORY_CODE = S.TERRITORY_CODE) or (T.TERRITORY_CODE IS NULL and S.TERRITORY_CODE IS NULL)) and
        ((T.SELLING_METHOD = S.SELLING_METHOD) or (T.SELLING_METHOD IS NULL and S.SELLING_METHOD IS NULL)) and
        ((T.PROCESSING_LAB = S.PROCESSING_LAB) or (T.PROCESSING_LAB IS NULL and S.PROCESSING_LAB IS NULL)) and
        ((T.PHOTOGAPHY_LOCIATION = S.PHOTOGAPHY_LOCIATION) or (T.PHOTOGAPHY_LOCIATION IS NULL and S.PHOTOGAPHY_LOCIATION IS NULL)) and
        ((T.VISION_JOB_NO = S.VISION_JOB_NO) or (T.VISION_JOB_NO IS NULL and S.VISION_JOB_NO IS NULL)) and
        ((T.COMMISSION_GUARANTEED = S.COMMISSION_GUARANTEED) or (T.COMMISSION_GUARANTEED IS NULL and S.COMMISSION_GUARANTEED IS NULL)) and
        ((T.COMMISSION_PER_CUSTOMER = S.COMMISSION_PER_CUSTOMER) or (T.COMMISSION_PER_CUSTOMER IS NULL and S.COMMISSION_PER_CUSTOMER IS NULL)) and
        ((T.COMMISSION_PERCENTAGE = S.COMMISSION_PERCENTAGE) or (T.COMMISSION_PERCENTAGE IS NULL and S.COMMISSION_PERCENTAGE IS NULL)) and
        ((T.GUARANTEED_DOLLAR_AMOUNT = S.GUARANTEED_DOLLAR_AMOUNT) or (T.GUARANTEED_DOLLAR_AMOUNT IS NULL and S.GUARANTEED_DOLLAR_AMOUNT IS NULL)) and
        ((T.SPECIAL_COMMISSION = S.SPECIAL_COMMISSION) or (T.SPECIAL_COMMISSION IS NULL and S.SPECIAL_COMMISSION IS NULL)) and
        ((T.VISUAL_MERCH_OID = S.VISUAL_MERCH_OID) or (T.VISUAL_MERCH_OID IS NULL and S.VISUAL_MERCH_OID IS NULL)) and
        ((T.PRICE_PROGRAM_NAME = S.PRICE_PROGRAM_NAME) or (T.PRICE_PROGRAM_NAME IS NULL and S.PRICE_PROGRAM_NAME IS NULL)) and
        ((T.MARKETING_CODE = S.MARKETING_CODE) or (T.MARKETING_CODE IS NULL and S.MARKETING_CODE IS NULL)) and
        ((T.SORT_TYPE = S.SORT_TYPE) or (T.SORT_TYPE IS NULL and S.SORT_TYPE IS NULL)) and
        ((T.FLYER_ID = S.FLYER_ID) or (T.FLYER_ID IS NULL and S.FLYER_ID IS NULL)) and
        ((T.ENVELOPE_TYPE = S.ENVELOPE_TYPE) or (T.ENVELOPE_TYPE IS NULL and S.ENVELOPE_TYPE IS NULL)) and
        ((T.TAX_EXEMPT_CERTIFICATE_NUMBER = S.TAX_EXEMPT_CERTIFICATE_NUMBER) or (T.TAX_EXEMPT_CERTIFICATE_NUMBER IS NULL and S.TAX_EXEMPT_CERTIFICATE_NUMBER IS NULL)) and
        ((T.COMP_PROD_CODE = S.COMP_PROD_CODE) or (T.COMP_PROD_CODE IS NULL and S.COMP_PROD_CODE IS NULL)) and
        ((T.COMP_PROD_DELIVERY_TYPE = S.COMP_PROD_DELIVERY_TYPE) or (T.COMP_PROD_DELIVERY_TYPE IS NULL and S.COMP_PROD_DELIVERY_TYPE IS NULL)) and
        ((T.GROUP_PROD_CODE = S.GROUP_PROD_CODE) or (T.GROUP_PROD_CODE IS NULL and S.GROUP_PROD_CODE IS NULL)) and
        ((T.GROUP_PROD_DELIVERY_TYPE = S.GROUP_PROD_DELIVERY_TYPE) or (T.GROUP_PROD_DELIVERY_TYPE IS NULL and S.GROUP_PROD_DELIVERY_TYPE IS NULL)) and
        ((T.SOURCE_SYSTEM_OID = S.SOURCE_SYSTEM_OID) or (T.SOURCE_SYSTEM_OID IS NULL and S.SOURCE_SYSTEM_OID IS NULL)) and
        ((T.FULFILLING_LAB_SYSTEM = S.FULFILLING_LAB_SYSTEM) or (T.FULFILLING_LAB_SYSTEM IS NULL and S.FULFILLING_LAB_SYSTEM IS NULL)) and
        ((T.FINANCIAL_PROCESSING_SYSTEM = S.FINANCIAL_PROCESSING_SYSTEM) or (T.FINANCIAL_PROCESSING_SYSTEM IS NULL and S.FINANCIAL_PROCESSING_SYSTEM IS NULL)) and
        ((T.PRICE_PROGRAM_OID = S.PRICE_PROGRAM_OID) or (T.PRICE_PROGRAM_OID IS NULL and S.PRICE_PROGRAM_OID IS NULL)) and
        ((T.ESTIMATED_ENROLLMENT = S.ESTIMATED_ENROLLMENT) or (T.ESTIMATED_ENROLLMENT IS NULL and S.ESTIMATED_ENROLLMENT IS NULL)) and
        ((T.GLOSSIES_PAPER_DEADLINE = S.GLOSSIES_PAPER_DEADLINE) or (T.GLOSSIES_PAPER_DEADLINE IS NULL and S.GLOSSIES_PAPER_DEADLINE IS NULL)) and
        ((T.STUDENT_ID_REQD = S.STUDENT_ID_REQD) or (T.STUDENT_ID_REQD IS NULL and S.STUDENT_ID_REQD IS NULL)) and
        ((T.TERRITORY_GROUP_ID = S.TERRITORY_GROUP_ID) or (T.TERRITORY_GROUP_ID IS NULL and S.TERRITORY_GROUP_ID IS NULL)) and
        ((T.SOLO_ACCESS = S.SOLO_ACCESS) or (T.SOLO_ACCESS IS NULL and S.SOLO_ACCESS IS NULL)) and
        ((T.STUDIO_ID = S.STUDIO_ID) or (T.STUDIO_ID IS NULL and S.STUDIO_ID IS NULL)) and
        ((T.STATUS = S.STATUS) or (T.STATUS IS NULL and S.STATUS IS NULL)) and
        ((T.SELLING_METHOD_OID = S.SELLING_METHOD_OID) or (T.SELLING_METHOD_OID IS NULL and S.SELLING_METHOD_OID IS NULL)) and
        ((T.SERVICE_CENTER = S.SERVICE_CENTER) or (T.SERVICE_CENTER IS NULL and S.SERVICE_CENTER IS NULL)) and
        ((T.YB_SELECTION_ONLINE = S.YB_SELECTION_ONLINE) or (T.YB_SELECTION_ONLINE IS NULL and S.YB_SELECTION_ONLINE IS NULL)) and
        ((T.SHIP_GLOSSIES_TO = S.SHIP_GLOSSIES_TO) or (T.SHIP_GLOSSIES_TO IS NULL and S.SHIP_GLOSSIES_TO IS NULL)) and
        ((T.SHIP_ORDERS_TO = S.SHIP_ORDERS_TO) or (T.SHIP_ORDERS_TO IS NULL and S.SHIP_ORDERS_TO IS NULL)) and
        ((T.SHIP_PROOFS_TO = S.SHIP_PROOFS_TO) or (T.SHIP_PROOFS_TO IS NULL and S.SHIP_PROOFS_TO IS NULL)) and
        ((T.IS_PROOF_EXPRESS = S.IS_PROOF_EXPRESS) or (T.IS_PROOF_EXPRESS IS NULL and S.IS_PROOF_EXPRESS IS NULL)) and
        ((T.IS_TAX_EXEMPT = S.IS_TAX_EXEMPT) or (T.IS_TAX_EXEMPT IS NULL and S.IS_TAX_EXEMPT IS NULL)) and
        ((T.LPIP_JOB_NUMBER = S.LPIP_JOB_NUMBER) or (T.LPIP_JOB_NUMBER IS NULL and S.LPIP_JOB_NUMBER IS NULL)) and
        ((T.LIFETOUCH_PHOTOGRAPHED = S.LIFETOUCH_PHOTOGRAPHED) or (T.LIFETOUCH_PHOTOGRAPHED IS NULL and S.LIFETOUCH_PHOTOGRAPHED IS NULL)) 
        )
) s 
ON
  (d.APO_ID = s.APO_ID)
WHEN MATCHED
THEN
UPDATE SET
  d.ACCOUNT_OID = s.ACCOUNT_OID,
  d.SCHOOL_YEAR = s.SCHOOL_YEAR,
  d.SUB_PROGRAM_OID = s.SUB_PROGRAM_OID,
  d.ORGANIZATION_OID = s.ORGANIZATION_OID,
  d.DESCRIPTION = s.DESCRIPTION,
  d.LIFETOUCH_ID = s.LIFETOUCH_ID,
  d.TERRITORY_CODE = s.TERRITORY_CODE,
  d.SELLING_METHOD = s.SELLING_METHOD,
  d.PROCESSING_LAB = s.PROCESSING_LAB,
  d.PHOTOGAPHY_LOCIATION = s.PHOTOGAPHY_LOCIATION,
  d.VISION_JOB_NO = s.VISION_JOB_NO,
  d.COMMISSION_GUARANTEED = s.COMMISSION_GUARANTEED,
  d.COMMISSION_PER_CUSTOMER = s.COMMISSION_PER_CUSTOMER,
  d.COMMISSION_PERCENTAGE = s.COMMISSION_PERCENTAGE,
  d.GUARANTEED_DOLLAR_AMOUNT = s.GUARANTEED_DOLLAR_AMOUNT,
  d.SPECIAL_COMMISSION = s.SPECIAL_COMMISSION,
  d.VISUAL_MERCH_OID = s.VISUAL_MERCH_OID,
  d.PRICE_PROGRAM_NAME = s.PRICE_PROGRAM_NAME,
  d.MARKETING_CODE = s.MARKETING_CODE,
  d.SORT_TYPE = s.SORT_TYPE,
  d.FLYER_ID = s.FLYER_ID,
  d.ENVELOPE_TYPE = s.ENVELOPE_TYPE,
  d.TAX_EXEMPT_CERTIFICATE_NUMBER = s.TAX_EXEMPT_CERTIFICATE_NUMBER,
  d.COMP_PROD_CODE = s.COMP_PROD_CODE,
  d.COMP_PROD_DELIVERY_TYPE = s.COMP_PROD_DELIVERY_TYPE,
  d.GROUP_PROD_CODE = s.GROUP_PROD_CODE,
  d.GROUP_PROD_DELIVERY_TYPE = s.GROUP_PROD_DELIVERY_TYPE,
  d.ODS_MODIFY_DATE = s.ODS_MODIFY_DATE,
  d.SOURCE_SYSTEM_OID = s.SOURCE_SYSTEM_OID,
  d.FULFILLING_LAB_SYSTEM = s.FULFILLING_LAB_SYSTEM,
  d.FINANCIAL_PROCESSING_SYSTEM = s.FINANCIAL_PROCESSING_SYSTEM,
  d.PRICE_PROGRAM_OID = s.PRICE_PROGRAM_OID,
  d.ESTIMATED_ENROLLMENT = s.ESTIMATED_ENROLLMENT,
  d.GLOSSIES_PAPER_DEADLINE = s.GLOSSIES_PAPER_DEADLINE,
  d.STUDENT_ID_REQD = s.STUDENT_ID_REQD,
  d.TERRITORY_GROUP_ID = s.TERRITORY_GROUP_ID,
  d.SOLO_ACCESS = s.SOLO_ACCESS,
  d.STUDIO_ID = s.STUDIO_ID,
  d.STATUS = s.STATUS,
  d.SELLING_METHOD_OID = s.SELLING_METHOD_OID,
  d.IS_TAX_EXEMPT = s.IS_TAX_EXEMPT,
  d.SERVICE_CENTER = s.SERVICE_CENTER,
  d.YB_SELECTION_ONLINE = s.YB_SELECTION_ONLINE,
  d.SHIP_GLOSSIES_TO = s.SHIP_GLOSSIES_TO,
  d.SHIP_ORDERS_TO = s.SHIP_ORDERS_TO,
  d.SHIP_PROOFS_TO = s.SHIP_PROOFS_TO,
  d.IS_PROOF_EXPRESS = s.IS_PROOF_EXPRESS,
  d.LPIP_JOB_NUMBER = s.LPIP_JOB_NUMBER,
 d.LIFETOUCH_PHOTOGRAPHED = s.LIFETOUCH_PHOTOGRAPHED
WHEN NOT MATCHED
THEN
INSERT (
    APO_OID
    ,APO_ID 
    ,ACCOUNT_OID
    ,SCHOOL_YEAR
    ,SUB_PROGRAM_OID 
    ,ORGANIZATION_OID
    ,DESCRIPTION
    ,LIFETOUCH_ID
    ,TERRITORY_CODE 
    ,SELLING_METHOD 
    ,PROCESSING_LAB
    ,PHOTOGAPHY_LOCIATION 
    ,VISION_JOB_NO
    ,COMMISSION_GUARANTEED
    ,COMMISSION_PER_CUSTOMER 
    ,COMMISSION_PERCENTAGE
    ,GUARANTEED_DOLLAR_AMOUNT
    ,SPECIAL_COMMISSION
    ,VISUAL_MERCH_OID
    ,PRICE_PROGRAM_NAME
    ,MARKETING_CODE
    ,SORT_TYPE
    ,FLYER_ID
    ,ENVELOPE_TYPE 
    ,TAX_EXEMPT_CERTIFICATE_NUMBER 
    ,COMP_PROD_CODE
    ,COMP_PROD_DELIVERY_TYPE 
    ,GROUP_PROD_CODE
    ,GROUP_PROD_DELIVERY_TYPE
    ,ODS_CREATE_DATE
    ,ODS_MODIFY_DATE 
    ,SOURCE_SYSTEM_OID
    ,FULFILLING_LAB_SYSTEM 
    ,FINANCIAL_PROCESSING_SYSTEM
    ,PRICE_PROGRAM_OID
    ,ESTIMATED_ENROLLMENT
    ,GLOSSIES_PAPER_DEADLINE 
    ,STUDENT_ID_REQD
    ,TERRITORY_GROUP_ID 
    ,SOLO_ACCESS
    ,STUDIO_ID
    ,STATUS
    ,SELLING_METHOD_OID
    ,IS_TAX_EXEMPT
    ,SERVICE_CENTER
    ,YB_SELECTION_ONLINE
    ,SHIP_GLOSSIES_TO
    ,SHIP_ORDERS_TO
    ,SHIP_PROOFS_TO
    ,IS_PROOF_EXPRESS
    ,LPIP_JOB_NUMBER
    ,LIFETOUCH_PHOTOGRAPHED
  )
VALUES (
    s.APO_OID
    ,s.APO_ID 
    ,s.ACCOUNT_OID
    ,s.SCHOOL_YEAR
    ,s.SUB_PROGRAM_OID 
    ,s.ORGANIZATION_OID
    ,s.DESCRIPTION
    ,s.LIFETOUCH_ID
    ,s.TERRITORY_CODE 
    ,s.SELLING_METHOD 
    ,s.PROCESSING_LAB
    ,s.PHOTOGAPHY_LOCIATION 
    ,s.VISION_JOB_NO
    ,s.COMMISSION_GUARANTEED
    ,s.COMMISSION_PER_CUSTOMER 
    ,s.COMMISSION_PERCENTAGE
    ,s.GUARANTEED_DOLLAR_AMOUNT
    ,s.SPECIAL_COMMISSION
    ,s.VISUAL_MERCH_OID
    ,s.PRICE_PROGRAM_NAME
    ,s.MARKETING_CODE
    ,s.SORT_TYPE
    ,s.FLYER_ID
    ,s.ENVELOPE_TYPE 
    ,s.TAX_EXEMPT_CERTIFICATE_NUMBER 
    ,s.COMP_PROD_CODE
    ,s.COMP_PROD_DELIVERY_TYPE 
    ,s.GROUP_PROD_CODE
    ,s.GROUP_PROD_DELIVERY_TYPE
    ,s.ODS_CREATE_DATE
    ,s.ODS_MODIFY_DATE 
    ,s.SOURCE_SYSTEM_OID
    ,s.FULFILLING_LAB_SYSTEM 
    ,s.FINANCIAL_PROCESSING_SYSTEM
    ,s.PRICE_PROGRAM_OID
    ,s.ESTIMATED_ENROLLMENT
    ,s.GLOSSIES_PAPER_DEADLINE 
    ,s.STUDENT_ID_REQD
    ,s.TERRITORY_GROUP_ID 
    ,s.SOLO_ACCESS
    ,s.STUDIO_ID
    ,s.STATUS
    ,s.SELLING_METHOD_OID
    ,s.IS_TAX_EXEMPT
    ,s.SERVICE_CENTER
    ,s.YB_SELECTION_ONLINE
    ,s.SHIP_GLOSSIES_TO
    ,s.SHIP_ORDERS_TO
    ,s.SHIP_PROOFS_TO
    ,s.IS_PROOF_EXPRESS
    ,s.LPIP_JOB_NUMBER
    ,s.LIFETOUCH_PHOTOGRAPHED
)

&& /*-----------------------------------------------*/
/* TASK No. 15 */
/* ACCOUNT_OID */



merge into ods_own.apo t
using
(select
    APO.APO_OID,ACC.ACCOUNT_OID
from
    ods_own.apo apo
    ,ODS_STAGE.APO_XR xr
    ,ODS_OWN.ACCOUNT acc
where (1=1)
    and xr.apo_oid > 0
    and APO.APO_OID=XR.APO_OID
    and XR.LIFETOUCH_ID=ACC.LIFETOUCH_ID(+)
    and APO.ACCOUNT_OID<>ACC.ACCOUNT_OID
) s
on (s.APO_OID=t.APO_OID)   
when matched then update set
t.ACCOUNT_OID=s.ACCOUNT_OID
,t.ods_modify_date=sysdate

&& /*-----------------------------------------------*/
/* TASK No. 16 */
/* SUB_PROGRAM_OID */



merge into ods_own.apo t
using
(select
    APO.APO_OID,SP.SUB_PROGRAM_OID
from
    ods_own.apo apo
    ,ODS_STAGE.APO_XR xr
    ,ODS_OWN.SUB_PROGRAM sp
where (1=1)
    and xr.apo_oid > 0
    and APO.APO_OID=XR.APO_OID
    and XR.SUB_PROGRAM_NAME=SP.SUB_PROGRAM_NAME(+)
    and APO.SUB_PROGRAM_OID<>SP.SUB_PROGRAM_OID
) s
on (s.APO_OID=t.APO_OID)   
when matched then update set
t.SUB_PROGRAM_OID=s.SUB_PROGRAM_OID
,t.ods_modify_date=sysdate

&& /*-----------------------------------------------*/
/* TASK No. 17 */
/* ORGANIZATION_OID */



merge into ods_own.apo t
using
(select
    APO.APO_OID,ORG.ORGANIZATION_OID
from
    ods_own.apo apo
    ,ODS_STAGE.APO_XR xr
    ,ODS_OWN.ORGANIZATION org
where (1=1)
    and xr.apo_oid > 0
    and APO.APO_OID=XR.APO_OID
    and XR.TERRITORY_CODE=ORG.ORG_CODE
    and APO.ORGANIZATION_OID<>ORG.ORGANIZATION_OID
) s
on (s.APO_OID=t.APO_OID)   
when matched then update set
t.ORGANIZATION_OID=s.ORGANIZATION_OID
,t.ods_modify_date=sysdate

&& /*-----------------------------------------------*/
/* TASK No. 18 */
/* VISUAL_MERCH_OID */



merge into ods_own.apo t
using
(select
    APO.APO_OID,vm.VISUAL_MERCH_OID
from
    ods_own.apo apo
    ,ODS_STAGE.APO_XR xr
    ,ODS_OWN.VISUAL_MERCH vm
where (1=1)
    and xr.apo_oid > 0
    and APO.APO_OID=XR.APO_OID
    and XR.VISUAL_MERCH_ID=VM.VISUAL_MERCH_ID
    and APO.VISUAL_MERCH_OID<>vm.VISUAL_MERCH_OID
) s
on (s.APO_OID=t.APO_OID)   
when matched then update set
t.VISUAL_MERCH_OID=s.VISUAL_MERCH_OID
,t.ods_modify_date=sysdate

&& /*-----------------------------------------------*/
/* TASK No. 19 */
/* PRICE_PROGRAM_OID */



merge into ods_own.apo t
using
(select
    APO.APO_OID,pp.PRICE_PROGRAM_OID
from
    ods_own.apo apo
    ,ODS_STAGE.APO_XR xr
    ,ODS_OWN.PRICE_PROGRAM pp
where (1=1)
    and xr.apo_oid > 0
    and APO.APO_OID=XR.APO_OID
    and XR.PRICE_PROGRAM_NAME=PP.PRICE_PROGRAM_NAME
    and APO.PRICE_PROGRAM_OID<>pp.PRICE_PROGRAM_OID
) s
on (s.APO_OID=t.APO_OID)   
when matched then update set
t.PRICE_PROGRAM_OID=s.PRICE_PROGRAM_OID
,t.ods_modify_date=sysdate

&& /*-----------------------------------------------*/
/* TASK No. 20 */
/* SELLING_METHOD_OID */



merge into ods_own.apo t
using
(select
    APO.APO_OID,sm.SELLING_METHOD_OID
from
    ods_own.apo apo
    ,ODS_STAGE.APO_XR xr
    ,ODS_OWN.SELLING_METHOD sm
where (1=1)
    and xr.apo_oid > 0
    and APO.APO_OID=XR.APO_OID
    and XR.SELLING_METHOD=SM.SELLING_METHOD
    and APO.SELLING_METHOD_OID<>sm.SELLING_METHOD_OID
) s
on (s.APO_OID=t.APO_OID)   
when matched then update set
t.SELLING_METHOD_OID=s.SELLING_METHOD_OID
,t.ods_modify_date=sysdate

&& /*-----------------------------------------------*/
/* TASK No. 21 */
/* Prism - Group Type - sku_external_reference CDC */



merge into ods_own.apo t
using
(
select apo.apo_oid, max(sr.external_type) as group_type
from ods_own.apo apo
join ods_own.event e on apo.apo_oid = e.apo_oid
join ods_own.sub_program sp on apo.sub_program_oid = sp.sub_program_oid
join ods_own.ols_default ols on ols.apo_oid = apo.apo_oid
join ods_own.ols_default_attribute ola on ols.ols_default_oid = ola.ols_default_oid
join ods_own.sku_external_reference sr on ola.value = sr.external_id
join ods_own.stock_keeping_unit sku on (sr.stock_keeping_unit_oid = sku.stock_keeping_unit_oid and sku.sku_code = ols.sku_id)
join ods_own.item i on to_char(sku.sku_code) = i.item_id
where ola.name = 'productTemplate'
and i.sub_class = 'CLASSPIC'
and apo.fulfilling_lab_system = 'Prism'
and  sr.external_type is not null
and sr.ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
group by apo.apo_oid
) s
on (s.apo_oid = t.apo_oid)
when matched then update
set t.group_type = s.group_type
, t.ods_modify_date = sysdate
where decode(t.group_type, s.group_type,1,0) = 0

&& /*-----------------------------------------------*/
/* TASK No. 22 */
/* Prism - Group Type - ols_default_attribute CDC */



merge into ods_own.apo t
using
(
select apo.apo_oid, max(sr.external_type) as group_type
from ods_own.apo apo
join ods_own.event e on apo.apo_oid = e.apo_oid
join ods_own.sub_program sp on apo.sub_program_oid = sp.sub_program_oid
join ods_own.ols_default ols on ols.apo_oid = apo.apo_oid
join ods_own.ols_default_attribute ola on ols.ols_default_oid = ola.ols_default_oid
join ods_own.sku_external_reference sr on ola.value = sr.external_id
join ods_own.stock_keeping_unit sku on (sr.stock_keeping_unit_oid = sku.stock_keeping_unit_oid and sku.sku_code = ols.sku_id)
join ods_own.item i on to_char(sku.sku_code) = i.item_id
where ola.name = 'productTemplate'
and i.sub_class = 'CLASSPIC'
and apo.fulfilling_lab_system = 'Prism'
and  sr.external_type is not null
and ola.ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
group by apo.apo_oid
) s
on (s.apo_oid = t.apo_oid)
when matched then update
set t.group_type = s.group_type
, t.ods_modify_date = sysdate
where decode(t.group_type, s.group_type,1,0) = 0

&& /*-----------------------------------------------*/
/* TASK No. 23 */
/* Prism - Group Type - APO CDC */



merge into ods_own.apo t
using
(
select apo.apo_oid, max(sr.external_type) as group_type
from ods_own.apo apo
join ods_own.event e on apo.apo_oid = e.apo_oid
join ods_own.sub_program sp on apo.sub_program_oid = sp.sub_program_oid
join ods_own.ols_default ols on ols.apo_oid = apo.apo_oid
join ods_own.ols_default_attribute ola on ols.ols_default_oid = ola.ols_default_oid
join ods_own.sku_external_reference sr on ola.value = sr.external_id
join ods_own.stock_keeping_unit sku on (sr.stock_keeping_unit_oid = sku.stock_keeping_unit_oid and sku.sku_code = ols.sku_id)
join ods_own.item i on to_char(sku.sku_code) = i.item_id
where ola.name = 'productTemplate'
and i.sub_class = 'CLASSPIC'
and apo.fulfilling_lab_system = 'Prism'
and  sr.external_type is not null
and apo.ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
group by apo.apo_oid
) s
on (s.apo_oid = t.apo_oid)
when matched then update
set t.group_type = s.group_type
, t.ods_modify_date = sysdate
where decode(t.group_type, s.group_type,1,0) = 0

&& /*-----------------------------------------------*/
/* TASK No. 24 */
/* Prism - Group Delivery - OLSDA CDC */



merge into ods_own.apo t
using
(
select apo.apo_oid, max(olsda.value) as group_delivery
from ods_own.apo apo
join ods_own.sub_program sp on apo.sub_program_oid = sp.sub_program_oid
join ods_own.ols_default olsd on apo.apo_oid = olsd.apo_oid
join ods_own.ols_default_attribute olsda on olsd.ols_default_oid = olsda.ols_default_oid
where olsda.name = 'deliveryMethod' 
and apo.fulfilling_lab_system = 'Prism'
and  olsda.value is not null
and olsda.ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
group by apo.apo_oid
) s
on (s.apo_oid = t.apo_oid)
when matched then update
set t.group_delivery = s.group_delivery
, t.ods_modify_date = sysdate
where decode(t.group_delivery, s.group_delivery,1,0) = 0

&& /*-----------------------------------------------*/
/* TASK No. 25 */
/* Prism - Group Delivery - APO CDC */



merge into ods_own.apo t
using
(
select apo.apo_oid, max(olsda.value) as group_delivery
from ods_own.apo apo
join ods_own.sub_program sp on apo.sub_program_oid = sp.sub_program_oid
join ods_own.ols_default olsd on apo.apo_oid = olsd.apo_oid
join ods_own.ols_default_attribute olsda on olsd.ols_default_oid = olsda.ols_default_oid
where olsda.name = 'deliveryMethod' 
and apo.fulfilling_lab_system = 'Prism'
and  olsda.value is not null
and apo.ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
group by apo.apo_oid
) s
on (s.apo_oid = t.apo_oid)
when matched then update
set t.group_delivery = s.group_delivery
, t.ods_modify_date = sysdate
where decode(t.group_delivery, s.group_delivery,1,0) = 0

&& /*-----------------------------------------------*/
/* TASK No. 26 */
/* Fox (can be deprecated once Canada on Pism - Fall '22) */



update ods_own.apo
set group_type = 
case when comp_prod_Code is not null then 'Composite'
        when apo.group_prod_code is not null then 'Group' 
         else null end 
, group_delivery =
  case when apo.comp_prod_delivery_type = 'Later & Verify' then 'Verify'
    when comp_prod_Code is not null then apo.comp_prod_delivery_type
    when apo.group_prod_code is not null then apo.group_prod_delivery_type else null end
where ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
and fulfilling_lab_system = 'FOX'
and
( 
decode(group_type,
case when comp_prod_Code is not null then 'Composite'
        when group_prod_code is not null then 'Group' 
        else null end ,1,0) = 0
or 
decode(group_delivery,
  case when apo.comp_prod_delivery_type = 'Later & Verify' then 'Verify'
    when comp_prod_Code is not null then apo.comp_prod_delivery_type
    when apo.group_prod_code is not null then apo.group_prod_delivery_type else null end,1,0) = 0
)

&& /*-----------------------------------------------*/
/* TASK No. 27 */
/* Update CDC Load Status */
/*
UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env
*/



UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

&& /*-----------------------------------------------*/
/* TASK No. 28 */
/* Insert CDC Audit Record */
/*
INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_APO_PKG',
'041',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          )
,:v_cdc_overlap,
SYSDATE,
 :v_env)
*/



INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name
,:v_sess_no
,'LOAD_APO_PKG'
,'041'
,TO_DATE(SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
,TO_DATE (SUBSTR(:v_cdc_load_date, 1, 19),'YYYY-MM-DD HH24:MI:SS')
,:v_cdc_overlap
,SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS_OWN.ODS_CDC_LOAD_STATUS
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

&& /*-----------------------------------------------*/





&&