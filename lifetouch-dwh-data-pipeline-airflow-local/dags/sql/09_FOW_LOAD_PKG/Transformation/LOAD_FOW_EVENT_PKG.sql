/* TASK No. 1 */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 1 */




/*-----------------------------------------------*/
/* TASK No. 2 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 2 */




/*-----------------------------------------------*/
/* TASK No. 3 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 3 */




/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0FOW_EVENT_STG purge

-- &


-- /*-----------------------------------------------*/
-- /* TASK No. 5 */
-- /* Create work table */

-- create table RAX_APP_USER.C$_0FOW_EVENT_STG
-- (
-- 	C1_ID	NUMBER(19) NULL,
-- 	C2_VERSION	NUMBER(19) NULL,
-- 	C3_ACTIVE	NUMBER(1) NULL,
-- 	C4_APO_ID	NUMBER(19) NULL,
-- 	C5_CREATED_BY	VARCHAR2(255) NULL,
-- 	C6_DATE_CREATED	TIMESTAMP(6) NULL,
-- 	C7_DESCRIPTION	VARCHAR2(255) NULL,
-- 	C8_END_DATE	TIMESTAMP(6) NULL,
-- 	C9_EST_SUBJECTS	NUMBER(10) NULL,
-- 	C10_EVENT_GUID	VARCHAR2(255) NULL,
-- 	C11_EVENT_TYPE	VARCHAR2(255) NULL,
-- 	C12_EVENT_REF_ID	VARCHAR2(255) NULL,
-- 	C13_JOB_SEQUENCE	VARCHAR2(255) NULL,
-- 	C14_LAST_UPDATED	TIMESTAMP(6) NULL,
-- 	C15_PRIM_SORT	VARCHAR2(255) NULL,
-- 	C16_PUBLISHED	NUMBER(1) NULL,
-- 	C17_REVISION_NO	NUMBER(19) NULL,
-- 	C18_SEC_SORT	VARCHAR2(255) NULL,
-- 	C19_SHIP_TO	VARCHAR2(255) NULL,
-- 	C20_SHIP_TO_ADDRESS	VARCHAR2(255) NULL,
-- 	C21_START_DATE	TIMESTAMP(6) NULL,
-- 	C22_UPDATED_BY	VARCHAR2(255) NULL,
-- 	C23_PDK_NUMBER	VARCHAR2(255) NULL,
-- 	C24_ALTERNATE_PICTURE_DAY_TEXT	VARCHAR2(255) NULL,
-- 	C25_SPECIAL_INSTRUCTIONS	VARCHAR2(1024) NULL,
-- 	C26_STATUS	VARCHAR2(255) NULL,
-- 	C27_FLYER_TITLE	VARCHAR2(255) NULL,
-- 	C28_SHIP_TO_SATELLITE_CODE	VARCHAR2(255) NULL,
-- 	C29_YB_ARRIVAL_DATE	TIMESTAMP(6) NULL,
-- 	C30_COVER_ENDSHEET_DEADLINE	TIMESTAMP(6) NULL,
-- 	C31_FIRST_PAGE_DEADLINE	TIMESTAMP(6) NULL,
-- 	C32_FINAL_PAGE_DEADLINE	TIMESTAMP(6) NULL,
-- 	C33_CUT_OUT_PAGES	NUMBER(1) NULL,
-- 	C34_YB_EXTRA_COPIES	NUMBER(1) NULL,
-- 	C35_YB_PAGES	NUMBER(3) NULL,
-- 	C36_YB_COPIES	NUMBER(4) NULL,
-- 	C37_YB_SOFT_COVER_QTY	NUMBER(3) NULL,
-- 	C38_YB_HARD_COVER_QTY	NUMBER(3) NULL,
-- 	C39_YB_REORDER_CHARGE	NUMBER(3) NULL,
-- 	C40_INVOICE_TO	VARCHAR2(255) NULL,
-- 	C41_INVOICE_TO_ADDRESS	VARCHAR2(255) NULL,
-- 	C42_SHIPPING_HANDLING	VARCHAR2(255) NULL,
-- 	C43_SHIPPING_CHARGE	NUMBER NULL,
-- 	C44_PORTRAIT_PAGES	NUMBER(3) NULL,
-- 	C45_ACTIVITY_PAGES	NUMBER(3) NULL,
-- 	C46_SR_APPOINTMENT_DISTRIBUTIO	VARCHAR2(20) NULL,
-- 	C47_AUTO_PDK_DISABLED	NUMBER(22,1) NULL,
-- 	C48_AUTO_PDK_DISABLED_REASON	VARCHAR2(1020) NULL,
-- 	C49_AUTO_PDK_UPDATED_BY	VARCHAR2(1020) NULL,
-- 	C50_AUTO_PDK_UPDATED_DATE	TIMESTAMP(6) NULL,
-- 	C51_YB_DEPOSIT_PERCENT	NUMBER NULL,
-- 	C52_SCHOOL_PO_HEADER	VARCHAR2(50) NULL,
-- 	C53_RECEIVED_DATE	DATE NULL,
-- 	C54_PDKOFFSET	NUMBER NULL,
-- 	C55_SALE_TYPE	VARCHAR2(10) NULL,
-- 	C56_CLASS_PICTURE_RELEASE	NUMBER NULL,
-- 	C57_FINAL_QUANTITY_DEADLINE	DATE NULL,
-- 	C58_ADDITIONAL_PAGE_DEADLINE2	DATE NULL,
-- 	C59_ADDITIONAL_PAGE_DEADLINE3	DATE NULL,
-- 	C60_EXTRA_COVERAGE_DEADLINE	DATE NULL,
-- 	C61_ENHANCEMENT_DEADLINE	DATE NULL,
-- 	C62_FIRST_PAGE_DEADLINE_PP	NUMBER NULL,
-- 	C63_ADDITIONAL_PAGE_DEADLINE2_	NUMBER NULL,
-- 	C64_ADDITIONAL_PAGE_DEADLINE3_	NUMBER NULL,
-- 	C65_EXTRA_COVERAGE_DEADLINE_PP	NUMBER NULL,
-- 	C66_FINAL_PAGE_DEADLINE_PP	NUMBER NULL,
-- 	C67_EVENT_IMAGE_COMPLETE	NUMBER(1) NULL
-- )
-- NOLOGGING

-- &


-- /*-----------------------------------------------*/
-- /* TASK No. 6 */
-- /* Load data */

-- /* SOURCE CODE */


-- select	
-- 	EVENT.ID	   C1_ID,
-- 	EVENT.VERSION	   C2_VERSION,
-- 	EVENT.ACTIVE	   C3_ACTIVE,
-- 	EVENT.APO_ID	   C4_APO_ID,
-- 	EVENT.CREATED_BY	   C5_CREATED_BY,
-- 	EVENT.DATE_CREATED	   C6_DATE_CREATED,
-- 	EVENT.DESCRIPTION	   C7_DESCRIPTION,
-- 	EVENT.END_DATE	   C8_END_DATE,
-- 	EVENT.EST_SUBJECTS	   C9_EST_SUBJECTS,
-- 	EVENT.EVENT_GUID	   C10_EVENT_GUID,
-- 	EVENT.EVENT_TYPE	   C11_EVENT_TYPE,
-- 	EVENT.EVENT_REF_ID	   C12_EVENT_REF_ID,
-- 	EVENT.JOB_SEQUENCE	   C13_JOB_SEQUENCE,
-- 	EVENT.LAST_UPDATED	   C14_LAST_UPDATED,
-- 	EVENT.PRIM_SORT	   C15_PRIM_SORT,
-- 	EVENT.PUBLISHED	   C16_PUBLISHED,
-- 	EVENT.REVISION_NO	   C17_REVISION_NO,
-- 	EVENT.SEC_SORT	   C18_SEC_SORT,
-- 	EVENT.SHIP_TO	   C19_SHIP_TO,
-- 	EVENT.SHIP_TO_ADDRESS	   C20_SHIP_TO_ADDRESS,
-- 	EVENT.START_DATE	   C21_START_DATE,
-- 	EVENT.UPDATED_BY	   C22_UPDATED_BY,
-- 	EVENT.PDK_NUMBER	   C23_PDK_NUMBER,
-- 	EVENT.ALTERNATE_PICTURE_DAY_TEXT	   C24_ALTERNATE_PICTURE_DAY_TEXT,
-- 	EVENT.SPECIAL_INSTRUCTIONS	   C25_SPECIAL_INSTRUCTIONS,
-- 	EVENT.STATUS	   C26_STATUS,
-- 	EVENT.FLYER_TITLE	   C27_FLYER_TITLE,
-- 	EVENT.SHIP_TO_SATELLITE_CODE	   C28_SHIP_TO_SATELLITE_CODE,
-- 	EVENT.YB_ARRIVAL_DATE	   C29_YB_ARRIVAL_DATE,
-- 	EVENT.COVER_ENDSHEET_DEADLINE	   C30_COVER_ENDSHEET_DEADLINE,
-- 	EVENT.FIRST_PAGE_DEADLINE	   C31_FIRST_PAGE_DEADLINE,
-- 	EVENT.FINAL_PAGE_DEADLINE	   C32_FINAL_PAGE_DEADLINE,
-- 	EVENT.CUT_OUT_PAGES	   C33_CUT_OUT_PAGES,
-- 	EVENT.YB_EXTRA_COPIES	   C34_YB_EXTRA_COPIES,
-- 	EVENT.YB_PAGES	   C35_YB_PAGES,
-- 	EVENT.YB_COPIES	   C36_YB_COPIES,
-- 	EVENT.YB_SOFT_COVER_QTY	   C37_YB_SOFT_COVER_QTY,
-- 	EVENT.YB_HARD_COVER_QTY	   C38_YB_HARD_COVER_QTY,
-- 	EVENT.YB_REORDER_CHARGE	   C39_YB_REORDER_CHARGE,
-- 	EVENT.INVOICE_TO	   C40_INVOICE_TO,
-- 	EVENT.INVOICE_TO_ADDRESS	   C41_INVOICE_TO_ADDRESS,
-- 	EVENT.SHIPPING_HANDLING	   C42_SHIPPING_HANDLING,
-- 	EVENT.SHIPPING_CHARGE	   C43_SHIPPING_CHARGE,
-- 	EVENT.PORTRAIT_PAGES	   C44_PORTRAIT_PAGES,
-- 	EVENT.ACTIVITY_PAGES	   C45_ACTIVITY_PAGES,
-- 	EVENT.SR_APPOINTMENT_DISTRIBUTION	   C46_SR_APPOINTMENT_DISTRIBUTIO,
-- 	EVENT.AUTO_PDK_DISABLED	   C47_AUTO_PDK_DISABLED,
-- 	EVENT.AUTO_PDK_DISABLED_REASON	   C48_AUTO_PDK_DISABLED_REASON,
-- 	EVENT.AUTO_PDK_UPDATED_BY	   C49_AUTO_PDK_UPDATED_BY,
-- 	EVENT.AUTO_PDK_UPDATED_DATE	   C50_AUTO_PDK_UPDATED_DATE,
-- 	EVENT.YB_DEPOSIT_PERCENT	   C51_YB_DEPOSIT_PERCENT,
-- 	EVENT.SCHOOL_PO_HEADER	   C52_SCHOOL_PO_HEADER,
-- 	EVENT.RECEIVED_DATE	   C53_RECEIVED_DATE,
-- 	EVENT.PDKOFFSET	   C54_PDKOFFSET,
-- 	EVENT.SALE_TYPE	   C55_SALE_TYPE,
-- 	EVENT.CLASS_PICTURE_RELEASE	   C56_CLASS_PICTURE_RELEASE,
-- 	EVENT.FINAL_QUANTITY_DEADLINE	   C57_FINAL_QUANTITY_DEADLINE,
-- 	EVENT.ADDITIONAL_PAGE_DEADLINE2	   C58_ADDITIONAL_PAGE_DEADLINE2,
-- 	EVENT.ADDITIONAL_PAGE_DEADLINE3	   C59_ADDITIONAL_PAGE_DEADLINE3,
-- 	EVENT.EXTRA_COVERAGE_DEADLINE	   C60_EXTRA_COVERAGE_DEADLINE,
-- 	EVENT.ENHANCEMENT_DEADLINE	   C61_ENHANCEMENT_DEADLINE,
-- 	EVENT.FIRST_PAGE_DEADLINE_PP	   C62_FIRST_PAGE_DEADLINE_PP,
-- 	EVENT.ADDITIONAL_PAGE_DEADLINE2_PP	   C63_ADDITIONAL_PAGE_DEADLINE2_,
-- 	EVENT.ADDITIONAL_PAGE_DEADLINE3_PP	   C64_ADDITIONAL_PAGE_DEADLINE3_,
-- 	EVENT.EXTRA_COVERAGE_DEADLINE_PP	   C65_EXTRA_COVERAGE_DEADLINE_PP,
-- 	EVENT.FINAL_PAGE_DEADLINE_PP	   C66_FINAL_PAGE_DEADLINE_PP,
-- 	EVENT.EVENT_IMAGE_COMPLETE	   C67_EVENT_IMAGE_COMPLETE
-- from	FOW_OWN.EVENT   EVENT
-- where	(1=1)
-- And (EVENT.LAST_UPDATED >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)







-- &

-- /* TARGET CODE */
-- insert /*+ append */ into RAX_APP_USER.C$_0FOW_EVENT_STG
-- (
-- 	C1_ID,
-- 	C2_VERSION,
-- 	C3_ACTIVE,
-- 	C4_APO_ID,
-- 	C5_CREATED_BY,
-- 	C6_DATE_CREATED,
-- 	C7_DESCRIPTION,
-- 	C8_END_DATE,
-- 	C9_EST_SUBJECTS,
-- 	C10_EVENT_GUID,
-- 	C11_EVENT_TYPE,
-- 	C12_EVENT_REF_ID,
-- 	C13_JOB_SEQUENCE,
-- 	C14_LAST_UPDATED,
-- 	C15_PRIM_SORT,
-- 	C16_PUBLISHED,
-- 	C17_REVISION_NO,
-- 	C18_SEC_SORT,
-- 	C19_SHIP_TO,
-- 	C20_SHIP_TO_ADDRESS,
-- 	C21_START_DATE,
-- 	C22_UPDATED_BY,
-- 	C23_PDK_NUMBER,
-- 	C24_ALTERNATE_PICTURE_DAY_TEXT,
-- 	C25_SPECIAL_INSTRUCTIONS,
-- 	C26_STATUS,
-- 	C27_FLYER_TITLE,
-- 	C28_SHIP_TO_SATELLITE_CODE,
-- 	C29_YB_ARRIVAL_DATE,
-- 	C30_COVER_ENDSHEET_DEADLINE,
-- 	C31_FIRST_PAGE_DEADLINE,
-- 	C32_FINAL_PAGE_DEADLINE,
-- 	C33_CUT_OUT_PAGES,
-- 	C34_YB_EXTRA_COPIES,
-- 	C35_YB_PAGES,
-- 	C36_YB_COPIES,
-- 	C37_YB_SOFT_COVER_QTY,
-- 	C38_YB_HARD_COVER_QTY,
-- 	C39_YB_REORDER_CHARGE,
-- 	C40_INVOICE_TO,
-- 	C41_INVOICE_TO_ADDRESS,
-- 	C42_SHIPPING_HANDLING,
-- 	C43_SHIPPING_CHARGE,
-- 	C44_PORTRAIT_PAGES,
-- 	C45_ACTIVITY_PAGES,
-- 	C46_SR_APPOINTMENT_DISTRIBUTIO,
-- 	C47_AUTO_PDK_DISABLED,
-- 	C48_AUTO_PDK_DISABLED_REASON,
-- 	C49_AUTO_PDK_UPDATED_BY,
-- 	C50_AUTO_PDK_UPDATED_DATE,
-- 	C51_YB_DEPOSIT_PERCENT,
-- 	C52_SCHOOL_PO_HEADER,
-- 	C53_RECEIVED_DATE,
-- 	C54_PDKOFFSET,
-- 	C55_SALE_TYPE,
-- 	C56_CLASS_PICTURE_RELEASE,
-- 	C57_FINAL_QUANTITY_DEADLINE,
-- 	C58_ADDITIONAL_PAGE_DEADLINE2,
-- 	C59_ADDITIONAL_PAGE_DEADLINE3,
-- 	C60_EXTRA_COVERAGE_DEADLINE,
-- 	C61_ENHANCEMENT_DEADLINE,
-- 	C62_FIRST_PAGE_DEADLINE_PP,
-- 	C63_ADDITIONAL_PAGE_DEADLINE2_,
-- 	C64_ADDITIONAL_PAGE_DEADLINE3_,
-- 	C65_EXTRA_COVERAGE_DEADLINE_PP,
-- 	C66_FINAL_PAGE_DEADLINE_PP,
-- 	C67_EVENT_IMAGE_COMPLETE
-- )
-- values
-- (
-- 	:C1_ID,
-- 	:C2_VERSION,
-- 	:C3_ACTIVE,
-- 	:C4_APO_ID,
-- 	:C5_CREATED_BY,
-- 	:C6_DATE_CREATED,
-- 	:C7_DESCRIPTION,
-- 	:C8_END_DATE,
-- 	:C9_EST_SUBJECTS,
-- 	:C10_EVENT_GUID,
-- 	:C11_EVENT_TYPE,
-- 	:C12_EVENT_REF_ID,
-- 	:C13_JOB_SEQUENCE,
-- 	:C14_LAST_UPDATED,
-- 	:C15_PRIM_SORT,
-- 	:C16_PUBLISHED,
-- 	:C17_REVISION_NO,
-- 	:C18_SEC_SORT,
-- 	:C19_SHIP_TO,
-- 	:C20_SHIP_TO_ADDRESS,
-- 	:C21_START_DATE,
-- 	:C22_UPDATED_BY,
-- 	:C23_PDK_NUMBER,
-- 	:C24_ALTERNATE_PICTURE_DAY_TEXT,
-- 	:C25_SPECIAL_INSTRUCTIONS,
-- 	:C26_STATUS,
-- 	:C27_FLYER_TITLE,
-- 	:C28_SHIP_TO_SATELLITE_CODE,
-- 	:C29_YB_ARRIVAL_DATE,
-- 	:C30_COVER_ENDSHEET_DEADLINE,
-- 	:C31_FIRST_PAGE_DEADLINE,
-- 	:C32_FINAL_PAGE_DEADLINE,
-- 	:C33_CUT_OUT_PAGES,
-- 	:C34_YB_EXTRA_COPIES,
-- 	:C35_YB_PAGES,
-- 	:C36_YB_COPIES,
-- 	:C37_YB_SOFT_COVER_QTY,
-- 	:C38_YB_HARD_COVER_QTY,
-- 	:C39_YB_REORDER_CHARGE,
-- 	:C40_INVOICE_TO,
-- 	:C41_INVOICE_TO_ADDRESS,
-- 	:C42_SHIPPING_HANDLING,
-- 	:C43_SHIPPING_CHARGE,
-- 	:C44_PORTRAIT_PAGES,
-- 	:C45_ACTIVITY_PAGES,
-- 	:C46_SR_APPOINTMENT_DISTRIBUTIO,
-- 	:C47_AUTO_PDK_DISABLED,
-- 	:C48_AUTO_PDK_DISABLED_REASON,
-- 	:C49_AUTO_PDK_UPDATED_BY,
-- 	:C50_AUTO_PDK_UPDATED_DATE,
-- 	:C51_YB_DEPOSIT_PERCENT,
-- 	:C52_SCHOOL_PO_HEADER,
-- 	:C53_RECEIVED_DATE,
-- 	:C54_PDKOFFSET,
-- 	:C55_SALE_TYPE,
-- 	:C56_CLASS_PICTURE_RELEASE,
-- 	:C57_FINAL_QUANTITY_DEADLINE,
-- 	:C58_ADDITIONAL_PAGE_DEADLINE2,
-- 	:C59_ADDITIONAL_PAGE_DEADLINE3,
-- 	:C60_EXTRA_COVERAGE_DEADLINE,
-- 	:C61_ENHANCEMENT_DEADLINE,
-- 	:C62_FIRST_PAGE_DEADLINE_PP,
-- 	:C63_ADDITIONAL_PAGE_DEADLINE2_,
-- 	:C64_ADDITIONAL_PAGE_DEADLINE3_,
-- 	:C65_EXTRA_COVERAGE_DEADLINE_PP,
-- 	:C66_FINAL_PAGE_DEADLINE_PP,
-- 	:C67_EVENT_IMAGE_COMPLETE
-- )

-- &


/*-----------------------------------------------*/
/* TASK No. 7 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0FOW_EVENT_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Drop flow table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_FOW_EVENT_STG';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 10 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_FOW_EVENT_STG
(
	ID		NUMBER(19) NULL,
	VERSION		NUMBER(19) NULL,
	ACTIVE		NUMBER(1) NULL,
	APO_ID		NUMBER(19) NULL,
	CREATED_BY		VARCHAR2(255) NULL,
	DATE_CREATED		TIMESTAMP(6) NULL,
	DESCRIPTION		VARCHAR2(255) NULL,
	END_DATE		TIMESTAMP(6) NULL,
	EST_SUBJECTS		NUMBER(10) NULL,
	EVENT_GUID		VARCHAR2(255) NULL,
	EVENT_TYPE		VARCHAR2(255) NULL,
	EVENT_REF_ID		VARCHAR2(255) NULL,
	JOB_SEQUENCE		VARCHAR2(255) NULL,
	LAST_UPDATED		TIMESTAMP(6) NULL,
	PRIM_SORT		VARCHAR2(255) NULL,
	PUBLISHED		NUMBER(1) NULL,
	REVISION_NO		NUMBER(19) NULL,
	SEC_SORT		VARCHAR2(255) NULL,
	SHIP_TO		VARCHAR2(255) NULL,
	SHIP_TO_ADDRESS		VARCHAR2(255) NULL,
	START_DATE		TIMESTAMP(6) NULL,
	UPDATED_BY		VARCHAR2(255) NULL,
	PDK_NUMBER		VARCHAR2(255) NULL,
	ALTERNATE_PICTURE_DAY_TEXT		VARCHAR2(255) NULL,
	SPECIAL_INSTRUCTIONS		VARCHAR2(1024) NULL,
	STATUS		VARCHAR2(255) NULL,
	FLYER_TITLE		VARCHAR2(255) NULL,
	SHIP_TO_SATELLITE_CODE		VARCHAR2(255) NULL,
	YB_ARRIVAL_DATE		TIMESTAMP(6) NULL,
	COVER_ENDSHEET_DEADLINE		TIMESTAMP(6) NULL,
	FIRST_PAGE_DEADLINE		TIMESTAMP(6) NULL,
	FINAL_PAGE_DEADLINE		TIMESTAMP(6) NULL,
	CUT_OUT_PAGES		NUMBER(1) NULL,
	YB_EXTRA_COPIES		NUMBER(1) NULL,
	YB_PAGES		NUMBER(3) NULL,
	YB_COPIES		NUMBER(4) NULL,
	YB_SOFT_COVER_QTY		NUMBER(3) NULL,
	YB_HARD_COVER_QTY		NUMBER(3) NULL,
	YB_REORDER_CHARGE		NUMBER(3) NULL,
	INVOICE_TO		VARCHAR2(255) NULL,
	INVOICE_TO_ADDRESS		VARCHAR2(255) NULL,
	SHIPPING_HANDLING		VARCHAR2(255) NULL,
	SHIPPING_CHARGE		NUMBER NULL,
	PORTRAIT_PAGES		NUMBER(3) NULL,
	ACTIVITY_PAGES		NUMBER(3) NULL,
	SR_APPOINTMENT_DISTRIBUTION		VARCHAR2(20) NULL,
	AUTO_PDK_DISABLED		NUMBER(22,1) NULL,
	AUTO_PDK_DISABLED_REASON		VARCHAR2(1020) NULL,
	AUTO_PDK_UPDATED_BY		VARCHAR2(1020) NULL,
	AUTO_PDK_UPDATED_DATE		TIMESTAMP(6) NULL,
	YB_DEPOSIT_PERCENT		NUMBER NULL,
	SCHOOL_PO_HEADER		VARCHAR2(50) NULL,
	RECEIVED_DATE		DATE NULL,
	PDKOFFSET		NUMBER NULL,
	SALE_TYPE		VARCHAR2(10) NULL,
	CLASS_PICTURE_RELEASE		NUMBER NULL,
	FINAL_QUANTITY_DEADLINE		DATE NULL,
	ADDITIONAL_PAGE_DEADLINE2		DATE NULL,
	ADDITIONAL_PAGE_DEADLINE3		DATE NULL,
	EXTRA_COVERAGE_DEADLINE		DATE NULL,
	ENHANCEMENT_DEADLINE		DATE NULL,
	FIRST_PAGE_DEADLINE_PP		NUMBER NULL,
	ADDITIONAL_PAGE_DEADLINE2_PP		NUMBER NULL,
	ADDITIONAL_PAGE_DEADLINE3_PP		NUMBER NULL,
	EXTRA_COVERAGE_DEADLINE_PP		NUMBER NULL,
	FINAL_PAGE_DEADLINE_PP		NUMBER NULL,
	EVENT_IMAGE_COMPLETE		NUMBER(1) NULL,
	IND_UPDATE		CHAR(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 11 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 


  


insert into	RAX_APP_USER.I$_FOW_EVENT_STG
(
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE,
	IND_UPDATE
)
select 
ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE,
	IND_UPDATE
 from (


select 	 
	
	C1_ID ID,
	C2_VERSION VERSION,
	C3_ACTIVE ACTIVE,
	C4_APO_ID APO_ID,
	C5_CREATED_BY CREATED_BY,
	C6_DATE_CREATED DATE_CREATED,
	C7_DESCRIPTION DESCRIPTION,
	C8_END_DATE END_DATE,
	C9_EST_SUBJECTS EST_SUBJECTS,
	C10_EVENT_GUID EVENT_GUID,
	C11_EVENT_TYPE EVENT_TYPE,
	C12_EVENT_REF_ID EVENT_REF_ID,
	C13_JOB_SEQUENCE JOB_SEQUENCE,
	C14_LAST_UPDATED LAST_UPDATED,
	C15_PRIM_SORT PRIM_SORT,
	C16_PUBLISHED PUBLISHED,
	C17_REVISION_NO REVISION_NO,
	C18_SEC_SORT SEC_SORT,
	C19_SHIP_TO SHIP_TO,
	C20_SHIP_TO_ADDRESS SHIP_TO_ADDRESS,
	C21_START_DATE START_DATE,
	C22_UPDATED_BY UPDATED_BY,
	C23_PDK_NUMBER PDK_NUMBER,
	C24_ALTERNATE_PICTURE_DAY_TEXT ALTERNATE_PICTURE_DAY_TEXT,
	C25_SPECIAL_INSTRUCTIONS SPECIAL_INSTRUCTIONS,
	C26_STATUS STATUS,
	C27_FLYER_TITLE FLYER_TITLE,
	C28_SHIP_TO_SATELLITE_CODE SHIP_TO_SATELLITE_CODE,
	C29_YB_ARRIVAL_DATE YB_ARRIVAL_DATE,
	C30_COVER_ENDSHEET_DEADLINE COVER_ENDSHEET_DEADLINE,
	C31_FIRST_PAGE_DEADLINE FIRST_PAGE_DEADLINE,
	C32_FINAL_PAGE_DEADLINE FINAL_PAGE_DEADLINE,
	C33_CUT_OUT_PAGES CUT_OUT_PAGES,
	C34_YB_EXTRA_COPIES YB_EXTRA_COPIES,
	C35_YB_PAGES YB_PAGES,
	C36_YB_COPIES YB_COPIES,
	C37_YB_SOFT_COVER_QTY YB_SOFT_COVER_QTY,
	C38_YB_HARD_COVER_QTY YB_HARD_COVER_QTY,
	C39_YB_REORDER_CHARGE YB_REORDER_CHARGE,
	C40_INVOICE_TO INVOICE_TO,
	C41_INVOICE_TO_ADDRESS INVOICE_TO_ADDRESS,
	C42_SHIPPING_HANDLING SHIPPING_HANDLING,
	C43_SHIPPING_CHARGE SHIPPING_CHARGE,
	C44_PORTRAIT_PAGES PORTRAIT_PAGES,
	C45_ACTIVITY_PAGES ACTIVITY_PAGES,
	C46_SR_APPOINTMENT_DISTRIBUTIO SR_APPOINTMENT_DISTRIBUTION,
	C47_AUTO_PDK_DISABLED AUTO_PDK_DISABLED,
	C48_AUTO_PDK_DISABLED_REASON AUTO_PDK_DISABLED_REASON,
	C49_AUTO_PDK_UPDATED_BY AUTO_PDK_UPDATED_BY,
	C50_AUTO_PDK_UPDATED_DATE AUTO_PDK_UPDATED_DATE,
	C51_YB_DEPOSIT_PERCENT YB_DEPOSIT_PERCENT,
	C52_SCHOOL_PO_HEADER SCHOOL_PO_HEADER,
	C53_RECEIVED_DATE RECEIVED_DATE,
	C54_PDKOFFSET PDKOFFSET,
	C55_SALE_TYPE SALE_TYPE,
	C56_CLASS_PICTURE_RELEASE CLASS_PICTURE_RELEASE,
	C57_FINAL_QUANTITY_DEADLINE FINAL_QUANTITY_DEADLINE,
	C58_ADDITIONAL_PAGE_DEADLINE2 ADDITIONAL_PAGE_DEADLINE2,
	C59_ADDITIONAL_PAGE_DEADLINE3 ADDITIONAL_PAGE_DEADLINE3,
	C60_EXTRA_COVERAGE_DEADLINE EXTRA_COVERAGE_DEADLINE,
	C61_ENHANCEMENT_DEADLINE ENHANCEMENT_DEADLINE,
	C62_FIRST_PAGE_DEADLINE_PP FIRST_PAGE_DEADLINE_PP,
	C63_ADDITIONAL_PAGE_DEADLINE2_ ADDITIONAL_PAGE_DEADLINE2_PP,
	C64_ADDITIONAL_PAGE_DEADLINE3_ ADDITIONAL_PAGE_DEADLINE3_PP,
	C65_EXTRA_COVERAGE_DEADLINE_PP EXTRA_COVERAGE_DEADLINE_PP,
	C66_FINAL_PAGE_DEADLINE_PP FINAL_PAGE_DEADLINE_PP,
	C67_EVENT_IMAGE_COMPLETE EVENT_IMAGE_COMPLETE,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0FOW_EVENT_STG
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.FOW_EVENT_STG T
	where	T.ID	= S.ID 
		 and ((T.VERSION = S.VERSION) or (T.VERSION IS NULL and S.VERSION IS NULL)) and
		((T.ACTIVE = S.ACTIVE) or (T.ACTIVE IS NULL and S.ACTIVE IS NULL)) and
		((T.APO_ID = S.APO_ID) or (T.APO_ID IS NULL and S.APO_ID IS NULL)) and
		((T.CREATED_BY = S.CREATED_BY) or (T.CREATED_BY IS NULL and S.CREATED_BY IS NULL)) and
		((T.DATE_CREATED = S.DATE_CREATED) or (T.DATE_CREATED IS NULL and S.DATE_CREATED IS NULL)) and
		((T.DESCRIPTION = S.DESCRIPTION) or (T.DESCRIPTION IS NULL and S.DESCRIPTION IS NULL)) and
		((T.END_DATE = S.END_DATE) or (T.END_DATE IS NULL and S.END_DATE IS NULL)) and
		((T.EST_SUBJECTS = S.EST_SUBJECTS) or (T.EST_SUBJECTS IS NULL and S.EST_SUBJECTS IS NULL)) and
		((T.EVENT_GUID = S.EVENT_GUID) or (T.EVENT_GUID IS NULL and S.EVENT_GUID IS NULL)) and
		((T.EVENT_TYPE = S.EVENT_TYPE) or (T.EVENT_TYPE IS NULL and S.EVENT_TYPE IS NULL)) and
		((T.EVENT_REF_ID = S.EVENT_REF_ID) or (T.EVENT_REF_ID IS NULL and S.EVENT_REF_ID IS NULL)) and
		((T.JOB_SEQUENCE = S.JOB_SEQUENCE) or (T.JOB_SEQUENCE IS NULL and S.JOB_SEQUENCE IS NULL)) and
		((T.LAST_UPDATED = S.LAST_UPDATED) or (T.LAST_UPDATED IS NULL and S.LAST_UPDATED IS NULL)) and
		((T.PRIM_SORT = S.PRIM_SORT) or (T.PRIM_SORT IS NULL and S.PRIM_SORT IS NULL)) and
		((T.PUBLISHED = S.PUBLISHED) or (T.PUBLISHED IS NULL and S.PUBLISHED IS NULL)) and
		((T.REVISION_NO = S.REVISION_NO) or (T.REVISION_NO IS NULL and S.REVISION_NO IS NULL)) and
		((T.SEC_SORT = S.SEC_SORT) or (T.SEC_SORT IS NULL and S.SEC_SORT IS NULL)) and
		((T.SHIP_TO = S.SHIP_TO) or (T.SHIP_TO IS NULL and S.SHIP_TO IS NULL)) and
		((T.SHIP_TO_ADDRESS = S.SHIP_TO_ADDRESS) or (T.SHIP_TO_ADDRESS IS NULL and S.SHIP_TO_ADDRESS IS NULL)) and
		((T.START_DATE = S.START_DATE) or (T.START_DATE IS NULL and S.START_DATE IS NULL)) and
		((T.UPDATED_BY = S.UPDATED_BY) or (T.UPDATED_BY IS NULL and S.UPDATED_BY IS NULL)) and
		((T.PDK_NUMBER = S.PDK_NUMBER) or (T.PDK_NUMBER IS NULL and S.PDK_NUMBER IS NULL)) and
		((T.ALTERNATE_PICTURE_DAY_TEXT = S.ALTERNATE_PICTURE_DAY_TEXT) or (T.ALTERNATE_PICTURE_DAY_TEXT IS NULL and S.ALTERNATE_PICTURE_DAY_TEXT IS NULL)) and
		((T.SPECIAL_INSTRUCTIONS = S.SPECIAL_INSTRUCTIONS) or (T.SPECIAL_INSTRUCTIONS IS NULL and S.SPECIAL_INSTRUCTIONS IS NULL)) and
		((T.STATUS = S.STATUS) or (T.STATUS IS NULL and S.STATUS IS NULL)) and
		((T.FLYER_TITLE = S.FLYER_TITLE) or (T.FLYER_TITLE IS NULL and S.FLYER_TITLE IS NULL)) and
		((T.SHIP_TO_SATELLITE_CODE = S.SHIP_TO_SATELLITE_CODE) or (T.SHIP_TO_SATELLITE_CODE IS NULL and S.SHIP_TO_SATELLITE_CODE IS NULL)) and
		((T.YB_ARRIVAL_DATE = S.YB_ARRIVAL_DATE) or (T.YB_ARRIVAL_DATE IS NULL and S.YB_ARRIVAL_DATE IS NULL)) and
		((T.COVER_ENDSHEET_DEADLINE = S.COVER_ENDSHEET_DEADLINE) or (T.COVER_ENDSHEET_DEADLINE IS NULL and S.COVER_ENDSHEET_DEADLINE IS NULL)) and
		((T.FIRST_PAGE_DEADLINE = S.FIRST_PAGE_DEADLINE) or (T.FIRST_PAGE_DEADLINE IS NULL and S.FIRST_PAGE_DEADLINE IS NULL)) and
		((T.FINAL_PAGE_DEADLINE = S.FINAL_PAGE_DEADLINE) or (T.FINAL_PAGE_DEADLINE IS NULL and S.FINAL_PAGE_DEADLINE IS NULL)) and
		((T.CUT_OUT_PAGES = S.CUT_OUT_PAGES) or (T.CUT_OUT_PAGES IS NULL and S.CUT_OUT_PAGES IS NULL)) and
		((T.YB_EXTRA_COPIES = S.YB_EXTRA_COPIES) or (T.YB_EXTRA_COPIES IS NULL and S.YB_EXTRA_COPIES IS NULL)) and
		((T.YB_PAGES = S.YB_PAGES) or (T.YB_PAGES IS NULL and S.YB_PAGES IS NULL)) and
		((T.YB_COPIES = S.YB_COPIES) or (T.YB_COPIES IS NULL and S.YB_COPIES IS NULL)) and
		((T.YB_SOFT_COVER_QTY = S.YB_SOFT_COVER_QTY) or (T.YB_SOFT_COVER_QTY IS NULL and S.YB_SOFT_COVER_QTY IS NULL)) and
		((T.YB_HARD_COVER_QTY = S.YB_HARD_COVER_QTY) or (T.YB_HARD_COVER_QTY IS NULL and S.YB_HARD_COVER_QTY IS NULL)) and
		((T.YB_REORDER_CHARGE = S.YB_REORDER_CHARGE) or (T.YB_REORDER_CHARGE IS NULL and S.YB_REORDER_CHARGE IS NULL)) and
		((T.INVOICE_TO = S.INVOICE_TO) or (T.INVOICE_TO IS NULL and S.INVOICE_TO IS NULL)) and
		((T.INVOICE_TO_ADDRESS = S.INVOICE_TO_ADDRESS) or (T.INVOICE_TO_ADDRESS IS NULL and S.INVOICE_TO_ADDRESS IS NULL)) and
		((T.SHIPPING_HANDLING = S.SHIPPING_HANDLING) or (T.SHIPPING_HANDLING IS NULL and S.SHIPPING_HANDLING IS NULL)) and
		((T.SHIPPING_CHARGE = S.SHIPPING_CHARGE) or (T.SHIPPING_CHARGE IS NULL and S.SHIPPING_CHARGE IS NULL)) and
		((T.PORTRAIT_PAGES = S.PORTRAIT_PAGES) or (T.PORTRAIT_PAGES IS NULL and S.PORTRAIT_PAGES IS NULL)) and
		((T.ACTIVITY_PAGES = S.ACTIVITY_PAGES) or (T.ACTIVITY_PAGES IS NULL and S.ACTIVITY_PAGES IS NULL)) and
		((T.SR_APPOINTMENT_DISTRIBUTION = S.SR_APPOINTMENT_DISTRIBUTION) or (T.SR_APPOINTMENT_DISTRIBUTION IS NULL and S.SR_APPOINTMENT_DISTRIBUTION IS NULL)) and
		((T.AUTO_PDK_DISABLED = S.AUTO_PDK_DISABLED) or (T.AUTO_PDK_DISABLED IS NULL and S.AUTO_PDK_DISABLED IS NULL)) and
		((T.AUTO_PDK_DISABLED_REASON = S.AUTO_PDK_DISABLED_REASON) or (T.AUTO_PDK_DISABLED_REASON IS NULL and S.AUTO_PDK_DISABLED_REASON IS NULL)) and
		((T.AUTO_PDK_UPDATED_BY = S.AUTO_PDK_UPDATED_BY) or (T.AUTO_PDK_UPDATED_BY IS NULL and S.AUTO_PDK_UPDATED_BY IS NULL)) and
		((T.AUTO_PDK_UPDATED_DATE = S.AUTO_PDK_UPDATED_DATE) or (T.AUTO_PDK_UPDATED_DATE IS NULL and S.AUTO_PDK_UPDATED_DATE IS NULL)) and
		((T.YB_DEPOSIT_PERCENT = S.YB_DEPOSIT_PERCENT) or (T.YB_DEPOSIT_PERCENT IS NULL and S.YB_DEPOSIT_PERCENT IS NULL)) and
		((T.SCHOOL_PO_HEADER = S.SCHOOL_PO_HEADER) or (T.SCHOOL_PO_HEADER IS NULL and S.SCHOOL_PO_HEADER IS NULL)) and
		((T.RECEIVED_DATE = S.RECEIVED_DATE) or (T.RECEIVED_DATE IS NULL and S.RECEIVED_DATE IS NULL)) and
		((T.PDKOFFSET = S.PDKOFFSET) or (T.PDKOFFSET IS NULL and S.PDKOFFSET IS NULL)) and
		((T.SALE_TYPE = S.SALE_TYPE) or (T.SALE_TYPE IS NULL and S.SALE_TYPE IS NULL)) and
		((T.CLASS_PICTURE_RELEASE = S.CLASS_PICTURE_RELEASE) or (T.CLASS_PICTURE_RELEASE IS NULL and S.CLASS_PICTURE_RELEASE IS NULL)) and
		((T.FINAL_QUANTITY_DEADLINE = S.FINAL_QUANTITY_DEADLINE) or (T.FINAL_QUANTITY_DEADLINE IS NULL and S.FINAL_QUANTITY_DEADLINE IS NULL)) and
		((T.ADDITIONAL_PAGE_DEADLINE2 = S.ADDITIONAL_PAGE_DEADLINE2) or (T.ADDITIONAL_PAGE_DEADLINE2 IS NULL and S.ADDITIONAL_PAGE_DEADLINE2 IS NULL)) and
		((T.ADDITIONAL_PAGE_DEADLINE3 = S.ADDITIONAL_PAGE_DEADLINE3) or (T.ADDITIONAL_PAGE_DEADLINE3 IS NULL and S.ADDITIONAL_PAGE_DEADLINE3 IS NULL)) and
		((T.EXTRA_COVERAGE_DEADLINE = S.EXTRA_COVERAGE_DEADLINE) or (T.EXTRA_COVERAGE_DEADLINE IS NULL and S.EXTRA_COVERAGE_DEADLINE IS NULL)) and
		((T.ENHANCEMENT_DEADLINE = S.ENHANCEMENT_DEADLINE) or (T.ENHANCEMENT_DEADLINE IS NULL and S.ENHANCEMENT_DEADLINE IS NULL)) and
		((T.FIRST_PAGE_DEADLINE_PP = S.FIRST_PAGE_DEADLINE_PP) or (T.FIRST_PAGE_DEADLINE_PP IS NULL and S.FIRST_PAGE_DEADLINE_PP IS NULL)) and
		((T.ADDITIONAL_PAGE_DEADLINE2_PP = S.ADDITIONAL_PAGE_DEADLINE2_PP) or (T.ADDITIONAL_PAGE_DEADLINE2_PP IS NULL and S.ADDITIONAL_PAGE_DEADLINE2_PP IS NULL)) and
		((T.ADDITIONAL_PAGE_DEADLINE3_PP = S.ADDITIONAL_PAGE_DEADLINE3_PP) or (T.ADDITIONAL_PAGE_DEADLINE3_PP IS NULL and S.ADDITIONAL_PAGE_DEADLINE3_PP IS NULL)) and
		((T.EXTRA_COVERAGE_DEADLINE_PP = S.EXTRA_COVERAGE_DEADLINE_PP) or (T.EXTRA_COVERAGE_DEADLINE_PP IS NULL and S.EXTRA_COVERAGE_DEADLINE_PP IS NULL)) and
		((T.FINAL_PAGE_DEADLINE_PP = S.FINAL_PAGE_DEADLINE_PP) or (T.FINAL_PAGE_DEADLINE_PP IS NULL and S.FINAL_PAGE_DEADLINE_PP IS NULL)) and
		((T.EVENT_IMAGE_COMPLETE = S.EVENT_IMAGE_COMPLETE) or (T.EVENT_IMAGE_COMPLETE IS NULL and S.EVENT_IMAGE_COMPLETE IS NULL))
        )

  
  

  

 


&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* Create Index on flow table */

create index	RAX_APP_USER.I$_FOW_EVENT_STG_IDX
on		RAX_APP_USER.I$_FOW_EVENT_STG (ID)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_FOW_EVENT_STG',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 14 */
/* create check table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.SNP_CHECK_TAB
						(
							CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
							SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
							RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
							FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
							ERR_TYPE		VARCHAR2(1 CHAR) NULL,
							ERR_MESS		VARCHAR2(250 CHAR) NULL ,
							CHECK_DATE	DATE NULL,
							ORIGIN		VARCHAR2(100 CHAR) NULL,
							CONS_NAME	VARCHAR2(35 CHAR) NULL,
							CONS_TYPE		VARCHAR2(2 CHAR) NULL,
							ERR_COUNT		NUMBER(10) NULL
						)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;
	

&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_STAGE'
and	ORIGIN 		= '(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 16 */
/* create error table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.E$_FOW_EVENT_STG
						(
							ODI_ROW_ID 		UROWID,
							ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
							ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
							ODI_CHECK_DATE	DATE NULL, 
							ID	NUMBER(19) NULL,
							VERSION	NUMBER(19) NULL,
							ACTIVE	NUMBER(1) NULL,
							APO_ID	NUMBER(19) NULL,
							CREATED_BY	VARCHAR2(255) NULL,
							DATE_CREATED	TIMESTAMP(6) NULL,
							DESCRIPTION	VARCHAR2(255) NULL,
							END_DATE	TIMESTAMP(6) NULL,
							EST_SUBJECTS	NUMBER(10) NULL,
							EVENT_GUID	VARCHAR2(255) NULL,
							EVENT_TYPE	VARCHAR2(255) NULL,
							EVENT_REF_ID	VARCHAR2(255) NULL,
							JOB_SEQUENCE	VARCHAR2(255) NULL,
							LAST_UPDATED	TIMESTAMP(6) NULL,
							PRIM_SORT	VARCHAR2(255) NULL,
							PUBLISHED	NUMBER(1) NULL,
							REVISION_NO	NUMBER(19) NULL,
							SEC_SORT	VARCHAR2(255) NULL,
							SHIP_TO	VARCHAR2(255) NULL,
							SHIP_TO_ADDRESS	VARCHAR2(255) NULL,
							START_DATE	TIMESTAMP(6) NULL,
							UPDATED_BY	VARCHAR2(255) NULL,
							PDK_NUMBER	VARCHAR2(255) NULL,
							ALTERNATE_PICTURE_DAY_TEXT	VARCHAR2(255) NULL,
							SPECIAL_INSTRUCTIONS	VARCHAR2(1024) NULL,
							STATUS	VARCHAR2(255) NULL,
							FLYER_TITLE	VARCHAR2(255) NULL,
							SHIP_TO_SATELLITE_CODE	VARCHAR2(255) NULL,
							YB_ARRIVAL_DATE	TIMESTAMP(6) NULL,
							COVER_ENDSHEET_DEADLINE	TIMESTAMP(6) NULL,
							FIRST_PAGE_DEADLINE	TIMESTAMP(6) NULL,
							FINAL_PAGE_DEADLINE	TIMESTAMP(6) NULL,
							CUT_OUT_PAGES	NUMBER(1) NULL,
							YB_EXTRA_COPIES	NUMBER(1) NULL,
							YB_PAGES	NUMBER(3) NULL,
							YB_COPIES	NUMBER(4) NULL,
							YB_SOFT_COVER_QTY	NUMBER(3) NULL,
							YB_HARD_COVER_QTY	NUMBER(3) NULL,
							YB_REORDER_CHARGE	NUMBER(3) NULL,
							INVOICE_TO	VARCHAR2(255) NULL,
							INVOICE_TO_ADDRESS	VARCHAR2(255) NULL,
							SHIPPING_HANDLING	VARCHAR2(255) NULL,
							SHIPPING_CHARGE	NUMBER NULL,
							PORTRAIT_PAGES	NUMBER(3) NULL,
							ACTIVITY_PAGES	NUMBER(3) NULL,
							SR_APPOINTMENT_DISTRIBUTION	VARCHAR2(20) NULL,
							AUTO_PDK_DISABLED	NUMBER(22,1) NULL,
							AUTO_PDK_DISABLED_REASON	VARCHAR2(1020) NULL,
							AUTO_PDK_UPDATED_BY	VARCHAR2(1020) NULL,
							AUTO_PDK_UPDATED_DATE	TIMESTAMP(6) NULL,
							YB_DEPOSIT_PERCENT	NUMBER NULL,
							SCHOOL_PO_HEADER	VARCHAR2(50) NULL,
							RECEIVED_DATE	DATE NULL,
							PDKOFFSET	NUMBER NULL,
							SALE_TYPE	VARCHAR2(10) NULL,
							CLASS_PICTURE_RELEASE	NUMBER NULL,
							FINAL_QUANTITY_DEADLINE	DATE NULL,
							ADDITIONAL_PAGE_DEADLINE2	DATE NULL,
							ADDITIONAL_PAGE_DEADLINE3	DATE NULL,
							EXTRA_COVERAGE_DEADLINE	DATE NULL,
							ENHANCEMENT_DEADLINE	DATE NULL,
							FIRST_PAGE_DEADLINE_PP	NUMBER NULL,
							ADDITIONAL_PAGE_DEADLINE2_PP	NUMBER NULL,
							ADDITIONAL_PAGE_DEADLINE3_PP	NUMBER NULL,
							EXTRA_COVERAGE_DEADLINE_PP	NUMBER NULL,
							FINAL_PAGE_DEADLINE_PP	NUMBER NULL,
							EVENT_IMAGE_COMPLETE	NUMBER(1) NULL,
							ADDITIONAL_PAGE_DEADLINE4	DATE NULL,
							ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
							ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
							ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
							ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
							ODI_SESS_NO		VARCHAR2(19 CHAR)
						)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;



&


/*-----------------------------------------------*/
/* TASK No. 17 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_FOW_EVENT_STG
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT')


&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* Create index on PK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.I$_FOW_EVENT_STG_IDX on RAX_APP_USER.I$_FOW_EVENT_STG (ID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 19 */
/* insert PK errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15064: The primary key FOW_EVENT_STG_PK is not unique.',
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	sysdate,
	'FOW_EVENT_STG_PK',
	'PK',	
	FOW_EVENT_STG.ID,
	FOW_EVENT_STG.VERSION,
	FOW_EVENT_STG.ACTIVE,
	FOW_EVENT_STG.APO_ID,
	FOW_EVENT_STG.CREATED_BY,
	FOW_EVENT_STG.DATE_CREATED,
	FOW_EVENT_STG.DESCRIPTION,
	FOW_EVENT_STG.END_DATE,
	FOW_EVENT_STG.EST_SUBJECTS,
	FOW_EVENT_STG.EVENT_GUID,
	FOW_EVENT_STG.EVENT_TYPE,
	FOW_EVENT_STG.EVENT_REF_ID,
	FOW_EVENT_STG.JOB_SEQUENCE,
	FOW_EVENT_STG.LAST_UPDATED,
	FOW_EVENT_STG.PRIM_SORT,
	FOW_EVENT_STG.PUBLISHED,
	FOW_EVENT_STG.REVISION_NO,
	FOW_EVENT_STG.SEC_SORT,
	FOW_EVENT_STG.SHIP_TO,
	FOW_EVENT_STG.SHIP_TO_ADDRESS,
	FOW_EVENT_STG.START_DATE,
	FOW_EVENT_STG.UPDATED_BY,
	FOW_EVENT_STG.PDK_NUMBER,
	FOW_EVENT_STG.ALTERNATE_PICTURE_DAY_TEXT,
	FOW_EVENT_STG.SPECIAL_INSTRUCTIONS,
	FOW_EVENT_STG.STATUS,
	FOW_EVENT_STG.FLYER_TITLE,
	FOW_EVENT_STG.SHIP_TO_SATELLITE_CODE,
	FOW_EVENT_STG.YB_ARRIVAL_DATE,
	FOW_EVENT_STG.COVER_ENDSHEET_DEADLINE,
	FOW_EVENT_STG.FIRST_PAGE_DEADLINE,
	FOW_EVENT_STG.FINAL_PAGE_DEADLINE,
	FOW_EVENT_STG.CUT_OUT_PAGES,
	FOW_EVENT_STG.YB_EXTRA_COPIES,
	FOW_EVENT_STG.YB_PAGES,
	FOW_EVENT_STG.YB_COPIES,
	FOW_EVENT_STG.YB_SOFT_COVER_QTY,
	FOW_EVENT_STG.YB_HARD_COVER_QTY,
	FOW_EVENT_STG.YB_REORDER_CHARGE,
	FOW_EVENT_STG.INVOICE_TO,
	FOW_EVENT_STG.INVOICE_TO_ADDRESS,
	FOW_EVENT_STG.SHIPPING_HANDLING,
	FOW_EVENT_STG.SHIPPING_CHARGE,
	FOW_EVENT_STG.PORTRAIT_PAGES,
	FOW_EVENT_STG.ACTIVITY_PAGES,
	FOW_EVENT_STG.SR_APPOINTMENT_DISTRIBUTION,
	FOW_EVENT_STG.AUTO_PDK_DISABLED,
	FOW_EVENT_STG.AUTO_PDK_DISABLED_REASON,
	FOW_EVENT_STG.AUTO_PDK_UPDATED_BY,
	FOW_EVENT_STG.AUTO_PDK_UPDATED_DATE,
	FOW_EVENT_STG.YB_DEPOSIT_PERCENT,
	FOW_EVENT_STG.SCHOOL_PO_HEADER,
	FOW_EVENT_STG.RECEIVED_DATE,
	FOW_EVENT_STG.PDKOFFSET,
	FOW_EVENT_STG.SALE_TYPE,
	FOW_EVENT_STG.CLASS_PICTURE_RELEASE,
	FOW_EVENT_STG.FINAL_QUANTITY_DEADLINE,
	FOW_EVENT_STG.ADDITIONAL_PAGE_DEADLINE2,
	FOW_EVENT_STG.ADDITIONAL_PAGE_DEADLINE3,
	FOW_EVENT_STG.EXTRA_COVERAGE_DEADLINE,
	FOW_EVENT_STG.ENHANCEMENT_DEADLINE,
	FOW_EVENT_STG.FIRST_PAGE_DEADLINE_PP,
	FOW_EVENT_STG.ADDITIONAL_PAGE_DEADLINE2_PP,
	FOW_EVENT_STG.ADDITIONAL_PAGE_DEADLINE3_PP,
	FOW_EVENT_STG.EXTRA_COVERAGE_DEADLINE_PP,
	FOW_EVENT_STG.FINAL_PAGE_DEADLINE_PP,
	FOW_EVENT_STG.EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG   FOW_EVENT_STG
where	exists  (
		select	SUB.ID
		from 	RAX_APP_USER.I$_FOW_EVENT_STG SUB
		where 	SUB.ID=FOW_EVENT_STG.ID
		group by 	SUB.ID
		having 	count(1) > 1
		)



&


/*-----------------------------------------------*/
/* TASK No. 20 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ID cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'ID',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	ID is null



&


/*-----------------------------------------------*/
/* TASK No. 21 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column VERSION cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'VERSION',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	VERSION is null



&


/*-----------------------------------------------*/
/* TASK No. 22 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ACTIVE cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'ACTIVE',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	ACTIVE is null



&


/*-----------------------------------------------*/
/* TASK No. 23 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column APO_ID cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'APO_ID',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	APO_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 24 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column DESCRIPTION cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'DESCRIPTION',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	DESCRIPTION is null



&


/*-----------------------------------------------*/
/* TASK No. 25 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column EVENT_GUID cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'EVENT_GUID',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	EVENT_GUID is null



&


/*-----------------------------------------------*/
/* TASK No. 26 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column EVENT_TYPE cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'EVENT_TYPE',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	EVENT_TYPE is null



&


/*-----------------------------------------------*/
/* TASK No. 27 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column EVENT_REF_ID cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'EVENT_REF_ID',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	EVENT_REF_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 28 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_EVENT_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column JOB_SEQUENCE cannot be null.',
	sysdate,
	'(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT',
	'JOB_SEQUENCE',
	'NN',	
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
from	RAX_APP_USER.I$_FOW_EVENT_STG
where	JOB_SEQUENCE is null



&


/*-----------------------------------------------*/
/* TASK No. 29 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_FOW_EVENT_STG_IDX on RAX_APP_USER.E$_FOW_EVENT_STG (ODI_ROW_ID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 30 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_FOW_EVENT_STG  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_FOW_EVENT_STG E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 31 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_STAGE',
	'FOW_EVENT_STG',
	'ODS_STAGE.FOW_EVENT_STG',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_FOW_EVENT_STG E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(1964001)ODS_Project.LOAD_FOW_EVENT_STG_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 32 */
/* Flag rows for update */

/* DETECTION_STRATEGY = NOT_EXISTS */


update	RAX_APP_USER.I$_FOW_EVENT_STG
set	IND_UPDATE = 'U'
where	(ID)
	in	(
		select	ID
		from	ODS_STAGE.FOW_EVENT_STG
		)



&


/*-----------------------------------------------*/
/* TASK No. 33 */
/* Flag useless rows */

/* DETECTION_STRATEGY = NOT_EXISTS */

/* Command skipped due to chosen DETECTION_STRATEGY */



/*-----------------------------------------------*/
/* TASK No. 34 */
/* Update existing rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
update	ODS_STAGE.FOW_EVENT_STG T
set 	
	(
	T.VERSION,
	T.ACTIVE,
	T.APO_ID,
	T.CREATED_BY,
	T.DATE_CREATED,
	T.DESCRIPTION,
	T.END_DATE,
	T.EST_SUBJECTS,
	T.EVENT_GUID,
	T.EVENT_TYPE,
	T.EVENT_REF_ID,
	T.JOB_SEQUENCE,
	T.LAST_UPDATED,
	T.PRIM_SORT,
	T.PUBLISHED,
	T.REVISION_NO,
	T.SEC_SORT,
	T.SHIP_TO,
	T.SHIP_TO_ADDRESS,
	T.START_DATE,
	T.UPDATED_BY,
	T.PDK_NUMBER,
	T.ALTERNATE_PICTURE_DAY_TEXT,
	T.SPECIAL_INSTRUCTIONS,
	T.STATUS,
	T.FLYER_TITLE,
	T.SHIP_TO_SATELLITE_CODE,
	T.YB_ARRIVAL_DATE,
	T.COVER_ENDSHEET_DEADLINE,
	T.FIRST_PAGE_DEADLINE,
	T.FINAL_PAGE_DEADLINE,
	T.CUT_OUT_PAGES,
	T.YB_EXTRA_COPIES,
	T.YB_PAGES,
	T.YB_COPIES,
	T.YB_SOFT_COVER_QTY,
	T.YB_HARD_COVER_QTY,
	T.YB_REORDER_CHARGE,
	T.INVOICE_TO,
	T.INVOICE_TO_ADDRESS,
	T.SHIPPING_HANDLING,
	T.SHIPPING_CHARGE,
	T.PORTRAIT_PAGES,
	T.ACTIVITY_PAGES,
	T.SR_APPOINTMENT_DISTRIBUTION,
	T.AUTO_PDK_DISABLED,
	T.AUTO_PDK_DISABLED_REASON,
	T.AUTO_PDK_UPDATED_BY,
	T.AUTO_PDK_UPDATED_DATE,
	T.YB_DEPOSIT_PERCENT,
	T.SCHOOL_PO_HEADER,
	T.RECEIVED_DATE,
	T.PDKOFFSET,
	T.SALE_TYPE,
	T.CLASS_PICTURE_RELEASE,
	T.FINAL_QUANTITY_DEADLINE,
	T.ADDITIONAL_PAGE_DEADLINE2,
	T.ADDITIONAL_PAGE_DEADLINE3,
	T.EXTRA_COVERAGE_DEADLINE,
	T.ENHANCEMENT_DEADLINE,
	T.FIRST_PAGE_DEADLINE_PP,
	T.ADDITIONAL_PAGE_DEADLINE2_PP,
	T.ADDITIONAL_PAGE_DEADLINE3_PP,
	T.EXTRA_COVERAGE_DEADLINE_PP,
	T.FINAL_PAGE_DEADLINE_PP,
	T.EVENT_IMAGE_COMPLETE
	) =
		(
		select	S.VERSION,
			S.ACTIVE,
			S.APO_ID,
			S.CREATED_BY,
			S.DATE_CREATED,
			S.DESCRIPTION,
			S.END_DATE,
			S.EST_SUBJECTS,
			S.EVENT_GUID,
			S.EVENT_TYPE,
			S.EVENT_REF_ID,
			S.JOB_SEQUENCE,
			S.LAST_UPDATED,
			S.PRIM_SORT,
			S.PUBLISHED,
			S.REVISION_NO,
			S.SEC_SORT,
			S.SHIP_TO,
			S.SHIP_TO_ADDRESS,
			S.START_DATE,
			S.UPDATED_BY,
			S.PDK_NUMBER,
			S.ALTERNATE_PICTURE_DAY_TEXT,
			S.SPECIAL_INSTRUCTIONS,
			S.STATUS,
			S.FLYER_TITLE,
			S.SHIP_TO_SATELLITE_CODE,
			S.YB_ARRIVAL_DATE,
			S.COVER_ENDSHEET_DEADLINE,
			S.FIRST_PAGE_DEADLINE,
			S.FINAL_PAGE_DEADLINE,
			S.CUT_OUT_PAGES,
			S.YB_EXTRA_COPIES,
			S.YB_PAGES,
			S.YB_COPIES,
			S.YB_SOFT_COVER_QTY,
			S.YB_HARD_COVER_QTY,
			S.YB_REORDER_CHARGE,
			S.INVOICE_TO,
			S.INVOICE_TO_ADDRESS,
			S.SHIPPING_HANDLING,
			S.SHIPPING_CHARGE,
			S.PORTRAIT_PAGES,
			S.ACTIVITY_PAGES,
			S.SR_APPOINTMENT_DISTRIBUTION,
			S.AUTO_PDK_DISABLED,
			S.AUTO_PDK_DISABLED_REASON,
			S.AUTO_PDK_UPDATED_BY,
			S.AUTO_PDK_UPDATED_DATE,
			S.YB_DEPOSIT_PERCENT,
			S.SCHOOL_PO_HEADER,
			S.RECEIVED_DATE,
			S.PDKOFFSET,
			S.SALE_TYPE,
			S.CLASS_PICTURE_RELEASE,
			S.FINAL_QUANTITY_DEADLINE,
			S.ADDITIONAL_PAGE_DEADLINE2,
			S.ADDITIONAL_PAGE_DEADLINE3,
			S.EXTRA_COVERAGE_DEADLINE,
			S.ENHANCEMENT_DEADLINE,
			S.FIRST_PAGE_DEADLINE_PP,
			S.ADDITIONAL_PAGE_DEADLINE2_PP,
			S.ADDITIONAL_PAGE_DEADLINE3_PP,
			S.EXTRA_COVERAGE_DEADLINE_PP,
			S.FINAL_PAGE_DEADLINE_PP,
			S.EVENT_IMAGE_COMPLETE
		from	RAX_APP_USER.I$_FOW_EVENT_STG S
		where	T.ID	=S.ID
	    	 )
	

where	(ID)
	in	(
		select	ID
		from	RAX_APP_USER.I$_FOW_EVENT_STG
		where	IND_UPDATE = 'U'
		)




&


/*-----------------------------------------------*/
/* TASK No. 35 */
/* Insert new rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
insert into 	ODS_STAGE.FOW_EVENT_STG T
	(
	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
	
	)
select 	ID,
	VERSION,
	ACTIVE,
	APO_ID,
	CREATED_BY,
	DATE_CREATED,
	DESCRIPTION,
	END_DATE,
	EST_SUBJECTS,
	EVENT_GUID,
	EVENT_TYPE,
	EVENT_REF_ID,
	JOB_SEQUENCE,
	LAST_UPDATED,
	PRIM_SORT,
	PUBLISHED,
	REVISION_NO,
	SEC_SORT,
	SHIP_TO,
	SHIP_TO_ADDRESS,
	START_DATE,
	UPDATED_BY,
	PDK_NUMBER,
	ALTERNATE_PICTURE_DAY_TEXT,
	SPECIAL_INSTRUCTIONS,
	STATUS,
	FLYER_TITLE,
	SHIP_TO_SATELLITE_CODE,
	YB_ARRIVAL_DATE,
	COVER_ENDSHEET_DEADLINE,
	FIRST_PAGE_DEADLINE,
	FINAL_PAGE_DEADLINE,
	CUT_OUT_PAGES,
	YB_EXTRA_COPIES,
	YB_PAGES,
	YB_COPIES,
	YB_SOFT_COVER_QTY,
	YB_HARD_COVER_QTY,
	YB_REORDER_CHARGE,
	INVOICE_TO,
	INVOICE_TO_ADDRESS,
	SHIPPING_HANDLING,
	SHIPPING_CHARGE,
	PORTRAIT_PAGES,
	ACTIVITY_PAGES,
	SR_APPOINTMENT_DISTRIBUTION,
	AUTO_PDK_DISABLED,
	AUTO_PDK_DISABLED_REASON,
	AUTO_PDK_UPDATED_BY,
	AUTO_PDK_UPDATED_DATE,
	YB_DEPOSIT_PERCENT,
	SCHOOL_PO_HEADER,
	RECEIVED_DATE,
	PDKOFFSET,
	SALE_TYPE,
	CLASS_PICTURE_RELEASE,
	FINAL_QUANTITY_DEADLINE,
	ADDITIONAL_PAGE_DEADLINE2,
	ADDITIONAL_PAGE_DEADLINE3,
	EXTRA_COVERAGE_DEADLINE,
	ENHANCEMENT_DEADLINE,
	FIRST_PAGE_DEADLINE_PP,
	ADDITIONAL_PAGE_DEADLINE2_PP,
	ADDITIONAL_PAGE_DEADLINE3_PP,
	EXTRA_COVERAGE_DEADLINE_PP,
	FINAL_PAGE_DEADLINE_PP,
	EVENT_IMAGE_COMPLETE
	
from	RAX_APP_USER.I$_FOW_EVENT_STG S



where	IND_UPDATE = 'I'



&


/*-----------------------------------------------*/
/* TASK No. 36 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 37 */
/* Drop flow table */

drop table RAX_APP_USER.I$_FOW_EVENT_STG 

&


/*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */

drop table RAX_APP_USER.C$_0FOW_EVENT_STG purge

&


/*-----------------------------------------------*/
/* TASK No. 38 */
/* DELETE FOW CA EVENTS */

DELETE FROM ODS_STAGE.FOW_EVENT_STG FES
      WHERE EXISTS
               (SELECT 1
                  FROM ODS_STAGE.IGNORE_FOW_CA_EVENTS_SODS_1178 ICFE
                 WHERE ICFE.EVENT_REF_ID = FES.EVENT_REF_ID)

&


/*-----------------------------------------------*/
/* TASK No. 39 */
/* INSERT INTO ODS_OWN.EVENT_TYPE */

INSERT INTO ODS_OWN.EVENT_TYPE
(
event_type_oid
,event_type
,job_classification
, source_system_oid
,ods_create_date
,ods_modify_date
, created_by
, updated_by
)

SELECT 
ODS_STAGE.EVENT_TYPE_OID_SEQ.nextval
, STG.EVENT_TYPE
, STG.EVENT_TYPE
, SS.SOURCE_SYSTEM_OID
, SYSDATE
, SYSDATE
, 'ODI-ETL'
, 'ODI-ETL'
FROM 
(
SELECT DISTINCT EVENT_TYPE 
FROM ODS_STAGE.FOW_EVENT_STG
where last_updated >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap
) STG
LEFT OUTER JOIN ODS_OWN.EVENT_TYPE E ON E.EVENT_TYPE = STG.EVENT_TYPE
LEFT OUTER JOIN ODS_OWN.SOURCE_SYSTEM SS ON 'FOW' = SS.SOURCE_SYSTEM_SHORT_NAME
WHERE E.EVENT_TYPE IS NULL

&


/*-----------------------------------------------*/
/* TASK No. 40 */
/* FOW_IDs that have a new EVENT_REF_ID - mark DELETED */

-- just in case FOW updates an EVENT_REF_ID
update
(
select e.status
, e.ods_modify_date
from ODS_STAGE.FOW_EVENT_STG se
, ODS_STAGE.EVENT_XR e_xr
, ODS_OWN.EVENT e
where 1=1
and se.id = e_xr.fow_id
and e_xr.event_oid = e.event_oid
and se.event_ref_id <> e_xr.event_ref_id
and se.last_updated >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap
)
set status = 'DELETED'
, ods_modify_date = sysdate

&


/*-----------------------------------------------*/
/* TASK No. 41 */
/* FOW_IDs that have a new EVENT_REF_ID */

-- just in case FOW updates an EVENT_REF_ID
update
(
select e_xr.fow_id
from ODS_STAGE.FOW_EVENT_STG se
, ODS_STAGE.EVENT_XR e_xr
where 1=1
and se.id = e_xr.fow_id
and se.event_ref_id <> e_xr.event_ref_id
and se.last_updated >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap
)
set fow_id = null

&


/*-----------------------------------------------*/
/* TASK No. 42 */
/* EVENT_XR */

merge into ODS_STAGE.EVENT_XR t
using
(
select se.event_ref_id
, e.event_oid
, se.id
, se.event_type
, sapo.apo_tag
, sapo.school_yr_end
, sapo.territory
, sapo.selling_method
,'FOW' as system_of_record
from ODS_STAGE.FOW_EVENT_STG se
, ODS_STAGE.FOW_APO_STAGE sapo
, ODS_OWN.EVENT e
where se.apo_id = sapo.id(+)
and se.event_ref_id = e.event_ref_id(+)
and length(se.event_ref_id) < 20 -- prevent rows where GUIDS are appended (fow bug) from sneaking in to ODS
and se.last_updated >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap
) s
on
( s.event_ref_id = t.event_ref_id )
when matched then update
set t.fow_id = s.id
, t.event_type = s.event_type
, t.apo_id = s.apo_tag
, t.school_year = s.school_yr_end
, t.territory_code = s.territory
, t.system_of_record = s.system_of_record
, t.ods_create_date = sysdate
where decode(s.id,t.fow_id,1,0) = 0
or decode(s.event_type,t.event_type,1,0) = 0
or decode(s.apo_tag,t.apo_id,1,0) = 0
or decode(s.territory,t.territory_code,1,0) = 0
or decode(s.selling_method,t.selling_method_name,1,0) = 0
or decode(s.school_yr_end,t.school_year,1,0) = 0
or decode(s.system_of_record,t.system_of_record,1,0) = 0
when not matched then insert
( t.event_oid
, t.event_ref_id
, t.fow_id
, t.event_type
, t.apo_id
, t.school_year
, t.territory_code
, t.selling_method_name
, t.system_of_record
,t.ods_create_date
)
values
( nvl(s.event_oid, ods_stage.event_oid_seq.nextval)
, s.event_ref_id
, s.id
, s.event_type
, s.apo_tag
, s.school_yr_end
, s.territory
, s.selling_method
, s.system_of_record
,sysdate
)

&


/*-----------------------------------------------*/
/* TASK No. 43 */
/* Drop Driver Table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.tmp_fow_event_driver';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 44 */
/* Create Driver Table */

create table RAX_APP_USER.tmp_fow_event_driver as
select se.id
from ODS_STAGE.FOW_EVENT_STG se
where se.last_updated >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS') - :v_cdc_oms_overlap

&


/*-----------------------------------------------*/
/* TASK No. 45 */
/* CDC for Changed APOs */

insert into RAX_APP_USER.tmp_fow_event_driver
select exr.fow_id as id
from ODS_OWN.EVENT e
, ODS_OWN.APO
, ODS_STAGE.EVENT_XR exr
where e.apo_oid = apo.apo_oid
and e.event_ref_id = exr.event_ref_id
and exr.system_of_record = 'FOW'
and exr.fow_id is not null
and apo.ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS') - :v_cdc_oms_overlap
and not exists
(
select 1
from RAX_APP_USER.tmp_fow_event_driver d
where exr.fow_id = d.id
)

&


/*-----------------------------------------------*/
/* TASK No. 46 */
/* Create Unique Index on Driver Table */

create unique index 
RAX_APP_USER.tmp_fow_event_driver_pk on RAX_APP_USER.tmp_fow_event_driver (id)

&


/*-----------------------------------------------*/
/* TASK No. 47 */
/* EVENT */

merge into ODS_OWN.EVENT t
using
(
select exr.event_oid
, exr.event_ref_id
, se.ALTERNATE_PICTURE_DAY_TEXT
, se.SPECIAL_INSTRUCTIONS
, se.pdk_number
, se.description
, trunc(cast(se.start_date as date)) as photography_date
, case when axr.system_of_record = 'APOCS' then apo2.apo_oid else apo.apo_oid end as apo_oid
, case when axr.system_of_record = 'APOCS' then apo2.lifetouch_id else apo.lifetouch_id end as lifetouch_id
, case when axr.system_of_record = 'APOCS' then apo2.territory_code else apo.territory_code end as territory_code
, case when axr.system_of_record = 'APOCS' then apo2.organization_oid else apo.organization_oid end as organization_oid
, case when axr.system_of_record = 'APOCS' then apo2.marketing_code else apo.marketing_code end as marketing_code
, case when axr.system_of_record = 'APOCS' then nvl(apo2.school_year,1900)  else nvl(apo.school_year,1900) end as school_year
, case when axr.system_of_record = 'APOCS' then apo2.processing_lab else apo.processing_lab end as processing_lab
, case when axr.system_of_record = 'APOCS' then apo2.selling_method else apo.selling_method end as selling_method
, case when axr.system_of_record = 'APOCS' then apo2.selling_method_oid else sm.selling_method_oid end as selling_method_oid
, se.event_type
, et.event_type_oid
, et.job_classification
, ss.source_system_oid
, case when m1.marketing_code is not null then m1.marketing_code
       when m2.marketing_code is not null and sp.sub_program_name = 'Fall Individuals' then m2.marketing_code
       when m3.marketing_code is not null and sp.sub_program_name = 'Spring Individuals' then m3.marketing_code
  else m4.marketing_code end as dw_marketing_code
, cast(1 as number) as spectrum_ind
, se.PRIM_SORT
, se.SHIP_TO
, se.EST_SUBJECTS
, se.FLYER_TITLE
, se.end_date
,se.AUTO_PDK_DISABLED
,se.AUTO_PDK_DISABLED_REASON
,se.AUTO_PDK_UPDATED_BY
,se.YB_DEPOSIT_PERCENT
,se.ACTIVE as STATUS
,se.SHIP_TO_SATELLITE_CODE 
,se.YB_ARRIVAL_DATE
,se.COVER_ENDSHEET_DEADLINE 
,se.FIRST_PAGE_DEADLINE
,se.FINAL_PAGE_DEADLINE 
,se.CUT_OUT_PAGES 
,se.YB_EXTRA_COPIES 
,se.YB_PAGES 
,se.YB_COPIES 
,se.YB_SOFT_COVER_QTY 
,se.YB_HARD_COVER_QTY 
,se.YB_REORDER_CHARGE 
,se.INVOICE_TO 
,se.INVOICE_TO_ADDRESS 
,se.SHIPPING_HANDLING 
,se.SHIPPING_CHARGE 
,se.PORTRAIT_PAGES 
,se.ACTIVITY_PAGES 
,se.SR_APPOINTMENT_DISTRIBUTION 
,se.SCHOOL_PO_HEADER  
,se.PDKOFFSET 
,se.SALE_TYPE
,case 
    when se.SHIPPING_HANDLING = 'NO_CHARGE' then 'No Charge'
    when se.SHIPPING_HANDLING = 'ACTUAL_COST' then 'Actual Cost To School'
    when se.SHIPPING_HANDLING = 'FIXED_PER_BOOK' then 'Fixed Price Per Book'
    when se.SHIPPING_HANDLING = 'FIXED_PER_SHIPMENT' then 'Fixed Price Per Account'
    else null end as SH_BILL_MODEL 
,se.class_picture_release
,se.FINAL_QUANTITY_DEADLINE
,se.ADDITIONAL_PAGE_DEADLINE2
,se.ADDITIONAL_PAGE_DEADLINE3
,se.ADDITIONAL_PAGE_DEADLINE4
,se.EXTRA_COVERAGE_DEADLINE
,se.ENHANCEMENT_DEADLINE
,se.FIRST_PAGE_DEADLINE_PP
,se.ADDITIONAL_PAGE_DEADLINE2_PP
,se.ADDITIONAL_PAGE_DEADLINE3_PP
,se.EXTRA_COVERAGE_DEADLINE_PP
,se.FINAL_PAGE_DEADLINE_PP
,se.EVENT_IMAGE_COMPLETE
from RAX_APP_USER.tmp_fow_event_driver d
, ODS_STAGE.FOW_EVENT_STG se
, ODS_STAGE.EVENT_XR exr
, ODS_OWN.APO
, ODS_OWN.EVENT_TYPE et
, ODS_OWN.SELLING_METHOD sm
, ODS_OWN.SOURCE_SYSTEM ss
, ODS_OWN.SUB_PROGRAM sp
, MART.marketing m1
, MART.marketing m2
, MART.marketing m3
, MART.marketing m4
, ODS_STAGE.APO_APOCS_EVENT_XR aexr -- hardcoded schema so this works in PROD_CA context, other option would be to create a view in ODS_STAGE_CA schema
, ODS_STAGE.APO_XR axr
, ODS_OWN.APO apo2
where d.id = se.id
and se.event_ref_id = exr.event_ref_id
and exr.apo_id = apo.apo_id(+)
and apo.sub_program_oid = sp.sub_program_oid(+)
and se.event_type = et.event_type(+)
and 'FOW' = ss.source_system_short_name
and apo.selling_method = sm.selling_method(+)
and apo.marketing_code = m1.marketing_code(+)
and 'Fall ' || apo.marketing_code = m2.marketing_code(+)
and 'Spring ' || apo.marketing_code = m3.marketing_code(+)
and sp.sub_program_oid = m4.sub_program_oid(+)
and se.event_ref_id = aexr.event_ref_id(+)
and aexr.apo_id = axr.apo_id(+)
and axr.apo_oid = apo2.apo_oid(+)
and length(exr.event_ref_id) <= 20 -- prevent rows where GUIDS are appended (fow bug) from sneaking in to ODS
) s
on
( t.event_oid = s.event_oid )
when matched then update
set t.event_ref_id = s.event_ref_id
, t.ALTERNATE_PICTURE_DAY_TEXT = s.ALTERNATE_PICTURE_DAY_TEXT
, t.SPECIAL_INSTRUCTIONS = s.SPECIAL_INSTRUCTIONS
, t.pdk_number = s.pdk_number
, t.description = s.description
, t.photography_date = s.photography_date
, t.apo_oid = s.apo_oid
, t.lifetouch_id = s.lifetouch_id
, t.territory_code = s.territory_code
, t.organization_oid = s.organization_oid
, t.marketing_code = s.marketing_code
, t.school_year = s.school_year
, t.processing_lab = s.processing_lab
, t.selling_method = s.selling_method
, t.selling_method_oid = s.selling_method_oid
, t.event_type = s.event_type
, t.event_type_oid = s.event_type_oid
, t.job_classification = s.job_classification
, t.dw_marketing_code = s.dw_marketing_code
, t.spectrum_ind = s.spectrum_ind
, t.source_system_oid = s.source_system_oid
, t.ods_modify_date = sysdate
, t.PRIM_SORT = s.PRIM_SORT
, t.SHIP_TO = s.SHIP_TO
, t.EST_SUBJECTS = s.EST_SUBJECTS
, t.FLYER_TITLE = s.FLYER_TITLE
, t.vision_photo_date_b = s.end_date
,t.AUTO_PDK_DISABLED =s.AUTO_PDK_DISABLED
,t.AUTO_PDK_DISABLED_REASON = s.AUTO_PDK_DISABLED_REASON
,t.AUTO_PDK_UPDATED_BY = s.AUTO_PDK_UPDATED_BY
,t.YB_DEPOSIT_PERCENT = s.YB_DEPOSIT_PERCENT
,t.STATUS = s.STATUS 
,t.SHIP_TO_SATELLITE_CODE = s.SHIP_TO_SATELLITE_CODE 
,t.YB_ARRIVAL_DATE	= s.YB_ARRIVAL_DATE
,t.COVER_ENDSHEET_DEADLINE 	= s.COVER_ENDSHEET_DEADLINE 
,t.FIRST_PAGE_DEADLINE	= s.FIRST_PAGE_DEADLINE
,t.FINAL_PAGE_DEADLINE 	= s.FINAL_PAGE_DEADLINE 
,t.CUT_OUT_PAGES = s.CUT_OUT_PAGES 
,t.YB_EXTRA_COPIES	= s.YB_EXTRA_COPIES 
,t.YB_PAGES = s.YB_PAGES 
,t.YB_COPIES = s.YB_COPIES 
,t.YB_SOFT_COVER_QTY = s.YB_SOFT_COVER_QTY 
,t.YB_HARD_COVER_QTY = s.YB_HARD_COVER_QTY 
,t.YB_REORDER_CHARGE = s.YB_REORDER_CHARGE 
,t.INVOICE_TO = s.INVOICE_TO 
,t.INVOICE_TO_ADDRESS = s.INVOICE_TO_ADDRESS 
,t.SHIPPING_HANDLING = s.SHIPPING_HANDLING 
,t.SHIPPING_CHARGE = s.SHIPPING_CHARGE 
,t.PORTRAIT_PAGES = s.PORTRAIT_PAGES 
,t.ACTIVITY_PAGES = s.ACTIVITY_PAGES 
,t.SR_APPOINTMENT_DISTRIBUTION = s.SR_APPOINTMENT_DISTRIBUTION 
,t.SCHOOL_PO_HEADER = s.SCHOOL_PO_HEADER  
,t.PDKOFFSET = s.PDKOFFSET 
,t.SALE_TYPE = s.SALE_TYPE
,t.SH_BILL_MODEL = s.SH_BILL_MODEL
,t.class_picture_release = s.class_picture_release
,t.FINAL_QUANTITY_DEADLINE = s.FINAL_QUANTITY_DEADLINE
,t.ADDITIONAL_PAGE_DEADLINE2 = s.ADDITIONAL_PAGE_DEADLINE2
,t.ADDITIONAL_PAGE_DEADLINE3 = s.ADDITIONAL_PAGE_DEADLINE3
,t.ADDITIONAL_PAGE_DEADLINE4 = s.ADDITIONAL_PAGE_DEADLINE4
,t.EXTRA_COVERAGE_DEADLINE = s.EXTRA_COVERAGE_DEADLINE
,t.ENHANCEMENT_DEADLINE = s.ENHANCEMENT_DEADLINE
,t.FIRST_PAGE_DEADLINE_PP = s.FIRST_PAGE_DEADLINE_PP
,t.ADDITIONAL_PAGE_DEADLINE2_PP = s.ADDITIONAL_PAGE_DEADLINE2_PP
,t.ADDITIONAL_PAGE_DEADLINE3_PP = s.ADDITIONAL_PAGE_DEADLINE3_PP
,t.EXTRA_COVERAGE_DEADLINE_PP = s.EXTRA_COVERAGE_DEADLINE_PP
,t.FINAL_PAGE_DEADLINE_PP = s.FINAL_PAGE_DEADLINE_PP
,t.FOW_EVENT_IMAGE_COMPLETE = s.EVENT_IMAGE_COMPLETE
where decode(s.event_ref_id ,t.event_ref_id ,1,0) = 0
or decode(s.ALTERNATE_PICTURE_DAY_TEXT,t.ALTERNATE_PICTURE_DAY_TEXT,1,0) = 0
or decode(s.SPECIAL_INSTRUCTIONS,t.SPECIAL_INSTRUCTIONS,1,0) = 0
or decode(s.pdk_number,t.pdk_number,1,0) = 0
or decode(s.description,t.description,1,0) = 0
or s.photography_date <> t.photography_date or (s.photography_date is null and t.photography_date is not null)
 or (s.photography_date is not null and t.photography_date is null)
or decode(s.apo_oid,t.apo_oid,1,0) = 0
or decode(s.lifetouch_id,t.lifetouch_id,1,0) = 0
or decode(s.territory_code,t.territory_code,1,0) = 0
or decode(s.organization_oid,t.organization_oid,1,0) = 0
or decode(s.marketing_code,t.marketing_code,1,0) = 0
or decode(s.school_year,t.school_year,1,0) = 0
or decode(s.processing_lab,t.processing_lab,1,0) = 0
or decode(s.selling_method ,t.selling_method ,1,0) = 0
or decode(s.selling_method_oid,t.selling_method_oid,1,0) = 0
or decode(s.event_type,t.event_type,1,0) = 0
or decode(s.event_type_oid,t.event_type_oid,1,0) = 0
or decode(s.job_classification,t.job_classification,1,0) = 0
or decode(s.dw_marketing_code,t.dw_marketing_code,1,0) = 0
or decode(s.spectrum_ind,t.spectrum_ind,1,0) = 0
or decode(s.source_system_oid,t.source_system_oid,1,0) = 0
or decode(s.PRIM_SORT,t.PRIM_SORT,1,0) = 0
or decode(s.SHIP_TO,t.SHIP_TO,1,0) = 0
or decode(s.EST_SUBJECTS,t.EST_SUBJECTS,1,0) = 0
or decode(s.FLYER_TITLE,t.FLYER_TITLE,1,0) = 0
or decode(s.end_date, t.vision_photo_date_b,1,0) = 0
or decode(s.AUTO_PDK_DISABLED_REASON,t.AUTO_PDK_DISABLED_REASON,1,0) = 0
or decode(s.AUTO_PDK_DISABLED,t.AUTO_PDK_DISABLED,1,0) = 0
or decode(s.AUTO_PDK_UPDATED_BY,t.AUTO_PDK_UPDATED_BY,1,0)=0
or decode(s.YB_DEPOSIT_PERCENT,t.YB_DEPOSIT_PERCENT,1,0)=0
or decode(s.STATUS, t.STATUS,1,0)=0
or decode(s.SHIP_TO_SATELLITE_CODE, t.SHIP_TO_SATELLITE_CODE,1,0)=0 
or decode(s.YB_ARRIVAL_DATE, t.YB_ARRIVAL_DATE,1,0)=0
or decode(s.COVER_ENDSHEET_DEADLINE, t.COVER_ENDSHEET_DEADLINE,1,0)=0 
or decode(s.FIRST_PAGE_DEADLINE, t.FIRST_PAGE_DEADLINE,1,0)=0
or decode(s.FINAL_PAGE_DEADLINE, t.FINAL_PAGE_DEADLINE,1,0)=0 
or decode(s.CUT_OUT_PAGES, t.CUT_OUT_PAGES,1,0)=0 
or decode(s.YB_EXTRA_COPIES, t.YB_EXTRA_COPIES,1,0)=0 
or decode(s.YB_PAGES, t.YB_PAGES,1,0)=0 
or decode(s.YB_COPIES, t.YB_COPIES,1,0)=0 
or decode(s.YB_SOFT_COVER_QTY, t.YB_SOFT_COVER_QTY,1,0)=0 
or decode(s.YB_HARD_COVER_QTY, t.YB_HARD_COVER_QTY,1,0)=0 
or decode(s.YB_REORDER_CHARGE, t.YB_REORDER_CHARGE,1,0)=0 
or decode(s.INVOICE_TO, t.INVOICE_TO,1,0)=0 
or decode(s.INVOICE_TO_ADDRESS, t.INVOICE_TO_ADDRESS,1,0)=0 
or decode(s.SHIPPING_HANDLING, t.SHIPPING_HANDLING,1,0)=0 
or decode(s.SHIPPING_CHARGE, t.SHIPPING_CHARGE,1,0)=0 
or decode(s.PORTRAIT_PAGES, t.PORTRAIT_PAGES,1,0)=0 
or decode(s.ACTIVITY_PAGES, t.ACTIVITY_PAGES,1,0)=0 
or decode(s.SR_APPOINTMENT_DISTRIBUTION, t.SR_APPOINTMENT_DISTRIBUTION,1,0)=0 
or decode(s.SCHOOL_PO_HEADER, t.SCHOOL_PO_HEADER,1,0)=0  
or decode(s.PDKOFFSET, t.PDKOFFSET,1,0)=0 
or decode(s.SALE_TYPE, t.SALE_TYPE,1,0)=0
or decode(s.SH_BILL_MODEL,t.SH_BILL_MODEL,1,0)=0
or decode(s.class_picture_release,t.class_picture_release,1,0)=0
or decode(s.FINAL_QUANTITY_DEADLINE,t.FINAL_QUANTITY_DEADLINE,1,0)=0
or decode(s.ADDITIONAL_PAGE_DEADLINE2,t.ADDITIONAL_PAGE_DEADLINE2,1,0)=0
or decode(s.ADDITIONAL_PAGE_DEADLINE3,t.ADDITIONAL_PAGE_DEADLINE3,1,0)=0
or decode(s.ADDITIONAL_PAGE_DEADLINE4,t.ADDITIONAL_PAGE_DEADLINE4,1,0)=0
or decode(s.EXTRA_COVERAGE_DEADLINE,t.EXTRA_COVERAGE_DEADLINE,1,0)=0
or decode(s.ENHANCEMENT_DEADLINE,t.ENHANCEMENT_DEADLINE,1,0)=0
or decode(s.FIRST_PAGE_DEADLINE_PP,t.FIRST_PAGE_DEADLINE_PP,1,0)=0
or decode(s.ADDITIONAL_PAGE_DEADLINE2_PP,t.ADDITIONAL_PAGE_DEADLINE2_PP,1,0)=0
or decode(s.ADDITIONAL_PAGE_DEADLINE3_PP,t.ADDITIONAL_PAGE_DEADLINE3_PP,1,0)=0
or decode(s.EXTRA_COVERAGE_DEADLINE_PP,t.EXTRA_COVERAGE_DEADLINE_PP,1,0)=0
or decode(s.FINAL_PAGE_DEADLINE_PP,t.FINAL_PAGE_DEADLINE_PP,1,0)=0
or decode(s.EVENT_IMAGE_COMPLETE,t.FOW_EVENT_IMAGE_COMPLETE,1,0)=0

when not matched then insert
( t.event_oid
, t.event_ref_id
, t.ALTERNATE_PICTURE_DAY_TEXT
, t.SPECIAL_INSTRUCTIONS
, t.pdk_number
, t.description
, t.photography_date
, t.apo_oid
, t.lifetouch_id
, t.territory_code
, t.organization_oid
, t.marketing_code
, t.school_year
, t.processing_lab
, t.selling_method
, t.selling_method_oid
, t.event_type
, t.event_type_oid
, t.job_classification
, t.dw_marketing_code
, t.spectrum_ind
, t.source_system_oid
, t.ods_modify_date
, t.ods_create_date
, t.PRIM_SORT
, t.SHIP_TO
, t.EST_SUBJECTS
, t.FLYER_TITLE
, t.vision_photo_date_b
, t.AUTO_PDK_DISABLED
, t.AUTO_PDK_DISABLED_REASON
, t.AUTO_PDK_UPDATED_BY
, t.YB_DEPOSIT_PERCENT
, t.STATUS 
, t.SHIP_TO_SATELLITE_CODE 
, t.YB_ARRIVAL_DATE
, t.COVER_ENDSHEET_DEADLINE 
, t.FIRST_PAGE_DEADLINE
, t.FINAL_PAGE_DEADLINE 
, t.CUT_OUT_PAGES 
, t.YB_EXTRA_COPIES 
, t.YB_PAGES 
, t.YB_COPIES 
, t.YB_SOFT_COVER_QTY 
, t.YB_HARD_COVER_QTY 
, t.YB_REORDER_CHARGE 
, t.INVOICE_TO 
, t.INVOICE_TO_ADDRESS 
, t.SHIPPING_HANDLING 
, t.SHIPPING_CHARGE 
, t.PORTRAIT_PAGES 
, t.ACTIVITY_PAGES 
, t.SR_APPOINTMENT_DISTRIBUTION 
, t.SCHOOL_PO_HEADER  
, t.PDKOFFSET 
, t.SALE_TYPE
, t.SH_BILL_MODEL
, t.class_picture_release
, t.FINAL_QUANTITY_DEADLINE
, t.ADDITIONAL_PAGE_DEADLINE2
, t.ADDITIONAL_PAGE_DEADLINE3
, t.ADDITIONAL_PAGE_DEADLINE4
, t.EXTRA_COVERAGE_DEADLINE
, t.ENHANCEMENT_DEADLINE
, t.FIRST_PAGE_DEADLINE_PP
, t.ADDITIONAL_PAGE_DEADLINE2_PP
, t.ADDITIONAL_PAGE_DEADLINE3_PP
, t.EXTRA_COVERAGE_DEADLINE_PP
, t.FINAL_PAGE_DEADLINE_PP
, t.FOW_EVENT_IMAGE_COMPLETE
)
values
( s.event_oid
, s.event_ref_id
, s.ALTERNATE_PICTURE_DAY_TEXT
, s.SPECIAL_INSTRUCTIONS
, s.pdk_number
, s.description
, s.photography_date
, s.apo_oid
, s.lifetouch_id
, s.territory_code
, s.organization_oid
, s.marketing_code
, s.school_year
, s.processing_lab
, s.selling_method
, s.selling_method_oid
, s.event_type
, s.event_type_oid
, s.job_classification
, s.dw_marketing_code
, s.spectrum_ind
, s.source_system_oid
, sysdate
, sysdate
, s.PRIM_SORT
, s.SHIP_TO
, s.EST_SUBJECTS
, s.FLYER_TITLE
, s.end_date
, s.AUTO_PDK_DISABLED
, s.AUTO_PDK_DISABLED_REASON
, s.AUTO_PDK_UPDATED_BY
, s.YB_DEPOSIT_PERCENT
, s.STATUS 
, s.SHIP_TO_SATELLITE_CODE 
, s.YB_ARRIVAL_DATE
, s.COVER_ENDSHEET_DEADLINE 
, s.FIRST_PAGE_DEADLINE
, s.FINAL_PAGE_DEADLINE 
, s.CUT_OUT_PAGES 
, s.YB_EXTRA_COPIES 
, s.YB_PAGES 
, s.YB_COPIES 
, s.YB_SOFT_COVER_QTY 
, s.YB_HARD_COVER_QTY 
, s.YB_REORDER_CHARGE 
, s.INVOICE_TO 
, s.INVOICE_TO_ADDRESS 
, s.SHIPPING_HANDLING 
, s.SHIPPING_CHARGE 
, s.PORTRAIT_PAGES 
, s.ACTIVITY_PAGES 
, s.SR_APPOINTMENT_DISTRIBUTION 
, s.SCHOOL_PO_HEADER  
, s.PDKOFFSET 
, s.SALE_TYPE
, s.SH_BILL_MODEL
, s.class_picture_release
, s.FINAL_QUANTITY_DEADLINE
, s.ADDITIONAL_PAGE_DEADLINE2
, s.ADDITIONAL_PAGE_DEADLINE3
, s.ADDITIONAL_PAGE_DEADLINE4
, s.EXTRA_COVERAGE_DEADLINE
, s.ENHANCEMENT_DEADLINE
, s.FIRST_PAGE_DEADLINE_PP
, s.ADDITIONAL_PAGE_DEADLINE2_PP
, s.ADDITIONAL_PAGE_DEADLINE3_PP
, s.EXTRA_COVERAGE_DEADLINE_PP
, s.FINAL_PAGE_DEADLINE_PP
, s.EVENT_IMAGE_COMPLETE
)

&


/*-----------------------------------------------*/
/* TASK No. 48 */
/* Drop driver table ODS_APP_USER.TMP_FLYER_UPDATE_D */

BEGIN  
   EXECUTE IMMEDIATE 'DROP TABLE RAX_APP_USER.TMP_FLYER_UPDATE_D';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 49 */
/* Create driver table ODS_APP_USER.TMP_FLYER_UPDATE_D */

CREATE TABLE RAX_APP_USER.TMP_FLYER_UPDATE_D as
select  e.event_ref_id
        ,i.manufacturer_item as flyer
        ,rank() over (partition by e.event_ref_id order by ol.ordered_quantity desc, sys_guid()) as seq
from    ODS_OWN.order_header oh
        ,ODS_OWN.event e
        ,ODS_OWN.order_line ol
        ,ODS_OWN.item i
where   oh.event_ref_id = e.event_ref_id
        and oh.order_header_oid = ol.order_header_oid
        and ol.item_oid = i.item_oid
        and oh.order_type = 'PDK_Order'
        and i.sub_class = 'Flyer'
        and ol.ods_modify_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS') - :v_cdc_oms_overlap
order by e.event_ref_id
        ,ol.ordered_quantity desc


&


/*-----------------------------------------------*/
/* TASK No. 50 */
/* UPDATE ODS_OWN.EVENT.FLYER */

MERGE INTO ODS_OWN.EVENT e
USING (SELECT EVENT_REF_ID, FLYER FROM RAX_APP_USER.TMP_FLYER_UPDATE_D WHERE SEQ = 1) d
ON (e.EVENT_REF_ID = d.EVENT_REF_ID)
WHEN MATCHED THEN UPDATE
SET e.FLYER = d.FLYER
where decode(e.flyer,d.flyer,1,0) = 0


&


/*-----------------------------------------------*/
/* TASK No. 51 */
/* Drop Event List */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.tmp_upd_fow_event_list ';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 52 */
/* Create Event List */

create table RAX_APP_USER.tmp_upd_fow_event_list as
select distinct oh.event_oid
from ODS_OWN.order_header oh
where oh.ods_modify_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap

&


/*-----------------------------------------------*/
/* TASK No. 53 */
/* Index Event List */

create unique index RAX_APP_USER.tmp_upd_fow_event_list_pk on RAX_APP_USER.tmp_upd_fow_event_list(event_oid)

&


/*-----------------------------------------------*/
/* TASK No. 54 */
/* Drop Driver Table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.tmp_upd_fow_event_ship_date ';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 55 */
/* Create Driver Table */

create table RAX_APP_USER.tmp_upd_fow_event_ship_date as
select e.event_oid
, min(trunc(oh.ORDER_SHIP_DATE)) as SHIP_DATE
from ODS_OWN.event e
, RAX_APP_USER.tmp_upd_fow_event_list d
, ODS_OWN.order_header oh
, ODS_STAGE.event_xr exr
where e.event_oid = oh.event_oid
and e.event_oid = exr.event_oid
and exr.system_of_record = 'FOW'
and oh.order_ship_date is not null
and oh.ORDER_BUCKET IN ('PAID','UNPAID')
and e.event_oid = d.event_oid
group by e.event_oid
having min(trunc(oh.ORDER_SHIP_DATE)) <> min(e.ship_date)
or min(e.ship_date) is null

&


/*-----------------------------------------------*/
/* TASK No. 56 */
/* Include Shutterware Spec Fin Events */

INSERT INTO RAX_APP_USER.tmp_upd_fow_event_ship_date 
( EVENT_OID,SHIP_DATE)
(SELECT e.event_oid, TRUNC (clt.shipped_date)
  FROM ods_etl_owner.clt_job_trans_detail clt, ods_own.event e, ods_own.apo a
 WHERE clt.job_nbr = e.event_ref_id
   AND e.apo_oid = a.apo_oid
   AND a.financial_processing_system = 'Spectrum'
   AND clt.shipped_date IS NOT NULL
   AND clt.effective_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)

&


/*-----------------------------------------------*/
/* TASK No. 57 */
/* Include Infinity Spec Fin Events */

INSERT INTO RAX_APP_USER.tmp_upd_fow_event_ship_date 
( EVENT_OID,SHIP_DATE)
(SELECT e.event_oid, TRUNC (inf.shipped_date)
  FROM ods.inf_job_trans inf, ods_own.event e, ods_own.apo a
 WHERE inf.job_nbr = e.event_ref_id
   AND e.apo_oid = a.apo_oid
   AND a.financial_processing_system = 'Spectrum'
   AND inf.shipped_date IS NOT NULL
   AND inf.effective_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)

&


/*-----------------------------------------------*/
/* TASK No. 58 */
/* Index Driver Table */

create unique index
RAX_APP_USER.tmp_upd_fow_event_ship_date_pk on
RAX_APP_USER.tmp_upd_fow_event_ship_date(event_oid)

&


/*-----------------------------------------------*/
/* TASK No. 59 */
/* Update Event Ship Date */

update
(
select e.ship_date as target_ship_date
, d.ship_date as source_ship_date
, e.ods_modify_date
from RAX_APP_USER.tmp_upd_fow_event_ship_date d
, ODS_OWN.event e
where d.event_oid = e.event_oid
)
set target_ship_date = source_ship_date
, ods_modify_date = sysdate

&


/*-----------------------------------------------*/
/* TASK No. 60 */
/* Drop Driver Table */

BEGIN  
   EXECUTE IMMEDIATE 'DROP TABLE RAX_APP_USER.tmp_update_picture_day';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 61 */
/* Create Driver Table */

-- check all picture days that have changed recently to see 
-- if either they should match another event or don't match the right event
CREATE TABLE RAX_APP_USER.tmp_update_picture_day as
select pd.picture_day_oid
, e.event_oid
from ODS_OWN.picture_day pd
, ODS_OWN.event e
where 1=1
and pd.event_ref_id = e.event_ref_id(+)
and (pd.event_oid is null  or pd.event_oid <> e.event_oid)
and pd.ods_modify_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap

&


/*-----------------------------------------------*/
/* TASK No. 62 */
/* Modified FOW Events - join on event_ref_id */

-- check all events that have changed recently to see 
-- if either they should match some picture days
-- join is on event_ref_id
insert into RAX_APP_USER.tmp_update_picture_day
( picture_day_oid
, event_oid
)
select pd.picture_day_oid
, e.event_oid
from ODS_OWN.picture_day pd
, ODS_OWN.event e
where 1=1
and pd.event_ref_id = e.event_ref_id
and e.ods_modify_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap
and not exists
(
select 1
from RAX_APP_USER.tmp_update_picture_day t
where pd.picture_day_oid = t.picture_day_oid
)

&


/*-----------------------------------------------*/
/* TASK No. 63 */
/* Modified FOW Events - join on event_oid */

-- check all events that have changed recently to see 
-- if either they should match some picture days
-- join is on event_oid
insert into RAX_APP_USER.tmp_update_picture_day
( picture_day_oid
, event_oid
)
select pd.picture_day_oid
, e.event_oid
from ODS_OWN.picture_day pd
, ODS_OWN.event e
where 1=1
and pd.event_oid = e.event_oid
and e.ods_modify_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap
and not exists
(
select 1
from RAX_APP_USER.tmp_update_picture_day t
where pd.picture_day_oid = t.picture_day_oid
)

&


/*-----------------------------------------------*/
/* TASK No. 64 */
/* Unique index on driver table */

create unique index RAX_APP_USER.tmp_update_picture_day_pk 
on RAX_APP_USER.tmp_update_picture_day(picture_day_oid)

&


/*-----------------------------------------------*/
/* TASK No. 65 */
/* Update Picture Day */

UPDATE 
(
select pd.event_oid as old_event_oid
, t.event_oid as new_event_oid
, pd.ods_modify_date
from ODS_OWN.picture_day pd
, RAX_APP_USER.tmp_update_picture_day t
where pd.picture_day_oid = t.picture_day_oid
and decode(pd.event_oid, t.event_oid, 1, 0) = 0
)
SET old_event_oid = new_event_oid
, ods_modify_date = sysdate

&


/*-----------------------------------------------*/
/* TASK No. 66 */
/* Update rollover job ind */

update ods_own.event t
set t.rollover_job_ind = 'X'
where nvl(t.rollover_job_ind,'Z') <> 'X' 
and exists
(
select 1
from ods.gdt_event_curr s
where s.job_nbr = t.event_ref_id
and s.rollover_job_ind = 'X'
and s.effective_date > TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS') - 1
)

&


/*-----------------------------------------------*/
/* TASK No. 67 */
/* Drop Driver Table */

BEGIN  
   EXECUTE IMMEDIATE 'DROP TABLE tmp_upd_event_plant_rec_date';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 68 */
/* Create & Populate Driver Table */

CREATE TABLE tmp_upd_event_plant_rec_date AS
SELECT e.event_oid, ijt.plant_receipt_date, ijt.photography_date
FROM ods_own.event e, ods.inf_job_trans ijt, ods_own.apo a
WHERE e.event_ref_id = ijt.job_nbr
AND e.apo_oid = a.apo_oid
AND a.financial_processing_system = 'Spectrum'
AND ijt.effective_date  >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap

&


/*-----------------------------------------------*/
/* TASK No. 69 */
/* Create Index */

CREATE INDEX tmp_upd_event_plant_rec_dt_ix ON tmp_upd_event_plant_rec_date
(event_oid)
TABLESPACE ods_indx

&


/*-----------------------------------------------*/
/* TASK No. 70 */
/* Update Event Photography & Plant Receipt Date */

MERGE INTO ods_own.event t
   USING (SELECT event_oid, plant_receipt_date, photography_date
            FROM tmp_upd_event_plant_rec_date) s
   ON (s.event_oid = t.event_oid)
   WHEN MATCHED THEN
      UPDATE
         SET t.plant_receipt_date = s.plant_receipt_date,
             t.photography_date = s.photography_date,
             ods_modify_date = SYSDATE
         WHERE    DECODE (t.plant_receipt_date, s.plant_receipt_date, 1, 0 ) = 0
               OR DECODE (t.photography_date, s.photography_date, 1, 0) = 0

&


/*-----------------------------------------------*/
/* TASK No. 71 */
/* Update CDC Load Status */

UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env
*/

&


/*-----------------------------------------------*/
/* TASK No. 72 */
/* Insert CDC Audit Record */

INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name
,:v_sess_no
,'LOAD_FOW_EVENT_PKG'
,'043'
,TO_DATE(SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
,TO_DATE (SUBSTR(:v_cdc_load_date, 1, 19),'YYYY-MM-DD HH24:MI:SS')
,:v_cdc_overlap
,SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS_OWN.ODS_CDC_LOAD_STATUS
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_FOW_EVENT_PKG',
'043',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          )
,:v_cdc_overlap,
SYSDATE,
 :v_env)
*/


&


/*-----------------------------------------------*/
