/* TASK No. 1 */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 1 */




/*-----------------------------------------------*/
/* TASK No. 2 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 2 */




/*-----------------------------------------------*/
/* TASK No. 3 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 3 */




/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0FOW_AUTO_ORDER_LINE_STG purge

-- &


-- /*-----------------------------------------------*/
-- /* TASK No. 5 */
-- /* Create work table */

-- create table RAX_APP_USER.C$_0FOW_AUTO_ORDER_LINE_STG
-- (
-- 	C1_ID	NUMBER(19) NULL,
-- 	C2_VERSION	NUMBER(19) NULL,
-- 	C3_ADDED_ON_EVENT	VARCHAR2(255) NULL,
-- 	C4_AUTO_ADD_KEY	VARCHAR2(255) NULL,
-- 	C5_CREATED_BY	VARCHAR2(255) NULL,
-- 	C6_DATE_CREATED	DATE NULL,
-- 	C7_DISCOUNT_PCT	FLOAT(126) NULL,
-- 	C8_ENABLED	NUMBER(1) NULL,
-- 	C9_ITEM_DESC	VARCHAR2(255) NULL,
-- 	C10_ITEM_ID	VARCHAR2(255) NULL,
-- 	C11_LAST_UPDATED	DATE NULL,
-- 	C12_LOOK_NO	VARCHAR2(255) NULL,
-- 	C13_OFFERING_ID	NUMBER(19) NULL,
-- 	C14_ORDER_TYPE	VARCHAR2(255) NULL,
-- 	C15_QUANTITY	NUMBER(10) NULL,
-- 	C16_UPDATED_BY	VARCHAR2(255) NULL
-- )
-- NOLOGGING

-- &


-- /*-----------------------------------------------*/
-- /* TASK No. 6 */
-- /* Load data */

-- /* SOURCE CODE */


-- select	
-- 	AUTO_ORDER_LINE.ID	   C1_ID,
-- 	AUTO_ORDER_LINE.VERSION	   C2_VERSION,
-- 	AUTO_ORDER_LINE.ADDED_ON_EVENT	   C3_ADDED_ON_EVENT,
-- 	AUTO_ORDER_LINE.AUTO_ADD_KEY	   C4_AUTO_ADD_KEY,
-- 	AUTO_ORDER_LINE.CREATED_BY	   C5_CREATED_BY,
-- 	AUTO_ORDER_LINE.DATE_CREATED	   C6_DATE_CREATED,
-- 	AUTO_ORDER_LINE.DISCOUNT_PCT	   C7_DISCOUNT_PCT,
-- 	AUTO_ORDER_LINE.ENABLED	   C8_ENABLED,
-- 	AUTO_ORDER_LINE.ITEM_DESC	   C9_ITEM_DESC,
-- 	AUTO_ORDER_LINE.ITEM_ID	   C10_ITEM_ID,
-- 	AUTO_ORDER_LINE.LAST_UPDATED	   C11_LAST_UPDATED,
-- 	AUTO_ORDER_LINE.LOOK_NO	   C12_LOOK_NO,
-- 	AUTO_ORDER_LINE.OFFERING_ID	   C13_OFFERING_ID,
-- 	AUTO_ORDER_LINE.ORDER_TYPE	   C14_ORDER_TYPE,
-- 	AUTO_ORDER_LINE.QUANTITY	   C15_QUANTITY,
-- 	AUTO_ORDER_LINE.UPDATED_BY	   C16_UPDATED_BY
-- from	FOW_OWN.AUTO_ORDER_LINE   AUTO_ORDER_LINE
-- where	(1=1)
-- And (AUTO_ORDER_LINE.LAST_UPDATED >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)







-- &

-- /* TARGET CODE */
-- insert /*+ append */ into RAX_APP_USER.C$_0FOW_AUTO_ORDER_LINE_STG
-- (
-- 	C1_ID,
-- 	C2_VERSION,
-- 	C3_ADDED_ON_EVENT,
-- 	C4_AUTO_ADD_KEY,
-- 	C5_CREATED_BY,
-- 	C6_DATE_CREATED,
-- 	C7_DISCOUNT_PCT,
-- 	C8_ENABLED,
-- 	C9_ITEM_DESC,
-- 	C10_ITEM_ID,
-- 	C11_LAST_UPDATED,
-- 	C12_LOOK_NO,
-- 	C13_OFFERING_ID,
-- 	C14_ORDER_TYPE,
-- 	C15_QUANTITY,
-- 	C16_UPDATED_BY
-- )
-- values
-- (
-- 	:C1_ID,
-- 	:C2_VERSION,
-- 	:C3_ADDED_ON_EVENT,
-- 	:C4_AUTO_ADD_KEY,
-- 	:C5_CREATED_BY,
-- 	:C6_DATE_CREATED,
-- 	:C7_DISCOUNT_PCT,
-- 	:C8_ENABLED,
-- 	:C9_ITEM_DESC,
-- 	:C10_ITEM_ID,
-- 	:C11_LAST_UPDATED,
-- 	:C12_LOOK_NO,
-- 	:C13_OFFERING_ID,
-- 	:C14_ORDER_TYPE,
-- 	:C15_QUANTITY,
-- 	:C16_UPDATED_BY
-- )

-- &


/*-----------------------------------------------*/
/* TASK No. 7 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0FOW_AUTO_ORDER_LINE_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Drop flow table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END; 

&


/*-----------------------------------------------*/
/* TASK No. 10 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
(
	ID		NUMBER(19) NULL,
	VERSION		NUMBER(19) NULL,
	ADDED_ON_EVENT		VARCHAR2(255) NULL,
	AUTO_ADD_KEY		VARCHAR2(255) NULL,
	CREATED_BY		VARCHAR2(255) NULL,
	DATE_CREATED		DATE NULL,
	DISCOUNT_PCT		FLOAT(126) NULL,
	ENABLED		NUMBER(1) NULL,
	ITEM_DESC		VARCHAR2(255) NULL,
	ITEM_ID		VARCHAR2(255) NULL,
	LAST_UPDATED		DATE NULL,
	LOOK_NO		VARCHAR2(255) NULL,
	OFFERING_ID		NUMBER(19) NULL,
	ORDER_TYPE		VARCHAR2(255) NULL,
	QUANTITY		NUMBER(10) NULL,
	UPDATED_BY		VARCHAR2(255) NULL,
	ODS_CREATE_DATE		DATE NULL,
	ODS_MODIFY_DATE		DATE NULL,
	IND_UPDATE		CHAR(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 11 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 


  


insert into	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
(
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	IND_UPDATE
)
select 
ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	IND_UPDATE
 from (


select 	 
	
	C1_ID ID,
	C2_VERSION VERSION,
	C3_ADDED_ON_EVENT ADDED_ON_EVENT,
	C4_AUTO_ADD_KEY AUTO_ADD_KEY,
	C5_CREATED_BY CREATED_BY,
	C6_DATE_CREATED DATE_CREATED,
	C7_DISCOUNT_PCT DISCOUNT_PCT,
	C8_ENABLED ENABLED,
	C9_ITEM_DESC ITEM_DESC,
	C10_ITEM_ID ITEM_ID,
	C11_LAST_UPDATED LAST_UPDATED,
	C12_LOOK_NO LOOK_NO,
	C13_OFFERING_ID OFFERING_ID,
	C14_ORDER_TYPE ORDER_TYPE,
	C15_QUANTITY QUANTITY,
	C16_UPDATED_BY UPDATED_BY,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0FOW_AUTO_ORDER_LINE_STG
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.FOW_AUTO_ORDER_LINE_STG T
	where	T.ID	= S.ID 
		 and ((T.VERSION = S.VERSION) or (T.VERSION IS NULL and S.VERSION IS NULL)) and
		((T.ADDED_ON_EVENT = S.ADDED_ON_EVENT) or (T.ADDED_ON_EVENT IS NULL and S.ADDED_ON_EVENT IS NULL)) and
		((T.AUTO_ADD_KEY = S.AUTO_ADD_KEY) or (T.AUTO_ADD_KEY IS NULL and S.AUTO_ADD_KEY IS NULL)) and
		((T.CREATED_BY = S.CREATED_BY) or (T.CREATED_BY IS NULL and S.CREATED_BY IS NULL)) and
		((T.DATE_CREATED = S.DATE_CREATED) or (T.DATE_CREATED IS NULL and S.DATE_CREATED IS NULL)) and
		((T.DISCOUNT_PCT = S.DISCOUNT_PCT) or (T.DISCOUNT_PCT IS NULL and S.DISCOUNT_PCT IS NULL)) and
		((T.ENABLED = S.ENABLED) or (T.ENABLED IS NULL and S.ENABLED IS NULL)) and
		((T.ITEM_DESC = S.ITEM_DESC) or (T.ITEM_DESC IS NULL and S.ITEM_DESC IS NULL)) and
		((T.ITEM_ID = S.ITEM_ID) or (T.ITEM_ID IS NULL and S.ITEM_ID IS NULL)) and
		((T.LAST_UPDATED = S.LAST_UPDATED) or (T.LAST_UPDATED IS NULL and S.LAST_UPDATED IS NULL)) and
		((T.LOOK_NO = S.LOOK_NO) or (T.LOOK_NO IS NULL and S.LOOK_NO IS NULL)) and
		((T.OFFERING_ID = S.OFFERING_ID) or (T.OFFERING_ID IS NULL and S.OFFERING_ID IS NULL)) and
		((T.ORDER_TYPE = S.ORDER_TYPE) or (T.ORDER_TYPE IS NULL and S.ORDER_TYPE IS NULL)) and
		((T.QUANTITY = S.QUANTITY) or (T.QUANTITY IS NULL and S.QUANTITY IS NULL)) and
		((T.UPDATED_BY = S.UPDATED_BY) or (T.UPDATED_BY IS NULL and S.UPDATED_BY IS NULL))
        )

  
  

  

 


&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* Create Index on flow table */

create index	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG_IDX
on		RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG (ID)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_FOW_AUTO_ORDER_LINE_STG',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 14 */
/* create check table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.SNP_CHECK_TAB
						(
							CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
							SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
							RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
							FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
							ERR_TYPE		VARCHAR2(1 CHAR) NULL,
							ERR_MESS		VARCHAR2(250 CHAR) NULL ,
							CHECK_DATE	DATE NULL,
							ORIGIN		VARCHAR2(100 CHAR) NULL,
							CONS_NAME	VARCHAR2(35 CHAR) NULL,
							CONS_TYPE		VARCHAR2(2 CHAR) NULL,
							ERR_COUNT		NUMBER(10) NULL
						)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;
	

&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_STAGE'
and	ORIGIN 		= '(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 16 */
/* create error table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
						(
							ODI_ROW_ID 		UROWID,
							ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
							ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
							ODI_CHECK_DATE	DATE NULL, 
							ID	NUMBER(19) NULL,
							VERSION	NUMBER(19) NULL,
							ADDED_ON_EVENT	VARCHAR2(255) NULL,
							AUTO_ADD_KEY	VARCHAR2(255) NULL,
							CREATED_BY	VARCHAR2(255) NULL,
							DATE_CREATED	DATE NULL,
							DISCOUNT_PCT	FLOAT(126) NULL,
							ENABLED	NUMBER(1) NULL,
							ITEM_DESC	VARCHAR2(255) NULL,
							ITEM_ID	VARCHAR2(255) NULL,
							LAST_UPDATED	DATE NULL,
							LOOK_NO	VARCHAR2(255) NULL,
							OFFERING_ID	NUMBER(19) NULL,
							ORDER_TYPE	VARCHAR2(255) NULL,
							QUANTITY	NUMBER(10) NULL,
							UPDATED_BY	VARCHAR2(255) NULL,
							ODS_CREATE_DATE	DATE NULL,
							ODS_MODIFY_DATE	DATE NULL,
							ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
							ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
							ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
							ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
							ODI_SESS_NO		VARCHAR2(19 CHAR)
						)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;



&


/*-----------------------------------------------*/
/* TASK No. 17 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT')


&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* Create index on PK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG_IDX on RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG (ID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 19 */
/* insert PK errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15064: The primary key FOW_AUTO_ORDER_LINE_PK is not unique.',
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	sysdate,
	'FOW_AUTO_ORDER_LINE_PK',
	'PK',	
	FOW_AUTO_ORDER_LINE_STG.ID,
	FOW_AUTO_ORDER_LINE_STG.VERSION,
	FOW_AUTO_ORDER_LINE_STG.ADDED_ON_EVENT,
	FOW_AUTO_ORDER_LINE_STG.AUTO_ADD_KEY,
	FOW_AUTO_ORDER_LINE_STG.CREATED_BY,
	FOW_AUTO_ORDER_LINE_STG.DATE_CREATED,
	FOW_AUTO_ORDER_LINE_STG.DISCOUNT_PCT,
	FOW_AUTO_ORDER_LINE_STG.ENABLED,
	FOW_AUTO_ORDER_LINE_STG.ITEM_DESC,
	FOW_AUTO_ORDER_LINE_STG.ITEM_ID,
	FOW_AUTO_ORDER_LINE_STG.LAST_UPDATED,
	FOW_AUTO_ORDER_LINE_STG.LOOK_NO,
	FOW_AUTO_ORDER_LINE_STG.OFFERING_ID,
	FOW_AUTO_ORDER_LINE_STG.ORDER_TYPE,
	FOW_AUTO_ORDER_LINE_STG.QUANTITY,
	FOW_AUTO_ORDER_LINE_STG.UPDATED_BY,
	FOW_AUTO_ORDER_LINE_STG.ODS_CREATE_DATE,
	FOW_AUTO_ORDER_LINE_STG.ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG   FOW_AUTO_ORDER_LINE_STG
where	exists  (
		select	SUB.ID
		from 	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG SUB
		where 	SUB.ID=FOW_AUTO_ORDER_LINE_STG.ID
		group by 	SUB.ID
		having 	count(1) > 1
		)



&


/*-----------------------------------------------*/
/* TASK No. 20 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ID cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'ID',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	ID is null



&


/*-----------------------------------------------*/
/* TASK No. 21 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column VERSION cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'VERSION',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	VERSION is null



&


/*-----------------------------------------------*/
/* TASK No. 22 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ADDED_ON_EVENT cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'ADDED_ON_EVENT',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	ADDED_ON_EVENT is null



&


/*-----------------------------------------------*/
/* TASK No. 23 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column AUTO_ADD_KEY cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'AUTO_ADD_KEY',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	AUTO_ADD_KEY is null



&


/*-----------------------------------------------*/
/* TASK No. 24 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ENABLED cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'ENABLED',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	ENABLED is null



&


/*-----------------------------------------------*/
/* TASK No. 25 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ITEM_DESC cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'ITEM_DESC',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	ITEM_DESC is null



&


/*-----------------------------------------------*/
/* TASK No. 26 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ITEM_ID cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'ITEM_ID',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	ITEM_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 27 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column OFFERING_ID cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'OFFERING_ID',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	OFFERING_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 28 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ORDER_TYPE cannot be null.',
	sysdate,
	'(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT',
	'ORDER_TYPE',
	'NN',	
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
where	ORDER_TYPE is null



&


/*-----------------------------------------------*/
/* TASK No. 29 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG_IDX on RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG (ODI_ROW_ID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 30 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 31 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_STAGE',
	'FOW_AUTO_ORDER_LINE_STG',
	'ODS_STAGE.FOW_AUTO_ORDER_LINE_STG',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_FOW_AUTO_ORDER_LINE_STG E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(1557001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_STG_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 32 */
/* Flag rows for update */

/* DETECTION_STRATEGY = NOT_EXISTS */


update	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
set	IND_UPDATE = 'U'
where	(ID)
	in	(
		select	ID
		from	ODS_STAGE.FOW_AUTO_ORDER_LINE_STG
		)



&


/*-----------------------------------------------*/
/* TASK No. 33 */
/* Flag useless rows */

/* DETECTION_STRATEGY = NOT_EXISTS */

/* Command skipped due to chosen DETECTION_STRATEGY */



/*-----------------------------------------------*/
/* TASK No. 34 */
/* Update existing rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
update	ODS_STAGE.FOW_AUTO_ORDER_LINE_STG T
set 	
	(
	T.VERSION,
	T.ADDED_ON_EVENT,
	T.AUTO_ADD_KEY,
	T.CREATED_BY,
	T.DATE_CREATED,
	T.DISCOUNT_PCT,
	T.ENABLED,
	T.ITEM_DESC,
	T.ITEM_ID,
	T.LAST_UPDATED,
	T.LOOK_NO,
	T.OFFERING_ID,
	T.ORDER_TYPE,
	T.QUANTITY,
	T.UPDATED_BY
	) =
		(
		select	S.VERSION,
			S.ADDED_ON_EVENT,
			S.AUTO_ADD_KEY,
			S.CREATED_BY,
			S.DATE_CREATED,
			S.DISCOUNT_PCT,
			S.ENABLED,
			S.ITEM_DESC,
			S.ITEM_ID,
			S.LAST_UPDATED,
			S.LOOK_NO,
			S.OFFERING_ID,
			S.ORDER_TYPE,
			S.QUANTITY,
			S.UPDATED_BY
		from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG S
		where	T.ID	=S.ID
	    	 )
	,               T.ODS_MODIFY_DATE = SYSDATE

where	(ID)
	in	(
		select	ID
		from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG
		where	IND_UPDATE = 'U'
		)




&


/*-----------------------------------------------*/
/* TASK No. 35 */
/* Insert new rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
insert into 	ODS_STAGE.FOW_AUTO_ORDER_LINE_STG T
	(
	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY
	,                ODS_CREATE_DATE,
	ODS_MODIFY_DATE
	)
select 	ID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_ID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY
	,                SYSDATE,
	SYSDATE
from	RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG S



where	IND_UPDATE = 'I'



&


/*-----------------------------------------------*/
/* TASK No. 36 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 37 */
/* Drop flow table */

drop table RAX_APP_USER.I$_FOW_AUTO_ORDER_LINE_STG 

&


/*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */

drop table RAX_APP_USER.C$_0FOW_AUTO_ORDER_LINE_STG purge

&


/*-----------------------------------------------*/
/* TASK No. 38 */
/* merge into ods_stage.fow_offering_xr */

Merge Into ODS_STAGE.FOW_AUTO_ORDER_LINE_XR T
Using (Select ID, OFFERING_ID From ODS_STAGE.FOW_AUTO_ORDER_LINE_STG
       where ODS_MODIFY_DATE> TO_DATE(SUBSTR(:v_cdc_load_date,1,19),'YYYY-MM-DD HH24:MI:SS') - :v_cdc_oms_overlap
       
)S
on(
T.ID=S.ID	
)
when matched
Then Update Set	
 	T.OFFERING_ID = S.OFFERING_ID,
	T.ODS_MODIFY_DATE = SYSDATE	
when not matched
then insert(
T.ID,
T.OFFERING_ID,
T.AUTO_ORDER_LINE_OID,   
T.ODS_CREATE_DATE,
T.ODS_MODIFY_DATE
)
values
(
S.ID,
S.OFFERING_ID,
ODS_STAGE.AUTO_ORDER_LINE_OID_SEQ.nextval,
SYSDATE,
SYSDATE
)

&


/*-----------------------------------------------*/
/* TASK No. 39 */
/* Drop flow table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_AUTO_ORDER_LINE';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 40 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_AUTO_ORDER_LINE
(
	AUTO_ORDER_LINE_OID		NUMBER(19) NULL,
	VERSION		NUMBER(19) NULL,
	ADDED_ON_EVENT		VARCHAR2(255) NULL,
	AUTO_ADD_KEY		VARCHAR2(255) NULL,
	CREATED_BY		VARCHAR2(255) NULL,
	DATE_CREATED		DATE NULL,
	DISCOUNT_PCT		FLOAT(126) NULL,
	ENABLED		NUMBER(1) NULL,
	ITEM_DESC		VARCHAR2(255) NULL,
	ITEM_ID		VARCHAR2(255) NULL,
	LAST_UPDATED		DATE NULL,
	LOOK_NO		VARCHAR2(255) NULL,
	OFFERING_OID		NUMBER(19) NULL,
	ORDER_TYPE		VARCHAR2(255) NULL,
	QUANTITY		NUMBER(10) NULL,
	UPDATED_BY		VARCHAR2(255) NULL,
	SOURCE_SYSTEM_OID		NUMBER NULL,
	ODS_CREATE_DATE		DATE NULL,
	ODS_MODIFY_DATE		DATE NULL,
	IND_UPDATE		CHAR(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 41 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 


  


insert into	RAX_APP_USER.I$_AUTO_ORDER_LINE
(
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	IND_UPDATE
)
select 
AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	IND_UPDATE
 from (


select 	 
	
	AUTO_ORDER_LINE_XR.AUTO_ORDER_LINE_OID AUTO_ORDER_LINE_OID,
	FOW_AUTO_ORDER_LINE_STG.VERSION VERSION,
	FOW_AUTO_ORDER_LINE_STG.ADDED_ON_EVENT ADDED_ON_EVENT,
	FOW_AUTO_ORDER_LINE_STG.AUTO_ADD_KEY AUTO_ADD_KEY,
	FOW_AUTO_ORDER_LINE_STG.CREATED_BY CREATED_BY,
	FOW_AUTO_ORDER_LINE_STG.DATE_CREATED DATE_CREATED,
	FOW_AUTO_ORDER_LINE_STG.DISCOUNT_PCT DISCOUNT_PCT,
	FOW_AUTO_ORDER_LINE_STG.ENABLED ENABLED,
	FOW_AUTO_ORDER_LINE_STG.ITEM_DESC ITEM_DESC,
	FOW_AUTO_ORDER_LINE_STG.ITEM_ID ITEM_ID,
	FOW_AUTO_ORDER_LINE_STG.LAST_UPDATED LAST_UPDATED,
	FOW_AUTO_ORDER_LINE_STG.LOOK_NO LOOK_NO,
	OFFERING.OFFERING_OID OFFERING_OID,
	FOW_AUTO_ORDER_LINE_STG.ORDER_TYPE ORDER_TYPE,
	FOW_AUTO_ORDER_LINE_STG.QUANTITY QUANTITY,
	FOW_AUTO_ORDER_LINE_STG.UPDATED_BY UPDATED_BY,
	SOURCE_SYSTEM.SOURCE_SYSTEM_OID SOURCE_SYSTEM_OID,

	'I' IND_UPDATE

from	ODS_STAGE.FOW_AUTO_ORDER_LINE_STG   FOW_AUTO_ORDER_LINE_STG, ODS_OWN.SOURCE_SYSTEM   SOURCE_SYSTEM, ODS_STAGE.FOW_AUTO_ORDER_LINE_XR   AUTO_ORDER_LINE_XR, ODS_OWN.OFFERING   OFFERING, ODS_STAGE.FOW_OFFERING_XR   FOW_OFFERING_XR
where	(1=1)
 And (FOW_AUTO_ORDER_LINE_STG.ID=AUTO_ORDER_LINE_XR.ID (+))
AND (FOW_AUTO_ORDER_LINE_STG.OFFERING_ID=FOW_OFFERING_XR.ID (+))
AND (FOW_OFFERING_XR.OFFERING_OID=OFFERING.OFFERING_OID (+))
And (SOURCE_SYSTEM.SOURCE_SYSTEM_SHORT_NAME='FOW')
 And (FOW_AUTO_ORDER_LINE_STG.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)




) S
where NOT EXISTS 
	( select 1 from ODS_OWN.AUTO_ORDER_LINE T
	where	T.AUTO_ORDER_LINE_OID	= S.AUTO_ORDER_LINE_OID 
		 and ((T.VERSION = S.VERSION) or (T.VERSION IS NULL and S.VERSION IS NULL)) and
		((T.ADDED_ON_EVENT = S.ADDED_ON_EVENT) or (T.ADDED_ON_EVENT IS NULL and S.ADDED_ON_EVENT IS NULL)) and
		((T.AUTO_ADD_KEY = S.AUTO_ADD_KEY) or (T.AUTO_ADD_KEY IS NULL and S.AUTO_ADD_KEY IS NULL)) and
		((T.CREATED_BY = S.CREATED_BY) or (T.CREATED_BY IS NULL and S.CREATED_BY IS NULL)) and
		((T.DATE_CREATED = S.DATE_CREATED) or (T.DATE_CREATED IS NULL and S.DATE_CREATED IS NULL)) and
		((T.DISCOUNT_PCT = S.DISCOUNT_PCT) or (T.DISCOUNT_PCT IS NULL and S.DISCOUNT_PCT IS NULL)) and
		((T.ENABLED = S.ENABLED) or (T.ENABLED IS NULL and S.ENABLED IS NULL)) and
		((T.ITEM_DESC = S.ITEM_DESC) or (T.ITEM_DESC IS NULL and S.ITEM_DESC IS NULL)) and
		((T.ITEM_ID = S.ITEM_ID) or (T.ITEM_ID IS NULL and S.ITEM_ID IS NULL)) and
		((T.LAST_UPDATED = S.LAST_UPDATED) or (T.LAST_UPDATED IS NULL and S.LAST_UPDATED IS NULL)) and
		((T.LOOK_NO = S.LOOK_NO) or (T.LOOK_NO IS NULL and S.LOOK_NO IS NULL)) and
		((T.OFFERING_OID = S.OFFERING_OID) or (T.OFFERING_OID IS NULL and S.OFFERING_OID IS NULL)) and
		((T.ORDER_TYPE = S.ORDER_TYPE) or (T.ORDER_TYPE IS NULL and S.ORDER_TYPE IS NULL)) and
		((T.QUANTITY = S.QUANTITY) or (T.QUANTITY IS NULL and S.QUANTITY IS NULL)) and
		((T.UPDATED_BY = S.UPDATED_BY) or (T.UPDATED_BY IS NULL and S.UPDATED_BY IS NULL)) and
		((T.SOURCE_SYSTEM_OID = S.SOURCE_SYSTEM_OID) or (T.SOURCE_SYSTEM_OID IS NULL and S.SOURCE_SYSTEM_OID IS NULL))
        )

  
  

  

 


&


/*-----------------------------------------------*/
/* TASK No. 42 */
/* Create Index on flow table */

create index	RAX_APP_USER.I$_AUTO_ORDER_LINE_IDX
on		RAX_APP_USER.I$_AUTO_ORDER_LINE (AUTO_ORDER_LINE_OID)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 43 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_AUTO_ORDER_LINE',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 44 */
/* create check table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.SNP_CHECK_TAB
						(
							CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
							SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
							RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
							FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
							ERR_TYPE		VARCHAR2(1 CHAR) NULL,
							ERR_MESS		VARCHAR2(250 CHAR) NULL ,
							CHECK_DATE	DATE NULL,
							ORIGIN		VARCHAR2(100 CHAR) NULL,
							CONS_NAME	VARCHAR2(35 CHAR) NULL,
							CONS_TYPE		VARCHAR2(2 CHAR) NULL,
							ERR_COUNT		NUMBER(10) NULL
						)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;
	

&


/*-----------------------------------------------*/
/* TASK No. 45 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_OWN'
and	ORIGIN 		= '(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 46 */
/* create error table */


BEGIN  
   EXECUTE IMMEDIATE 'create table RAX_APP_USER.E$_AUTO_ORDER_LINE
						(
							ODI_ROW_ID 		UROWID,
							ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
							ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
							ODI_CHECK_DATE	DATE NULL, 
							AUTO_ORDER_LINE_OID	NUMBER(19) NULL,
							VERSION	NUMBER(19) NULL,
							ADDED_ON_EVENT	VARCHAR2(255) NULL,
							AUTO_ADD_KEY	VARCHAR2(255) NULL,
							CREATED_BY	VARCHAR2(255) NULL,
							DATE_CREATED	DATE NULL,
							DISCOUNT_PCT	FLOAT(126) NULL,
							ENABLED	NUMBER(1) NULL,
							ITEM_DESC	VARCHAR2(255) NULL,
							ITEM_ID	VARCHAR2(255) NULL,
							LAST_UPDATED	DATE NULL,
							LOOK_NO	VARCHAR2(255) NULL,
							OFFERING_OID	NUMBER(19) NULL,
							ORDER_TYPE	VARCHAR2(255) NULL,
							QUANTITY	NUMBER(10) NULL,
							UPDATED_BY	VARCHAR2(255) NULL,
							SOURCE_SYSTEM_OID	NUMBER NULL,
							ODS_CREATE_DATE	DATE NULL,
							ODS_MODIFY_DATE	DATE NULL,
							ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
							ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
							ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
							ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
							ODI_SESS_NO		VARCHAR2(19 CHAR)
						)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;



&


/*-----------------------------------------------*/
/* TASK No. 47 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_AUTO_ORDER_LINE
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT')


&


/*-----------------------------------------------*/
/* TASK No. 48 */
/* Create index on PK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.I$_AUTO_ORDER_LINE_IDX on RAX_APP_USER.I$_AUTO_ORDER_LINE (AUTO_ORDER_LINE_OID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 49 */
/* insert PK errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15064: The primary key AUTO_ORDER_LINE_PK is not unique.',
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	sysdate,
	'AUTO_ORDER_LINE_PK',
	'PK',	
	AUTO_ORDER_LINE.AUTO_ORDER_LINE_OID,
	AUTO_ORDER_LINE.VERSION,
	AUTO_ORDER_LINE.ADDED_ON_EVENT,
	AUTO_ORDER_LINE.AUTO_ADD_KEY,
	AUTO_ORDER_LINE.CREATED_BY,
	AUTO_ORDER_LINE.DATE_CREATED,
	AUTO_ORDER_LINE.DISCOUNT_PCT,
	AUTO_ORDER_LINE.ENABLED,
	AUTO_ORDER_LINE.ITEM_DESC,
	AUTO_ORDER_LINE.ITEM_ID,
	AUTO_ORDER_LINE.LAST_UPDATED,
	AUTO_ORDER_LINE.LOOK_NO,
	AUTO_ORDER_LINE.OFFERING_OID,
	AUTO_ORDER_LINE.ORDER_TYPE,
	AUTO_ORDER_LINE.QUANTITY,
	AUTO_ORDER_LINE.UPDATED_BY,
	AUTO_ORDER_LINE.SOURCE_SYSTEM_OID,
	AUTO_ORDER_LINE.ODS_CREATE_DATE,
	AUTO_ORDER_LINE.ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE   AUTO_ORDER_LINE
where	exists  (
		select	SUB.AUTO_ORDER_LINE_OID
		from 	RAX_APP_USER.I$_AUTO_ORDER_LINE SUB
		where 	SUB.AUTO_ORDER_LINE_OID=AUTO_ORDER_LINE.AUTO_ORDER_LINE_OID
		group by 	SUB.AUTO_ORDER_LINE_OID
		having 	count(1) > 1
		)



&


/*-----------------------------------------------*/
/* TASK No. 50 */
/* Create index on AK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	AUTO_ORDER_LINE_PKX_flow on	RAX_APP_USER.I$_AUTO_ORDER_LINE (AUTO_ORDER_LINE_OID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 AND SQLCODE != -1408 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 51 */
/* insert AK errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15063: The alternate key AUTO_ORDER_LINE_PKX is not unique.',
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	sysdate,
	'AUTO_ORDER_LINE_PKX',
	'AK',	
	AUTO_ORDER_LINE.AUTO_ORDER_LINE_OID,
	AUTO_ORDER_LINE.VERSION,
	AUTO_ORDER_LINE.ADDED_ON_EVENT,
	AUTO_ORDER_LINE.AUTO_ADD_KEY,
	AUTO_ORDER_LINE.CREATED_BY,
	AUTO_ORDER_LINE.DATE_CREATED,
	AUTO_ORDER_LINE.DISCOUNT_PCT,
	AUTO_ORDER_LINE.ENABLED,
	AUTO_ORDER_LINE.ITEM_DESC,
	AUTO_ORDER_LINE.ITEM_ID,
	AUTO_ORDER_LINE.LAST_UPDATED,
	AUTO_ORDER_LINE.LOOK_NO,
	AUTO_ORDER_LINE.OFFERING_OID,
	AUTO_ORDER_LINE.ORDER_TYPE,
	AUTO_ORDER_LINE.QUANTITY,
	AUTO_ORDER_LINE.UPDATED_BY,
	AUTO_ORDER_LINE.SOURCE_SYSTEM_OID,
	AUTO_ORDER_LINE.ODS_CREATE_DATE,
	AUTO_ORDER_LINE.ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE   AUTO_ORDER_LINE
where	exists  (
		select	SUB.AUTO_ORDER_LINE_OID
		from 	RAX_APP_USER.I$_AUTO_ORDER_LINE SUB
		where 	SUB.AUTO_ORDER_LINE_OID=AUTO_ORDER_LINE.AUTO_ORDER_LINE_OID
		group by 	SUB.AUTO_ORDER_LINE_OID
		having 	count(1) > 1
		)



&


/*-----------------------------------------------*/
/* TASK No. 52 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column AUTO_ORDER_LINE_OID cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'AUTO_ORDER_LINE_OID',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	AUTO_ORDER_LINE_OID is null



&


/*-----------------------------------------------*/
/* TASK No. 53 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column VERSION cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'VERSION',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	VERSION is null



&


/*-----------------------------------------------*/
/* TASK No. 54 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ADDED_ON_EVENT cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'ADDED_ON_EVENT',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	ADDED_ON_EVENT is null



&


/*-----------------------------------------------*/
/* TASK No. 55 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column AUTO_ADD_KEY cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'AUTO_ADD_KEY',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	AUTO_ADD_KEY is null



&


/*-----------------------------------------------*/
/* TASK No. 56 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ENABLED cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'ENABLED',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	ENABLED is null



&


/*-----------------------------------------------*/
/* TASK No. 57 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ITEM_DESC cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'ITEM_DESC',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	ITEM_DESC is null



&


/*-----------------------------------------------*/
/* TASK No. 58 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ITEM_ID cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'ITEM_ID',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	ITEM_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 59 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column OFFERING_OID cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'OFFERING_OID',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	OFFERING_OID is null



&


/*-----------------------------------------------*/
/* TASK No. 60 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_AUTO_ORDER_LINE
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ORDER_TYPE cannot be null.',
	sysdate,
	'(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT',
	'ORDER_TYPE',
	'NN',	
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_AUTO_ORDER_LINE
where	ORDER_TYPE is null



&


/*-----------------------------------------------*/
/* TASK No. 61 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */
BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_AUTO_ORDER_LINE_IDX on RAX_APP_USER.E$_AUTO_ORDER_LINE (ODI_ROW_ID)';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -955 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 62 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_AUTO_ORDER_LINE  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_AUTO_ORDER_LINE E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 63 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_OWN',
	'AUTO_ORDER_LINE',
	'ODS_OWN.AUTO_ORDER_LINE',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_AUTO_ORDER_LINE E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(1558001)ODS_Project.LOAD_FOW_AUTO_ORDER_LINE_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 64 */
/* Flag rows for update */

/* DETECTION_STRATEGY = NOT_EXISTS */


update	RAX_APP_USER.I$_AUTO_ORDER_LINE
set	IND_UPDATE = 'U'
where	(AUTO_ORDER_LINE_OID)
	in	(
		select	AUTO_ORDER_LINE_OID
		from	ODS_OWN.AUTO_ORDER_LINE
		)



&


/*-----------------------------------------------*/
/* TASK No. 65 */
/* Flag useless rows */

/* DETECTION_STRATEGY = NOT_EXISTS */

/* Command skipped due to chosen DETECTION_STRATEGY */



/*-----------------------------------------------*/
/* TASK No. 66 */
/* Update existing rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
update	ODS_OWN.AUTO_ORDER_LINE T
set 	
	(
	T.VERSION,
	T.ADDED_ON_EVENT,
	T.AUTO_ADD_KEY,
	T.CREATED_BY,
	T.DATE_CREATED,
	T.DISCOUNT_PCT,
	T.ENABLED,
	T.ITEM_DESC,
	T.ITEM_ID,
	T.LAST_UPDATED,
	T.LOOK_NO,
	T.OFFERING_OID,
	T.ORDER_TYPE,
	T.QUANTITY,
	T.UPDATED_BY,
	T.SOURCE_SYSTEM_OID
	) =
		(
		select	S.VERSION,
			S.ADDED_ON_EVENT,
			S.AUTO_ADD_KEY,
			S.CREATED_BY,
			S.DATE_CREATED,
			S.DISCOUNT_PCT,
			S.ENABLED,
			S.ITEM_DESC,
			S.ITEM_ID,
			S.LAST_UPDATED,
			S.LOOK_NO,
			S.OFFERING_OID,
			S.ORDER_TYPE,
			S.QUANTITY,
			S.UPDATED_BY,
			S.SOURCE_SYSTEM_OID
		from	RAX_APP_USER.I$_AUTO_ORDER_LINE S
		where	T.AUTO_ORDER_LINE_OID	=S.AUTO_ORDER_LINE_OID
	    	 )
	,                T.ODS_MODIFY_DATE = sysdate

where	(AUTO_ORDER_LINE_OID)
	in	(
		select	AUTO_ORDER_LINE_OID
		from	RAX_APP_USER.I$_AUTO_ORDER_LINE
		where	IND_UPDATE = 'U'
		)




&


/*-----------------------------------------------*/
/* TASK No. 67 */
/* Insert new rows */

/* DETECTION_STRATEGY = NOT_EXISTS */
insert into 	ODS_OWN.AUTO_ORDER_LINE T
	(
	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID
	,                 ODS_CREATE_DATE,
	ODS_MODIFY_DATE
	)
select 	AUTO_ORDER_LINE_OID,
	VERSION,
	ADDED_ON_EVENT,
	AUTO_ADD_KEY,
	CREATED_BY,
	DATE_CREATED,
	DISCOUNT_PCT,
	ENABLED,
	ITEM_DESC,
	ITEM_ID,
	LAST_UPDATED,
	LOOK_NO,
	OFFERING_OID,
	ORDER_TYPE,
	QUANTITY,
	UPDATED_BY,
	SOURCE_SYSTEM_OID
	,                 sysdate,
	sysdate
from	RAX_APP_USER.I$_AUTO_ORDER_LINE S



where	IND_UPDATE = 'I'



&


/*-----------------------------------------------*/
/* TASK No. 68 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 69 */
/* Drop flow table */

drop table RAX_APP_USER.I$_AUTO_ORDER_LINE 

&


/*-----------------------------------------------*/
/* TASK No. 70 */
/* Repair Auto_Order_Line.OFFERING_OID */

merge into RAX_APP_USER.E$_AUTO_ORDER_LINE   c 
using (
    select o.OFFERING_OID, e.ODI_PK         
    from 
        RAX_APP_USER.E$_AUTO_ORDER_LINE  E
     , ODS_STAGE.FOW_AUTO_ORDER_LINE_XR  F
     ,ODS_OWN.OFFERING  O
     ,ODS_STAGE.FOW_OFFERING_XR xr
    where (1=1) 
    And F.AUTO_ORDER_LINE_OID = E.AUTO_ORDER_LINE_OID
    And F.OFFERING_ID = Xr.ID
    and Xr.OFFERING_OID = O.OFFERING_OID
    and nvl(o.OFFERING_OID,-11111) <> nvl(e.OFFERING_OID,-11111)
) s
   on (c.ODI_PK = s.ODI_PK)
when matched then update
set 
c.OFFERING_OID = s.OFFERING_OID

&


/*-----------------------------------------------*/
/* TASK No. 71 */
/* Update CDC Load Status */

/*
UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env
*/

UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

&


/*-----------------------------------------------*/
/* TASK No. 72 */
/* Insert CDC Audit Record */

/*
INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name
,:v_sess_no
,'LOAD_FOW_AUTO_ORDER_LINE_PKG'
,'002'
,TO_DATE(SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
,TO_DATE (SUBSTR(:v_cdc_load_date, 1, 19),'YYYY-MM-DD HH24:MI:SS')
,:v_cdc_overlap
,SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS_OWN.ODS_CDC_LOAD_STATUS
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

*/


INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_FOW_AUTO_ORDER_LINE_PKG',
'002',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          )
,:v_cdc_overlap,
SYSDATE,
 :v_env)


&


/*-----------------------------------------------*/
