/* TASK No. 1 */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 1 */





/*-----------------------------------------------*/
/* TASK No. 2 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 2 */




/*-----------------------------------------------*/
/* TASK No. 3 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 3 */




/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0CHILD_ORD_INFO_STG purge

-- &


/*-----------------------------------------------*/
/* TASK No. 5 */
/* Create work table */

-- create table RAX_APP_USER.C$_0CHILD_ORD_INFO_STG
-- (
-- 	C1_CHILD_ORDER_INFO_KEY	CHAR(24) NULL,
-- 	C2_PARENT_ORDER_HEADER_KEY	CHAR(24) NULL,
-- 	C3_PARENT_ORDER_LINE_KEY	CHAR(24) NULL,
-- 	C4_STATUS	VARCHAR2(40) NULL,
-- 	C5_MULTIPLICITY	VARCHAR2(40) NULL,
-- 	C6_ROLE_INFO	VARCHAR2(40) NULL,
-- 	C7_GROUP_INFO	VARCHAR2(40) NULL,
-- 	C8_TOTAL_CHILD_ORDERS	NUMBER(5) NULL,
-- 	C9_SUBJECT_COUNT	NUMBER(5) NULL,
-- 	C10_ITEM_ID	VARCHAR2(40) NULL,
-- 	C11_AVAILABLE_DATE	DATE NULL,
-- 	C12_CREATETS	DATE NULL,
-- 	C13_MODIFYTS	DATE NULL,
-- 	C14_CREATEUSERID	VARCHAR2(40) NULL,
-- 	C15_MODIFYUSERID	VARCHAR2(40) NULL,
-- 	C16_CREATEPROGID	VARCHAR2(40) NULL,
-- 	C17_MODIFYPROGID	VARCHAR2(40) NULL,
-- 	C18_LOCKID	NUMBER(5) NULL
-- )
-- NOLOGGING

-- &


/*-----------------------------------------------*/
/* TASK No. 6 */
/* Load data */

/* SOURCE CODE */


-- select	
-- 	LT_CHILD_ORDER_INFO.CHILD_ORDER_INFO_KEY	   C1_CHILD_ORDER_INFO_KEY,
-- 	LT_CHILD_ORDER_INFO.PARENT_ORDER_HEADER_KEY	   C2_PARENT_ORDER_HEADER_KEY,
-- 	LT_CHILD_ORDER_INFO.PARENT_ORDER_LINE_KEY	   C3_PARENT_ORDER_LINE_KEY,
-- 	LT_CHILD_ORDER_INFO.STATUS	   C4_STATUS,
-- 	LT_CHILD_ORDER_INFO.MULTIPLICITY	   C5_MULTIPLICITY,
-- 	LT_CHILD_ORDER_INFO.ROLE_INFO	   C6_ROLE_INFO,
-- 	LT_CHILD_ORDER_INFO.GROUP_INFO	   C7_GROUP_INFO,
-- 	LT_CHILD_ORDER_INFO.TOTAL_CHILD_ORDERS	   C8_TOTAL_CHILD_ORDERS,
-- 	LT_CHILD_ORDER_INFO.SUBJECT_COUNT	   C9_SUBJECT_COUNT,
-- 	LT_CHILD_ORDER_INFO.ITEM_ID	   C10_ITEM_ID,
-- 	LT_CHILD_ORDER_INFO.AVAILABLE_DATE	   C11_AVAILABLE_DATE,
-- 	LT_CHILD_ORDER_INFO.CREATETS	   C12_CREATETS,
-- 	LT_CHILD_ORDER_INFO.MODIFYTS	   C13_MODIFYTS,
-- 	LT_CHILD_ORDER_INFO.CREATEUSERID	   C14_CREATEUSERID,
-- 	LT_CHILD_ORDER_INFO.MODIFYUSERID	   C15_MODIFYUSERID,
-- 	LT_CHILD_ORDER_INFO.CREATEPROGID	   C16_CREATEPROGID,
-- 	LT_CHILD_ORDER_INFO.MODIFYPROGID	   C17_MODIFYPROGID,
-- 	LT_CHILD_ORDER_INFO.LOCKID	   C18_LOCKID
-- from	OMS3_OWN.LT_CHILD_ORDER_INFO   LT_CHILD_ORDER_INFO
-- where	(1=1)
-- And (LT_CHILD_ORDER_INFO.MODIFYTS >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)


-- &

-- /* TARGET CODE */
-- insert /*+ append */ into RAX_APP_USER.C$_0CHILD_ORD_INFO_STG
-- (
-- 	C1_CHILD_ORDER_INFO_KEY,
-- 	C2_PARENT_ORDER_HEADER_KEY,
-- 	C3_PARENT_ORDER_LINE_KEY,
-- 	C4_STATUS,
-- 	C5_MULTIPLICITY,
-- 	C6_ROLE_INFO,
-- 	C7_GROUP_INFO,
-- 	C8_TOTAL_CHILD_ORDERS,
-- 	C9_SUBJECT_COUNT,
-- 	C10_ITEM_ID,
-- 	C11_AVAILABLE_DATE,
-- 	C12_CREATETS,
-- 	C13_MODIFYTS,
-- 	C14_CREATEUSERID,
-- 	C15_MODIFYUSERID,
-- 	C16_CREATEPROGID,
-- 	C17_MODIFYPROGID,
-- 	C18_LOCKID
-- )
-- values
-- (
-- 	:C1_CHILD_ORDER_INFO_KEY,
-- 	:C2_PARENT_ORDER_HEADER_KEY,
-- 	:C3_PARENT_ORDER_LINE_KEY,
-- 	:C4_STATUS,
-- 	:C5_MULTIPLICITY,
-- 	:C6_ROLE_INFO,
-- 	:C7_GROUP_INFO,
-- 	:C8_TOTAL_CHILD_ORDERS,
-- 	:C9_SUBJECT_COUNT,
-- 	:C10_ITEM_ID,
-- 	:C11_AVAILABLE_DATE,
-- 	:C12_CREATETS,
-- 	:C13_MODIFYTS,
-- 	:C14_CREATEUSERID,
-- 	:C15_MODIFYUSERID,
-- 	:C16_CREATEPROGID,
-- 	:C17_MODIFYPROGID,
-- 	:C18_LOCKID
-- )

-- &



/*-----------------------------------------------*/
/* TASK No. 7 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0CHILD_ORD_INFO_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Set vID */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 9 */




/*-----------------------------------------------*/
/* TASK No. 10 */
/* Drop flow table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;


&



/*-----------------------------------------------*/
/* TASK No. 11 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001
(
	CHILD_ORDER_INFO_KEY	CHAR(24) NULL,
	PARENT_ORDER_HEADER_KEY	CHAR(24) NULL,
	PARENT_ORDER_LINE_KEY	CHAR(24) NULL,
	STATUS	VARCHAR2(40) NULL,
	MULTIPLICITY	VARCHAR2(40) NULL,
	ROLE_INFO	VARCHAR2(40) NULL,
	GROUP_INFO	VARCHAR2(40) NULL,
	TOTAL_CHILD_ORDERS	NUMBER(5) NULL,
	SUBJECT_COUNT	NUMBER(5) NULL,
	ITEM_ID	VARCHAR2(40) NULL,
	AVAILABLE_DATE	DATE NULL,
	CREATETS	DATE NULL,
	MODIFYTS	DATE NULL,
	CREATEUSERID	VARCHAR2(40) NULL,
	MODIFYUSERID	VARCHAR2(40) NULL,
	CREATEPROGID	VARCHAR2(40) NULL,
	MODIFYPROGID	VARCHAR2(40) NULL,
	LOCKID	NUMBER(5) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL
	,IND_UPDATE		char(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 

insert into	RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001
(
	CHILD_ORDER_INFO_KEY,
	PARENT_ORDER_HEADER_KEY,
	PARENT_ORDER_LINE_KEY,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	ITEM_ID,
	AVAILABLE_DATE,
	CREATETS,
	MODIFYTS,
	CREATEUSERID,
	MODIFYUSERID,
	CREATEPROGID,
	MODIFYPROGID,
	LOCKID,
	IND_UPDATE
)
select 
CHILD_ORDER_INFO_KEY,
	PARENT_ORDER_HEADER_KEY,
	PARENT_ORDER_LINE_KEY,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	ITEM_ID,
	AVAILABLE_DATE,
	CREATETS,
	MODIFYTS,
	CREATEUSERID,
	MODIFYUSERID,
	CREATEPROGID,
	MODIFYPROGID,
	LOCKID,
	IND_UPDATE
 from (


select 	 
	
	C1_CHILD_ORDER_INFO_KEY CHILD_ORDER_INFO_KEY,
	C2_PARENT_ORDER_HEADER_KEY PARENT_ORDER_HEADER_KEY,
	C3_PARENT_ORDER_LINE_KEY PARENT_ORDER_LINE_KEY,
	C4_STATUS STATUS,
	C5_MULTIPLICITY MULTIPLICITY,
	C6_ROLE_INFO ROLE_INFO,
	C7_GROUP_INFO GROUP_INFO,
	C8_TOTAL_CHILD_ORDERS TOTAL_CHILD_ORDERS,
	C9_SUBJECT_COUNT SUBJECT_COUNT,
	C10_ITEM_ID ITEM_ID,
	C11_AVAILABLE_DATE AVAILABLE_DATE,
	C12_CREATETS CREATETS,
	C13_MODIFYTS MODIFYTS,
	C14_CREATEUSERID CREATEUSERID,
	C15_MODIFYUSERID MODIFYUSERID,
	C16_CREATEPROGID CREATEPROGID,
	C17_MODIFYPROGID MODIFYPROGID,
	C18_LOCKID LOCKID,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0CHILD_ORD_INFO_STG
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_STG T
	where	T.CHILD_ORDER_INFO_KEY	= S.CHILD_ORDER_INFO_KEY 
		 and ((T.PARENT_ORDER_HEADER_KEY = S.PARENT_ORDER_HEADER_KEY) or (T.PARENT_ORDER_HEADER_KEY IS NULL and S.PARENT_ORDER_HEADER_KEY IS NULL)) and
		((T.PARENT_ORDER_LINE_KEY = S.PARENT_ORDER_LINE_KEY) or (T.PARENT_ORDER_LINE_KEY IS NULL and S.PARENT_ORDER_LINE_KEY IS NULL)) and
		((T.STATUS = S.STATUS) or (T.STATUS IS NULL and S.STATUS IS NULL)) and
		((T.MULTIPLICITY = S.MULTIPLICITY) or (T.MULTIPLICITY IS NULL and S.MULTIPLICITY IS NULL)) and
		((T.ROLE_INFO = S.ROLE_INFO) or (T.ROLE_INFO IS NULL and S.ROLE_INFO IS NULL)) and
		((T.GROUP_INFO = S.GROUP_INFO) or (T.GROUP_INFO IS NULL and S.GROUP_INFO IS NULL)) and
		((T.TOTAL_CHILD_ORDERS = S.TOTAL_CHILD_ORDERS) or (T.TOTAL_CHILD_ORDERS IS NULL and S.TOTAL_CHILD_ORDERS IS NULL)) and
		((T.SUBJECT_COUNT = S.SUBJECT_COUNT) or (T.SUBJECT_COUNT IS NULL and S.SUBJECT_COUNT IS NULL)) and
		((T.ITEM_ID = S.ITEM_ID) or (T.ITEM_ID IS NULL and S.ITEM_ID IS NULL)) and
		((T.AVAILABLE_DATE = S.AVAILABLE_DATE) or (T.AVAILABLE_DATE IS NULL and S.AVAILABLE_DATE IS NULL)) and
		((T.CREATETS = S.CREATETS) or (T.CREATETS IS NULL and S.CREATETS IS NULL)) and
		((T.MODIFYTS = S.MODIFYTS) or (T.MODIFYTS IS NULL and S.MODIFYTS IS NULL)) and
		((T.CREATEUSERID = S.CREATEUSERID) or (T.CREATEUSERID IS NULL and S.CREATEUSERID IS NULL)) and
		((T.MODIFYUSERID = S.MODIFYUSERID) or (T.MODIFYUSERID IS NULL and S.MODIFYUSERID IS NULL)) and
		((T.CREATEPROGID = S.CREATEPROGID) or (T.CREATEPROGID IS NULL and S.CREATEPROGID IS NULL)) and
		((T.MODIFYPROGID = S.MODIFYPROGID) or (T.MODIFYPROGID IS NULL and S.MODIFYPROGID IS NULL)) and
		((T.LOCKID = S.LOCKID) or (T.LOCKID IS NULL and S.LOCKID IS NULL))
        )

  
  

  



&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_CHILD_ORD_INFO_STG1359001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 14 */
/* Create Index on flow table */


BEGIN  
   EXECUTE IMMEDIATE 'create index	RAX_APP_USER.I$_CHILD_ORD_INFO_STG_IDX1359001
on		RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001 (CHILD_ORDER_INFO_KEY)';  
 EXCEPTION  
    WHEN OTHERS THEN NULL;  
END;




&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* create check table */






-- create table RAX_APP_USER.SNP_CHECK_TAB
-- (
-- 	CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
-- 	FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
-- 	ERR_TYPE		VARCHAR2(1 CHAR) NULL,
-- 	ERR_MESS		VARCHAR2(250 CHAR) NULL ,
-- 	CHECK_DATE	DATE NULL,
-- 	ORIGIN		VARCHAR2(100 CHAR) NULL,
-- 	CONS_NAME	VARCHAR2(35 CHAR) NULL,
-- 	CONS_TYPE		VARCHAR2(2 CHAR) NULL,
-- 	ERR_COUNT		NUMBER(10) NULL
-- )
	

-- &


/*-----------------------------------------------*/
/* TASK No. 16 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_STAGE'
and	ORIGIN 		= '(1359001)ODS_Project.LOAD_OMS3_LT_CHILD_ORDER_INFO_STG_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 17 */
/* create error table */


BEGIN
   EXECUTE IMMEDIATE 
   'create table RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001
(
	ODI_ROW_ID 		UROWID,
	ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
	ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
	ODI_CHECK_DATE	DATE NULL, 
	CHILD_ORDER_INFO_KEY	CHAR(24) NULL,
	PARENT_ORDER_HEADER_KEY	CHAR(24) NULL,
	PARENT_ORDER_LINE_KEY	CHAR(24) NULL,
	STATUS	VARCHAR2(40) NULL,
	MULTIPLICITY	VARCHAR2(40) NULL,
	ROLE_INFO	VARCHAR2(40) NULL,
	GROUP_INFO	VARCHAR2(40) NULL,
	TOTAL_CHILD_ORDERS	NUMBER(5) NULL,
	SUBJECT_COUNT	NUMBER(5) NULL,
	ITEM_ID	VARCHAR2(40) NULL,
	AVAILABLE_DATE	DATE NULL,
	CREATETS	DATE NULL,
	MODIFYTS	DATE NULL,
	CREATEUSERID	VARCHAR2(40) NULL,
	MODIFYUSERID	VARCHAR2(40) NULL,
	CREATEPROGID	VARCHAR2(40) NULL,
	MODIFYPROGID	VARCHAR2(40) NULL,
	LOCKID	NUMBER(5) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL,
	ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
	ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
	ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
	ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
	ODI_SESS_NO		VARCHAR2(19 CHAR)
)';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -955 THEN  -- ORA-00955: name is already used by an existing object
         RAISE;
      ELSE
         DBMS_OUTPUT.PUT_LINE('Table RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001 already exists.');
      END IF;
END;



&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(1359001)ODS_Project.LOAD_OMS3_LT_CHILD_ORDER_INFO_STG_INT')


&


/*-----------------------------------------------*/
/* TASK No. 19 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	CHILD_ORDER_INFO_KEY,
	PARENT_ORDER_HEADER_KEY,
	PARENT_ORDER_LINE_KEY,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	ITEM_ID,
	AVAILABLE_DATE,
	CREATETS,
	MODIFYTS,
	CREATEUSERID,
	MODIFYUSERID,
	CREATEPROGID,
	MODIFYPROGID,
	LOCKID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column CHILD_ORDER_INFO_KEY cannot be null.',
	sysdate,
	'(1359001)ODS_Project.LOAD_OMS3_LT_CHILD_ORDER_INFO_STG_INT',
	'CHILD_ORDER_INFO_KEY',
	'NN',	
	CHILD_ORDER_INFO_KEY,
	PARENT_ORDER_HEADER_KEY,
	PARENT_ORDER_LINE_KEY,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	ITEM_ID,
	AVAILABLE_DATE,
	CREATETS,
	MODIFYTS,
	CREATEUSERID,
	MODIFYUSERID,
	CREATEPROGID,
	MODIFYPROGID,
	LOCKID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001
where	CHILD_ORDER_INFO_KEY is null



&


/*-----------------------------------------------*/
/* TASK No. 20 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */



BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001
on	RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001 (ODI_ROW_ID)';  
 EXCEPTION  
    WHEN OTHERS THEN NULL;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 21 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001 E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 22 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_STAGE',
	'CHILD_ORD_INFO_STG',
	'ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_STG1359001',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_CHILD_ORD_INFO_STG1359001 E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(1359001)ODS_Project.LOAD_OMS3_LT_CHILD_ORDER_INFO_STG_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 23 */
/* Merge Rows */

merge into	ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_STG T
using	RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001 S
on	(
		T.CHILD_ORDER_INFO_KEY=S.CHILD_ORDER_INFO_KEY
	)
when matched
then update set
	T.PARENT_ORDER_HEADER_KEY	= S.PARENT_ORDER_HEADER_KEY,
	T.PARENT_ORDER_LINE_KEY	= S.PARENT_ORDER_LINE_KEY,
	T.STATUS	= S.STATUS,
	T.MULTIPLICITY	= S.MULTIPLICITY,
	T.ROLE_INFO	= S.ROLE_INFO,
	T.GROUP_INFO	= S.GROUP_INFO,
	T.TOTAL_CHILD_ORDERS	= S.TOTAL_CHILD_ORDERS,
	T.SUBJECT_COUNT	= S.SUBJECT_COUNT,
	T.ITEM_ID	= S.ITEM_ID,
	T.AVAILABLE_DATE	= S.AVAILABLE_DATE,
	T.CREATETS	= S.CREATETS,
	T.MODIFYTS	= S.MODIFYTS,
	T.CREATEUSERID	= S.CREATEUSERID,
	T.MODIFYUSERID	= S.MODIFYUSERID,
	T.CREATEPROGID	= S.CREATEPROGID,
	T.MODIFYPROGID	= S.MODIFYPROGID,
	T.LOCKID	= S.LOCKID
	,                 T.ODS_MODIFY_DATE	= SYSDATE
when not matched
then insert
	(
	T.CHILD_ORDER_INFO_KEY,
	T.PARENT_ORDER_HEADER_KEY,
	T.PARENT_ORDER_LINE_KEY,
	T.STATUS,
	T.MULTIPLICITY,
	T.ROLE_INFO,
	T.GROUP_INFO,
	T.TOTAL_CHILD_ORDERS,
	T.SUBJECT_COUNT,
	T.ITEM_ID,
	T.AVAILABLE_DATE,
	T.CREATETS,
	T.MODIFYTS,
	T.CREATEUSERID,
	T.MODIFYUSERID,
	T.CREATEPROGID,
	T.MODIFYPROGID,
	T.LOCKID
	,                  T.ODS_CREATE_DATE,
	T.ODS_MODIFY_DATE
	)
values
	(
	S.CHILD_ORDER_INFO_KEY,
	S.PARENT_ORDER_HEADER_KEY,
	S.PARENT_ORDER_LINE_KEY,
	S.STATUS,
	S.MULTIPLICITY,
	S.ROLE_INFO,
	S.GROUP_INFO,
	S.TOTAL_CHILD_ORDERS,
	S.SUBJECT_COUNT,
	S.ITEM_ID,
	S.AVAILABLE_DATE,
	S.CREATETS,
	S.MODIFYTS,
	S.CREATEUSERID,
	S.MODIFYUSERID,
	S.CREATEPROGID,
	S.MODIFYPROGID,
	S.LOCKID
	,                  SYSDATE,
	SYSDATE
	)

&


/*-----------------------------------------------*/
/* TASK No. 24 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 25 */
/* Drop flow table */

drop table RAX_APP_USER.I$_CHILD_ORD_INFO_STG1359001


&


/*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */

drop table RAX_APP_USER.C$_0CHILD_ORD_INFO_STG 




&


/*-----------------------------------------------*/
/* TASK No. 26 */
/* Set vID */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 26 */




/*-----------------------------------------------*/
/* TASK No. 27 */
/* Drop flow table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_CHILD_ORDER_INFO_XR1360001';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

 

&


/*-----------------------------------------------*/
/* TASK No. 28 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_CHILD_ORDER_INFO_XR1360001
(
	CHILD_ORDER_INFO_OID	NUMBER NULL,
	CHILD_ORDER_INFO_KEY	VARCHAR2(24) NULL,
	PARENT_ORDER_HEADER_KEY	VARCHAR2(24) NULL,
	PARENT_ORDER_LINE_KEY	VARCHAR2(24) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL
	,IND_UPDATE		char(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 29 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 



insert into	RAX_APP_USER.I$_CHILD_ORDER_INFO_XR1360001
(
	CHILD_ORDER_INFO_KEY,
	PARENT_ORDER_HEADER_KEY,
	PARENT_ORDER_LINE_KEY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	IND_UPDATE
)
select 
CHILD_ORDER_INFO_KEY,
	PARENT_ORDER_HEADER_KEY,
	PARENT_ORDER_LINE_KEY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	IND_UPDATE
 from (


select 	 
	
	TRIM(OMS3_LT_CHILD_ORDER_INFO_STG.CHILD_ORDER_INFO_KEY) CHILD_ORDER_INFO_KEY,
	TRIM(OMS3_LT_CHILD_ORDER_INFO_STG.PARENT_ORDER_HEADER_KEY) PARENT_ORDER_HEADER_KEY,
	TRIM(OMS3_LT_CHILD_ORDER_INFO_STG.PARENT_ORDER_LINE_KEY) PARENT_ORDER_LINE_KEY,
	SYSDATE ODS_CREATE_DATE,
	SYSDATE ODS_MODIFY_DATE,

	'I' IND_UPDATE

from	ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_STG   OMS3_LT_CHILD_ORDER_INFO_STG, ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_XR   OMS_LT_CHILD_ORDER_INFO_XR
where	(1=1)
 And (OMS3_LT_CHILD_ORDER_INFO_STG.CHILD_ORDER_INFO_KEY=OMS_LT_CHILD_ORDER_INFO_XR.CHILD_ORDER_INFO_KEY(+)
AND OMS_LT_CHILD_ORDER_INFO_XR.CHILD_ORDER_INFO_KEY IS NULL)
And (OMS3_LT_CHILD_ORDER_INFO_STG.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)




) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_XR T
	where	T.CHILD_ORDER_INFO_KEY	= S.CHILD_ORDER_INFO_KEY 
		 and ((T.PARENT_ORDER_HEADER_KEY = S.PARENT_ORDER_HEADER_KEY) or (T.PARENT_ORDER_HEADER_KEY IS NULL and S.PARENT_ORDER_HEADER_KEY IS NULL)) and
		((T.PARENT_ORDER_LINE_KEY = S.PARENT_ORDER_LINE_KEY) or (T.PARENT_ORDER_LINE_KEY IS NULL and S.PARENT_ORDER_LINE_KEY IS NULL)) and
		((T.ODS_MODIFY_DATE = S.ODS_MODIFY_DATE) or (T.ODS_MODIFY_DATE IS NULL and S.ODS_MODIFY_DATE IS NULL))
        )

  
  

  



&


/*-----------------------------------------------*/
/* TASK No. 30 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_CHILD_ORDER_INFO_XR1360001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 31 */
/* Create Index on flow table */

BEGIN  
   EXECUTE IMMEDIATE 'create index	RAX_APP_USER.I$_CHILD_ORDER_INFO_XR_IDX1360001
on		RAX_APP_USER.I$_CHILD_ORDER_INFO_XR1360001 (CHILD_ORDER_INFO_KEY)';  
 EXCEPTION  
    WHEN OTHERS THEN NULL;  
END;

&


/*-----------------------------------------------*/
/* TASK No. 32 */
/* Merge Rows */

merge into	ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_XR T
using	RAX_APP_USER.I$_CHILD_ORDER_INFO_XR1360001 S
on	(
		T.CHILD_ORDER_INFO_KEY=S.CHILD_ORDER_INFO_KEY
	)
when matched
then update set
	T.PARENT_ORDER_HEADER_KEY	= S.PARENT_ORDER_HEADER_KEY,
	T.PARENT_ORDER_LINE_KEY	= S.PARENT_ORDER_LINE_KEY,
	T.ODS_MODIFY_DATE	= S.ODS_MODIFY_DATE
	
when not matched
then insert
	(
	T.CHILD_ORDER_INFO_KEY,
	T.PARENT_ORDER_HEADER_KEY,
	T.PARENT_ORDER_LINE_KEY,
	T.ODS_CREATE_DATE,
	T.ODS_MODIFY_DATE
	,     T.CHILD_ORDER_INFO_OID
	)
values
	(
	S.CHILD_ORDER_INFO_KEY,
	S.PARENT_ORDER_HEADER_KEY,
	S.PARENT_ORDER_LINE_KEY,
	S.ODS_CREATE_DATE,
	S.ODS_MODIFY_DATE
	,     ODS_STAGE.CHILD_ORDER_INFO_OID_SEQ.nextval
	)

&


/*-----------------------------------------------*/
/* TASK No. 33 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 34 */
/* Drop flow table */


drop table RAX_APP_USER.I$_CHILD_ORDER_INFO_XR1360001 



&


/*-----------------------------------------------*/
/* TASK No. 35 */
/* Set vID */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 35 */




/*-----------------------------------------------*/
/* TASK No. 36 */
/* Drop flow table */

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_CH_ORDR_INFO1361001';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;

 

&


/*-----------------------------------------------*/
/* TASK No. 37 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_CH_ORDR_INFO1361001
(
	CHILD_ORDER_INFO_OID	NUMBER NULL,
	ITEM_OID	NUMBER NULL,
	PARENT_ORDER_HEADER_OID	NUMBER NULL,
	PARENT_ORDER_LINE_OID	NUMBER NULL,
	STATUS	VARCHAR2(40) NULL,
	MULTIPLICITY	VARCHAR2(40) NULL,
	ROLE_INFO	VARCHAR2(40) NULL,
	GROUP_INFO	VARCHAR2(40) NULL,
	TOTAL_CHILD_ORDERS	NUMBER NULL,
	SUBJECT_COUNT	NUMBER NULL,
	AVAILABLE_DATE	DATE NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL,
	SOURCE_SYSTEM_OID	NUMBER NULL
	,IND_UPDATE		char(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 38 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 


  


insert into	RAX_APP_USER.I$_CH_ORDR_INFO1361001
(
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID,
	IND_UPDATE
)
select 
CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID,
	IND_UPDATE
 from (


select 	 
	
	OMS_LT_CHILD_ORDER_INFO_XR.CHILD_ORDER_INFO_OID CHILD_ORDER_INFO_OID,
	ITEM.ITEM_OID ITEM_OID,
	OMS_ORDER_HEADER_XR.ORDER_HEADER_OID PARENT_ORDER_HEADER_OID,
	OMS_ORDER_LINE_XR.ORDER_LINE_OID PARENT_ORDER_LINE_OID,
	OMS3_LT_CHILD_ORDER_INFO_STG.STATUS STATUS,
	OMS3_LT_CHILD_ORDER_INFO_STG.MULTIPLICITY MULTIPLICITY,
	OMS3_LT_CHILD_ORDER_INFO_STG.ROLE_INFO ROLE_INFO,
	OMS3_LT_CHILD_ORDER_INFO_STG.GROUP_INFO GROUP_INFO,
	OMS3_LT_CHILD_ORDER_INFO_STG.TOTAL_CHILD_ORDERS TOTAL_CHILD_ORDERS,
	OMS3_LT_CHILD_ORDER_INFO_STG.SUBJECT_COUNT SUBJECT_COUNT,
	OMS3_LT_CHILD_ORDER_INFO_STG.AVAILABLE_DATE AVAILABLE_DATE,
	SYSDATE ODS_CREATE_DATE,
	SYSDATE ODS_MODIFY_DATE,
	SOURCE_SYSTEM.SOURCE_SYSTEM_OID SOURCE_SYSTEM_OID,

	'I' IND_UPDATE

from	ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_STG   OMS3_LT_CHILD_ORDER_INFO_STG, ODS_OWN.SOURCE_SYSTEM   SOURCE_SYSTEM, ODS_STAGE.OMS3_LT_CHILD_ORDER_INFO_XR   OMS_LT_CHILD_ORDER_INFO_XR, ODS_OWN.ITEM   ITEM, ODS_STAGE.OMS_ORDER_HEADER_XR   OMS_ORDER_HEADER_XR, ODS_STAGE.OMS_ORDER_LINE_XR   OMS_ORDER_LINE_XR
where	(1=1)
 And (TRIM(OMS3_LT_CHILD_ORDER_INFO_STG.CHILD_ORDER_INFO_KEY)= OMS_LT_CHILD_ORDER_INFO_XR.CHILD_ORDER_INFO_KEY)
AND (OMS3_LT_CHILD_ORDER_INFO_STG.ITEM_ID=ITEM.ITEM_ID)
AND (TRIM(OMS3_LT_CHILD_ORDER_INFO_STG.PARENT_ORDER_HEADER_KEY)=OMS_ORDER_HEADER_XR.ORDER_HEADER_KEY)
AND (TRIM(OMS3_LT_CHILD_ORDER_INFO_STG.PARENT_ORDER_LINE_KEY)= OMS_ORDER_LINE_XR.ORDER_LINE_KEY)
And (SOURCE_SYSTEM.SOURCE_SYSTEM_SHORT_NAME = 'OMS')
And (OMS3_LT_CHILD_ORDER_INFO_STG.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap)




) S
where NOT EXISTS 
	( select 1 from ODS_OWN.CHILD_ORDER_INFO T
	where	T.CHILD_ORDER_INFO_OID	= S.CHILD_ORDER_INFO_OID 
		 and ((T.ITEM_OID = S.ITEM_OID) or (T.ITEM_OID IS NULL and S.ITEM_OID IS NULL)) and
		((T.PARENT_ORDER_HEADER_OID = S.PARENT_ORDER_HEADER_OID) or (T.PARENT_ORDER_HEADER_OID IS NULL and S.PARENT_ORDER_HEADER_OID IS NULL)) and
		((T.PARENT_ORDER_LINE_OID = S.PARENT_ORDER_LINE_OID) or (T.PARENT_ORDER_LINE_OID IS NULL and S.PARENT_ORDER_LINE_OID IS NULL)) and
		((T.STATUS = S.STATUS) or (T.STATUS IS NULL and S.STATUS IS NULL)) and
		((T.MULTIPLICITY = S.MULTIPLICITY) or (T.MULTIPLICITY IS NULL and S.MULTIPLICITY IS NULL)) and
		((T.ROLE_INFO = S.ROLE_INFO) or (T.ROLE_INFO IS NULL and S.ROLE_INFO IS NULL)) and
		((T.GROUP_INFO = S.GROUP_INFO) or (T.GROUP_INFO IS NULL and S.GROUP_INFO IS NULL)) and
		((T.TOTAL_CHILD_ORDERS = S.TOTAL_CHILD_ORDERS) or (T.TOTAL_CHILD_ORDERS IS NULL and S.TOTAL_CHILD_ORDERS IS NULL)) and
		((T.SUBJECT_COUNT = S.SUBJECT_COUNT) or (T.SUBJECT_COUNT IS NULL and S.SUBJECT_COUNT IS NULL)) and
		((T.AVAILABLE_DATE = S.AVAILABLE_DATE) or (T.AVAILABLE_DATE IS NULL and S.AVAILABLE_DATE IS NULL)) and
		((T.ODS_MODIFY_DATE = S.ODS_MODIFY_DATE) or (T.ODS_MODIFY_DATE IS NULL and S.ODS_MODIFY_DATE IS NULL)) and
		((T.SOURCE_SYSTEM_OID = S.SOURCE_SYSTEM_OID) or (T.SOURCE_SYSTEM_OID IS NULL and S.SOURCE_SYSTEM_OID IS NULL))
        )

  
  

  



&


/*-----------------------------------------------*/
/* TASK No. 39 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_CH_ORDR_INFO1361001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 40 */
/* Create Index on flow table */
BEGIN  
   EXECUTE IMMEDIATE 'create index	RAX_APP_USER.I$_CH_ORDR_INFO_IDX1361001
on		RAX_APP_USER.I$_CH_ORDR_INFO1361001 (CHILD_ORDER_INFO_OID)';  
 EXCEPTION  
    WHEN OTHERS THEN NULL;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 41 */
/* create check table */


-- create table RAX_APP_USER.SNP_CHECK_TAB
-- (
-- 	CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
-- 	FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
-- 	ERR_TYPE		VARCHAR2(1 CHAR) NULL,
-- 	ERR_MESS		VARCHAR2(250 CHAR) NULL ,
-- 	CHECK_DATE	DATE NULL,
-- 	ORIGIN		VARCHAR2(100 CHAR) NULL,
-- 	CONS_NAME	VARCHAR2(35 CHAR) NULL,
-- 	CONS_TYPE		VARCHAR2(2 CHAR) NULL,
-- 	ERR_COUNT		NUMBER(10) NULL
-- )
	

-- &


/*-----------------------------------------------*/
/* TASK No. 42 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_OWN'
and	ORIGIN 		= '(1361001)ODS_Project.LOAD_CHILD_ORDER_INFO_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 43 */
/* create error table */


BEGIN
   EXECUTE IMMEDIATE 
   'create table RAX_APP_USER.E$_CH_ORDR_INFO1361001
		(
			ODI_ROW_ID 		UROWID,
			ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
			ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
			ODI_CHECK_DATE	DATE NULL, 
			CHILD_ORDER_INFO_OID	NUMBER NULL,
			ITEM_OID	NUMBER NULL,
			PARENT_ORDER_HEADER_OID	NUMBER NULL,
			PARENT_ORDER_LINE_OID	NUMBER NULL,
			STATUS	VARCHAR2(40) NULL,
			MULTIPLICITY	VARCHAR2(40) NULL,
			ROLE_INFO	VARCHAR2(40) NULL,
			GROUP_INFO	VARCHAR2(40) NULL,
			TOTAL_CHILD_ORDERS	NUMBER NULL,
			SUBJECT_COUNT	NUMBER NULL,
			AVAILABLE_DATE	DATE NULL,
			ODS_CREATE_DATE	DATE NULL,
			ODS_MODIFY_DATE	DATE NULL,
			SOURCE_SYSTEM_OID	NUMBER NULL,
			ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
			ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
			ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
			ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
			ODI_SESS_NO		VARCHAR2(19 CHAR)
		)';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -955 THEN  -- ORA-00955: name is already used by an existing object
         RAISE;
      ELSE
         DBMS_OUTPUT.PUT_LINE('Table RAX_APP_USER.E$_CH_ORDR_INFO1361001 already exists.');
      END IF;
END;





&


/*-----------------------------------------------*/
/* TASK No. 44 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_CH_ORDR_INFO1361001
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(1361001)ODS_Project.LOAD_CHILD_ORDER_INFO_INT')


&


/*-----------------------------------------------*/
/* TASK No. 45 */
/* Create index on PK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */

BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.I$_CH_ORDR_INFO1361001
on	RAX_APP_USER.I$_CH_ORDR_INFO1361001 (CHILD_ORDER_INFO_OID)';  
 EXCEPTION  
    WHEN OTHERS THEN NULL;  
END;





&


/*-----------------------------------------------*/
/* TASK No. 46 */
/* insert PK errors */

DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                     VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_CH_ORDR_INFO' INTO CheckTable FROM DUAL;
               SELECT 'ODS_OWN.CHILD_ORDER_INFO' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '1361001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_CH_ORDR_INFO1361001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID
)
select	SYS_GUID(),
	30209878200, 
	rowid,
	''F'', 
	''ODI-15064: The primary key CHILD_ORDER_INFO_PK is not unique.'',
	''(1361001)ODS_Project.LOAD_CHILD_ORDER_INFO_INT'',
	sysdate,
	''CHILD_ORDER_INFO_PK'',
	''PK'',	
	CH_ORDR_INFO.CHILD_ORDER_INFO_OID,
	CH_ORDR_INFO.ITEM_OID,
	CH_ORDR_INFO.PARENT_ORDER_HEADER_OID,
	CH_ORDR_INFO.PARENT_ORDER_LINE_OID,
	CH_ORDR_INFO.STATUS,
	CH_ORDR_INFO.MULTIPLICITY,
	CH_ORDR_INFO.ROLE_INFO,
	CH_ORDR_INFO.GROUP_INFO,
	CH_ORDR_INFO.TOTAL_CHILD_ORDERS,
	CH_ORDR_INFO.SUBJECT_COUNT,
	CH_ORDR_INFO.AVAILABLE_DATE,
	CH_ORDR_INFO.ODS_CREATE_DATE,
	CH_ORDR_INFO.ODS_MODIFY_DATE,
	CH_ORDR_INFO.SOURCE_SYSTEM_OID
from	'
 || VariableCheckTable || 
' CH_ORDR_INFO 
where	exists  (
		select	SUB1.CHILD_ORDER_INFO_OID
		from 	' 
|| VariableCheckTable ||
'  SUB1
		where 	SUB1.CHILD_ORDER_INFO_OID=CH_ORDR_INFO.CHILD_ORDER_INFO_OID
		group by 	SUB1.CHILD_ORDER_INFO_OID
		having 	count(1) > 1
		)
';

END;


&


/*-----------------------------------------------*/
/* TASK No. 47 */
/* insert FK errors */

DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_CH_ORDR_INFO' INTO CheckTable FROM DUAL;
               SELECT 'ODS_OWN.CHILD_ORDER_INFO' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '1361001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_CH_ORDR_INFO1361001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID
)
select	SYS_GUID(),
	30209878200, 
	rowid,
	''F'', 
	''ODI-15065: Join error (CO_ITEM_OID) between the table CH_ORDR_INFO and the table ITEM.'',
	sysdate,
	''(1361001)ODS_Project.LOAD_CHILD_ORDER_INFO_INT'',
	''CO_ITEM_OID'',
	''FK'',	
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID

from	'
 || VariableCheckTable || 
' CH_ORDR_INFO 
where 	(
		CH_ORDR_INFO.ITEM_OID 
	) not in 	(
		select 	ITEM_OID
		from 	ODS_OWN.ITEM
		)
and	(
		CH_ORDR_INFO.ITEM_OID is not null 
	)

';

END;

/*  Checked Datastore  RAX_APP_USER.I$_CH_ORDR_INFO  */
/*  Integration Datastore =RAX_APP_USER.I$_CH_ORDR_INFO   */
/*  Target Datastore =ODS_OWN.CHILD_ORDER_INFO */


&


/*-----------------------------------------------*/
/* TASK No. 48 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_CH_ORDR_INFO1361001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column CHILD_ORDER_INFO_OID cannot be null.',
	sysdate,
	'(1361001)ODS_Project.LOAD_CHILD_ORDER_INFO_INT',
	'CHILD_ORDER_INFO_OID',
	'NN',	
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID
from	RAX_APP_USER.I$_CH_ORDR_INFO1361001
where	CHILD_ORDER_INFO_OID is null



&


/*-----------------------------------------------*/
/* TASK No. 49 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_CH_ORDR_INFO1361001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ITEM_OID cannot be null.',
	sysdate,
	'(1361001)ODS_Project.LOAD_CHILD_ORDER_INFO_INT',
	'ITEM_OID',
	'NN',	
	CHILD_ORDER_INFO_OID,
	ITEM_OID,
	PARENT_ORDER_HEADER_OID,
	PARENT_ORDER_LINE_OID,
	STATUS,
	MULTIPLICITY,
	ROLE_INFO,
	GROUP_INFO,
	TOTAL_CHILD_ORDERS,
	SUBJECT_COUNT,
	AVAILABLE_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	SOURCE_SYSTEM_OID
from	RAX_APP_USER.I$_CH_ORDR_INFO1361001
where	ITEM_OID is null



&


/*-----------------------------------------------*/
/* TASK No. 50 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */

-- BEGIN  
--    EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_CH_ORDR_INFO1361001
-- on	RAX_APP_USER.E$_CH_ORDR_INFO1361001 (ODI_ROW_ID)';  
-- EXCEPTION  
--    WHEN OTHERS THEN  
--       IF SQLCODE != -972 THEN  
--          RAISE;  
--       END IF;  
-- END;

BEGIN  
   EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_CH_ORDR_INFO1361001
on	RAX_APP_USER.E$_CH_ORDR_INFO1361001 (ODI_ROW_ID)';  
 EXCEPTION  
    WHEN OTHERS THEN NULL;  
END;



&


/*-----------------------------------------------*/
/* TASK No. 51 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_CH_ORDR_INFO1361001  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_CH_ORDR_INFO1361001 E
		where ODI_SESS_NO = 30209878200
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 52 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_OWN',
	'CH_ORDR_INFO',
	'ODS_OWN.CHILD_ORDER_INFO1361001',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_CH_ORDR_INFO1361001 E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(1361001)ODS_Project.LOAD_CHILD_ORDER_INFO_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 53 */
/* Merge Rows */

merge into	ODS_OWN.CHILD_ORDER_INFO T
using	RAX_APP_USER.I$_CH_ORDR_INFO1361001 S
on	(
		T.CHILD_ORDER_INFO_OID=S.CHILD_ORDER_INFO_OID
	)
when matched
then update set
	T.ITEM_OID	= S.ITEM_OID,
	T.PARENT_ORDER_HEADER_OID	= S.PARENT_ORDER_HEADER_OID,
	T.PARENT_ORDER_LINE_OID	= S.PARENT_ORDER_LINE_OID,
	T.STATUS	= S.STATUS,
	T.MULTIPLICITY	= S.MULTIPLICITY,
	T.ROLE_INFO	= S.ROLE_INFO,
	T.GROUP_INFO	= S.GROUP_INFO,
	T.TOTAL_CHILD_ORDERS	= S.TOTAL_CHILD_ORDERS,
	T.SUBJECT_COUNT	= S.SUBJECT_COUNT,
	T.AVAILABLE_DATE	= S.AVAILABLE_DATE,
	T.ODS_MODIFY_DATE	= S.ODS_MODIFY_DATE,
	T.SOURCE_SYSTEM_OID	= S.SOURCE_SYSTEM_OID
	
when not matched
then insert
	(
	T.CHILD_ORDER_INFO_OID,
	T.ITEM_OID,
	T.PARENT_ORDER_HEADER_OID,
	T.PARENT_ORDER_LINE_OID,
	T.STATUS,
	T.MULTIPLICITY,
	T.ROLE_INFO,
	T.GROUP_INFO,
	T.TOTAL_CHILD_ORDERS,
	T.SUBJECT_COUNT,
	T.AVAILABLE_DATE,
	T.ODS_CREATE_DATE,
	T.ODS_MODIFY_DATE,
	T.SOURCE_SYSTEM_OID
	
	)
values
	(
	S.CHILD_ORDER_INFO_OID,
	S.ITEM_OID,
	S.PARENT_ORDER_HEADER_OID,
	S.PARENT_ORDER_LINE_OID,
	S.STATUS,
	S.MULTIPLICITY,
	S.ROLE_INFO,
	S.GROUP_INFO,
	S.TOTAL_CHILD_ORDERS,
	S.SUBJECT_COUNT,
	S.AVAILABLE_DATE,
	S.ODS_CREATE_DATE,
	S.ODS_MODIFY_DATE,
	S.SOURCE_SYSTEM_OID
	
	)

&


/*-----------------------------------------------*/
/* TASK No. 54 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 55 */
/* Drop flow table */


drop table RAX_APP_USER.I$_CH_ORDR_INFO1361001 



&


/*-----------------------------------------------*/
/* TASK No. 56 */
/* Update CDC Load Status */

UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name

&


/*-----------------------------------------------*/
/* TASK No. 57 */
/* Insert CDC Audit Record */

INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_CHILD_ORDER_INFO_PKG',
'002',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          ),
:v_cdc_oms_overlap,
SYSDATE)

&


/*-----------------------------------------------*/
