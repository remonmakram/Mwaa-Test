/* TASK No. 1 */
/* Drop work table */
/*-----------------------------------------------*/
/* TASK No. 2 */
/* Create work table */
/*-----------------------------------------------*/
/* TASK No. 3 */
/* Load data */
/* SOURCE CODE */
/* drop table RAX_APP_USER.C$_0FOW_FRNG_MDL_STG */
/* create table RAX_APP_USER.C$_0FOW_FRNG_MDL_STG
(
	C1_ID	NUMBER(19) NULL,
	C2_VERSION	NUMBER(19) NULL,
	C3_ACTIVE	NUMBER(1) NULL,
	C4_COMMISSION_MODEL_ID	NUMBER(19) NULL,
	C5_CREATED_BY	VARCHAR2(255) NULL,
	C6_DATE_CREATED	TIMESTAMP(6) NULL,
	C7_ENVELOPE_ID	VARCHAR2(255) NULL,
	C8_FLYER_ID	VARCHAR2(255) NULL,
	C9_INSERTS	VARCHAR2(255) NULL,
	C10_LAST_UPDATED	TIMESTAMP(6) NULL,
	C11_NAME	VARCHAR2(255) NULL,
	C12_PRICE_PROGRAM_NAME	VARCHAR2(255) NULL,
	C13_TERRITORY	VARCHAR2(255) NULL,
	C14_UPDATED_BY	VARCHAR2(255) NULL,
	C15_VISUAL_MERCH_ID	VARCHAR2(255) NULL
)
NOLOGGING */
/* select	
	OFFERING_MODEL.ID	   C1_ID,
	OFFERING_MODEL.VERSION	   C2_VERSION,
	OFFERING_MODEL.ACTIVE	   C3_ACTIVE,
	OFFERING_MODEL.COMMISSION_MODEL_ID	   C4_COMMISSION_MODEL_ID,
	OFFERING_MODEL.CREATED_BY	   C5_CREATED_BY,
	OFFERING_MODEL.DATE_CREATED	   C6_DATE_CREATED,
	OFFERING_MODEL.ENVELOPE_ID	   C7_ENVELOPE_ID,
	OFFERING_MODEL.FLYER_ID	   C8_FLYER_ID,
	OFFERING_MODEL.INSERTS	   C9_INSERTS,
	OFFERING_MODEL.LAST_UPDATED	   C10_LAST_UPDATED,
	OFFERING_MODEL.NAME	   C11_NAME,
	OFFERING_MODEL.PRICE_PROGRAM_NAME	   C12_PRICE_PROGRAM_NAME,
	OFFERING_MODEL.TERRITORY	   C13_TERRITORY,
	OFFERING_MODEL.UPDATED_BY	   C14_UPDATED_BY,
	OFFERING_MODEL.VISUAL_MERCH_ID	   C15_VISUAL_MERCH_ID
from	FOW_OWN.OFFERING_MODEL   OFFERING_MODEL
where	(1=1)
And (OFFERING_MODEL.LAST_UPDATED >=   ( TO_DATE(SUBSTR(:v_cdc_ld_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  - :v_cdc_oms_overlap)) */
/* insert into RAX_APP_USER.C$_0FOW_FRNG_MDL_STG
(
	C1_ID,
	C2_VERSION,
	C3_ACTIVE,
	C4_COMMISSION_MODEL_ID,
	C5_CREATED_BY,
	C6_DATE_CREATED,
	C7_ENVELOPE_ID,
	C8_FLYER_ID,
	C9_INSERTS,
	C10_LAST_UPDATED,
	C11_NAME,
	C12_PRICE_PROGRAM_NAME,
	C13_TERRITORY,
	C14_UPDATED_BY,
	C15_VISUAL_MERCH_ID
)
values
(
	:C1_ID,
	:C2_VERSION,
	:C3_ACTIVE,
	:C4_COMMISSION_MODEL_ID,
	:C5_CREATED_BY,
	:C6_DATE_CREATED,
	:C7_ENVELOPE_ID,
	:C8_FLYER_ID,
	:C9_INSERTS,
	:C10_LAST_UPDATED,
	:C11_NAME,
	:C12_PRICE_PROGRAM_NAME,
	:C13_TERRITORY,
	:C14_UPDATED_BY,
	:C15_VISUAL_MERCH_ID
) */
/* TARGET CODE */
/*-----------------------------------------------*/
/* TASK No. 4 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0FOW_FRNG_MDL_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;

& /*-----------------------------------------------*/
/* TASK No. 6 */
/* Set vID */
/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 6 */
/*-----------------------------------------------*/
/* TASK No. 7 */
/* Drop flow table */


 /* drop table RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001 */ 


BEGIN
    EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 8 */
/* Create flow table I$ */



create table RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001
(
	ID	NUMBER(19) NULL,
	VERSION	NUMBER(19) NULL,
	ACTIVE	NUMBER(1) NULL,
	COMMISSION_MODEL_ID	NUMBER(19) NULL,
	CREATED_BY	VARCHAR2(255) NULL,
	DATE_CREATED	TIMESTAMP(6) NULL,
	ENVELOPE_ID	VARCHAR2(255) NULL,
	FLYER_ID	VARCHAR2(255) NULL,
	INSERTS	VARCHAR2(255) NULL,
	LAST_UPDATED	TIMESTAMP(6) NULL,
	NAME	VARCHAR2(255) NULL,
	PRICE_PROGRAM_NAME	VARCHAR2(255) NULL,
	TERRITORY	VARCHAR2(255) NULL,
	UPDATED_BY	VARCHAR2(255) NULL,
	VISUAL_MERCH_ID	VARCHAR2(255) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL
	,IND_UPDATE		char(1)
)
NOLOGGING

& /*-----------------------------------------------*/
/* TASK No. 9 */
/* Insert flow into I$ table */
/* DETECTION_STRATEGY = NOT_EXISTS */



insert into	RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001
(
	ID,
	VERSION,
	ACTIVE,
	COMMISSION_MODEL_ID,
	CREATED_BY,
	DATE_CREATED,
	ENVELOPE_ID,
	FLYER_ID,
	INSERTS,
	LAST_UPDATED,
	NAME,
	PRICE_PROGRAM_NAME,
	TERRITORY,
	UPDATED_BY,
	VISUAL_MERCH_ID,
	IND_UPDATE
)
select 
ID,
	VERSION,
	ACTIVE,
	COMMISSION_MODEL_ID,
	CREATED_BY,
	DATE_CREATED,
	ENVELOPE_ID,
	FLYER_ID,
	INSERTS,
	LAST_UPDATED,
	NAME,
	PRICE_PROGRAM_NAME,
	TERRITORY,
	UPDATED_BY,
	VISUAL_MERCH_ID,
	IND_UPDATE
 from (


select 	 
	
	C1_ID ID,
	C2_VERSION VERSION,
	C3_ACTIVE ACTIVE,
	C4_COMMISSION_MODEL_ID COMMISSION_MODEL_ID,
	C5_CREATED_BY CREATED_BY,
	C6_DATE_CREATED DATE_CREATED,
	C7_ENVELOPE_ID ENVELOPE_ID,
	C8_FLYER_ID FLYER_ID,
	C9_INSERTS INSERTS,
	C10_LAST_UPDATED LAST_UPDATED,
	C11_NAME NAME,
	C12_PRICE_PROGRAM_NAME PRICE_PROGRAM_NAME,
	C13_TERRITORY TERRITORY,
	C14_UPDATED_BY UPDATED_BY,
	C15_VISUAL_MERCH_ID VISUAL_MERCH_ID,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0FOW_FRNG_MDL_STG
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.FOW_OFFERING_MODEL_STG T
	where	T.ID	= S.ID 
		 and ((T.VERSION = S.VERSION) or (T.VERSION IS NULL and S.VERSION IS NULL)) and
		((T.ACTIVE = S.ACTIVE) or (T.ACTIVE IS NULL and S.ACTIVE IS NULL)) and
		((T.COMMISSION_MODEL_ID = S.COMMISSION_MODEL_ID) or (T.COMMISSION_MODEL_ID IS NULL and S.COMMISSION_MODEL_ID IS NULL)) and
		((T.CREATED_BY = S.CREATED_BY) or (T.CREATED_BY IS NULL and S.CREATED_BY IS NULL)) and
		((T.DATE_CREATED = S.DATE_CREATED) or (T.DATE_CREATED IS NULL and S.DATE_CREATED IS NULL)) and
		((T.ENVELOPE_ID = S.ENVELOPE_ID) or (T.ENVELOPE_ID IS NULL and S.ENVELOPE_ID IS NULL)) and
		((T.FLYER_ID = S.FLYER_ID) or (T.FLYER_ID IS NULL and S.FLYER_ID IS NULL)) and
		((T.INSERTS = S.INSERTS) or (T.INSERTS IS NULL and S.INSERTS IS NULL)) and
		((T.LAST_UPDATED = S.LAST_UPDATED) or (T.LAST_UPDATED IS NULL and S.LAST_UPDATED IS NULL)) and
		((T.NAME = S.NAME) or (T.NAME IS NULL and S.NAME IS NULL)) and
		((T.PRICE_PROGRAM_NAME = S.PRICE_PROGRAM_NAME) or (T.PRICE_PROGRAM_NAME IS NULL and S.PRICE_PROGRAM_NAME IS NULL)) and
		((T.TERRITORY = S.TERRITORY) or (T.TERRITORY IS NULL and S.TERRITORY IS NULL)) and
		((T.UPDATED_BY = S.UPDATED_BY) or (T.UPDATED_BY IS NULL and S.UPDATED_BY IS NULL)) and
		((T.VISUAL_MERCH_ID = S.VISUAL_MERCH_ID) or (T.VISUAL_MERCH_ID IS NULL and S.VISUAL_MERCH_ID IS NULL))
        )

& /*-----------------------------------------------*/
/* TASK No. 10 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_FOW_FRNG_MDL_STG913001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;

& /*-----------------------------------------------*/
/* TASK No. 11 */
/* Create Index on flow table */



create index	RAX_APP_USER.I$_FOW_FRNG_MDL_STG_IDX913001
on		RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001 (ID)
NOLOGGING

& /*-----------------------------------------------*/
/* TASK No. 12 */
/* Merge Rows */



merge into	ODS_STAGE.FOW_OFFERING_MODEL_STG T
using	RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001 S
on	(
		T.ID=S.ID
	)
when matched
then update set
	T.VERSION	= S.VERSION,
	T.ACTIVE	= S.ACTIVE,
	T.COMMISSION_MODEL_ID	= S.COMMISSION_MODEL_ID,
	T.CREATED_BY	= S.CREATED_BY,
	T.DATE_CREATED	= S.DATE_CREATED,
	T.ENVELOPE_ID	= S.ENVELOPE_ID,
	T.FLYER_ID	= S.FLYER_ID,
	T.INSERTS	= S.INSERTS,
	T.LAST_UPDATED	= S.LAST_UPDATED,
	T.NAME	= S.NAME,
	T.PRICE_PROGRAM_NAME	= S.PRICE_PROGRAM_NAME,
	T.TERRITORY	= S.TERRITORY,
	T.UPDATED_BY	= S.UPDATED_BY,
	T.VISUAL_MERCH_ID	= S.VISUAL_MERCH_ID
	,              T.ODS_MODIFY_DATE	= SYSDATE
when not matched
then insert
	(
	T.ID,
	T.VERSION,
	T.ACTIVE,
	T.COMMISSION_MODEL_ID,
	T.CREATED_BY,
	T.DATE_CREATED,
	T.ENVELOPE_ID,
	T.FLYER_ID,
	T.INSERTS,
	T.LAST_UPDATED,
	T.NAME,
	T.PRICE_PROGRAM_NAME,
	T.TERRITORY,
	T.UPDATED_BY,
	T.VISUAL_MERCH_ID
	,               T.ODS_CREATE_DATE,
	T.ODS_MODIFY_DATE
	)
values
	(
	S.ID,
	S.VERSION,
	S.ACTIVE,
	S.COMMISSION_MODEL_ID,
	S.CREATED_BY,
	S.DATE_CREATED,
	S.ENVELOPE_ID,
	S.FLYER_ID,
	S.INSERTS,
	S.LAST_UPDATED,
	S.NAME,
	S.PRICE_PROGRAM_NAME,
	S.TERRITORY,
	S.UPDATED_BY,
	S.VISUAL_MERCH_ID
	,               SYSDATE,
	SYSDATE
	)

& /*-----------------------------------------------*/
/* TASK No. 13 */
/* Commit transaction */
/*commit*/
/*-----------------------------------------------*/
/* TASK No. 14 */
/* Drop flow table */


 /* drop table RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001 */ 


BEGIN
    EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_FOW_FRNG_MDL_STG913001';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 1000005 */
/* Drop work table */


 /* drop table RAX_APP_USER.C$_0FOW_FRNG_MDL_STG */ 


BEGIN
    EXECUTE IMMEDIATE 'drop table RAX_APP_USER.C$_0FOW_FRNG_MDL_STG';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/





&