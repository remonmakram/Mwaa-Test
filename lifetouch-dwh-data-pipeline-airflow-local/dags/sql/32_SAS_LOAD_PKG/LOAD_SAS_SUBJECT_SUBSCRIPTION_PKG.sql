/* TASK No. 1 */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 1 */




/*-----------------------------------------------*/
/* TASK No. 2 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 2 */




/*-----------------------------------------------*/
/* TASK No. 3 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 3 */




/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0SAS_SUB_SUBSCR_STG purge

-- &


/*-----------------------------------------------*/
/* TASK No. 5 */
/* Create work table */

-- create table RAX_APP_USER.C$_0SAS_SUB_SUBSCR_STG
-- (
-- 	C1_SUBJECT_SUBSCRIPTION_ID	NUMBER NULL,
-- 	C2_SUBJECT_ID	NUMBER NULL,
-- 	C3_SUBSCRIPTION	VARCHAR2(255) NULL,
-- 	C4_SUBSCRIPTION_TYPE_ID	NUMBER NULL,
-- 	C5_SUBSCRIPTION_OPT_IN	VARCHAR2(1) NULL,
-- 	C6_SUBSCRIPTION_OPT_IN_TEXT	VARCHAR2(255) NULL,
-- 	C7_SUBSCRIPTION_RELATIONSHIP_I	NUMBER NULL,
-- 	C8_SUBSCRIPTION_ORDER	NUMBER NULL,
-- 	C9_SOURCE_IP_ADDRESS	VARCHAR2(15) NULL,
-- 	C10_AUDIT_CREATE_DATE	TIMESTAMP(6) NULL,
-- 	C11_AUDIT_CREATED_BY	VARCHAR2(255) NULL,
-- 	C12_AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
-- 	C13_AUDIT_MODIFY_DATE	TIMESTAMP(6) NULL
-- )
-- NOLOGGING

-- &


/*-----------------------------------------------*/
/* TASK No. 6 */
/* Load data */

/* SOURCE CODE */


-- select	
-- 	SUBSCRIPTION.SUBJECT_SUBSCRIPTION_ID	   C1_SUBJECT_SUBSCRIPTION_ID,
-- 	SUBSCRIPTION.SUBJECT_ID	   C2_SUBJECT_ID,
-- 	SUBSCRIPTION.SUBSCRIPTION	   C3_SUBSCRIPTION,
-- 	SUBSCRIPTION.SUBSCRIPTION_TYPE_ID	   C4_SUBSCRIPTION_TYPE_ID,
-- 	SUBSCRIPTION.SUBSCRIPTION_OPT_IN	   C5_SUBSCRIPTION_OPT_IN,
-- 	SUBSCRIPTION.SUBSCRIPTION_OPT_IN_TEXT	   C6_SUBSCRIPTION_OPT_IN_TEXT,
-- 	SUBSCRIPTION.SUBSCRIPTION_RELATIONSHIP_ID	   C7_SUBSCRIPTION_RELATIONSHIP_I,
-- 	SUBSCRIPTION.SUBSCRIPTION_ORDER	   C8_SUBSCRIPTION_ORDER,
-- 	SUBSCRIPTION.SOURCE_IP_ADDRESS	   C9_SOURCE_IP_ADDRESS,
-- 	SUBSCRIPTION.AUDIT_CREATE_DATE	   C10_AUDIT_CREATE_DATE,
-- 	SUBSCRIPTION.AUDIT_CREATED_BY	   C11_AUDIT_CREATED_BY,
-- 	SUBSCRIPTION.AUDIT_MODIFIED_BY	   C12_AUDIT_MODIFIED_BY,
-- 	SUBSCRIPTION.AUDIT_MODIFY_DATE	   C13_AUDIT_MODIFY_DATE
-- from	SAS_SIT_OWN.SUBJECT_SUBSCRIPTION   SUBSCRIPTION
-- where	(1=1)
-- And (SUBSCRIPTION.AUDIT_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
-- )







-- &

/* TARGET CODE */
-- insert /*+ append */ into RAX_APP_USER.C$_0SAS_SUB_SUBSCR_STG
-- (
-- 	C1_SUBJECT_SUBSCRIPTION_ID,
-- 	C2_SUBJECT_ID,
-- 	C3_SUBSCRIPTION,
-- 	C4_SUBSCRIPTION_TYPE_ID,
-- 	C5_SUBSCRIPTION_OPT_IN,
-- 	C6_SUBSCRIPTION_OPT_IN_TEXT,
-- 	C7_SUBSCRIPTION_RELATIONSHIP_I,
-- 	C8_SUBSCRIPTION_ORDER,
-- 	C9_SOURCE_IP_ADDRESS,
-- 	C10_AUDIT_CREATE_DATE,
-- 	C11_AUDIT_CREATED_BY,
-- 	C12_AUDIT_MODIFIED_BY,
-- 	C13_AUDIT_MODIFY_DATE
-- )
-- values
-- (
-- 	:C1_SUBJECT_SUBSCRIPTION_ID,
-- 	:C2_SUBJECT_ID,
-- 	:C3_SUBSCRIPTION,
-- 	:C4_SUBSCRIPTION_TYPE_ID,
-- 	:C5_SUBSCRIPTION_OPT_IN,
-- 	:C6_SUBSCRIPTION_OPT_IN_TEXT,
-- 	:C7_SUBSCRIPTION_RELATIONSHIP_I,
-- 	:C8_SUBSCRIPTION_ORDER,
-- 	:C9_SOURCE_IP_ADDRESS,
-- 	:C10_AUDIT_CREATE_DATE,
-- 	:C11_AUDIT_CREATED_BY,
-- 	:C12_AUDIT_MODIFIED_BY,
-- 	:C13_AUDIT_MODIFY_DATE
-- )

-- &


/*-----------------------------------------------*/
/* TASK No. 7 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0SAS_SUB_SUBSCR_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Set vID */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 9 */




/*-----------------------------------------------*/
/* TASK No. 10 */
/* Drop flow table */

-- drop table RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001

BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 11 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001
(
	SUBJECT_SUBSCRIPTION_ID	NUMBER NULL,
	SUBJECT_ID	NUMBER NULL,
	SUBSCRIPTION	VARCHAR2(255) NULL,
	SUBSCRIPTION_TYPE_ID	NUMBER NULL,
	SUBSCRIPTION_OPT_IN	VARCHAR2(1) NULL,
	SUBSCRIPTION_OPT_IN_TEXT	VARCHAR2(255) NULL,
	SUBSCRIPTION_RELATIONSHIP_ID	NUMBER NULL,
	SUBSCRIPTION_ORDER	NUMBER NULL,
	SOURCE_IP_ADDRESS	VARCHAR2(15) NULL,
	AUDIT_CREATE_DATE	TIMESTAMP(6) NULL,
	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFY_DATE	TIMESTAMP(6) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL
	,IND_UPDATE		char(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 


  


insert into	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001
(
	SUBJECT_SUBSCRIPTION_ID,
	SUBJECT_ID,
	SUBSCRIPTION,
	SUBSCRIPTION_TYPE_ID,
	SUBSCRIPTION_OPT_IN,
	SUBSCRIPTION_OPT_IN_TEXT,
	SUBSCRIPTION_RELATIONSHIP_ID,
	SUBSCRIPTION_ORDER,
	SOURCE_IP_ADDRESS,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	IND_UPDATE
)
select 
SUBJECT_SUBSCRIPTION_ID,
	SUBJECT_ID,
	SUBSCRIPTION,
	SUBSCRIPTION_TYPE_ID,
	SUBSCRIPTION_OPT_IN,
	SUBSCRIPTION_OPT_IN_TEXT,
	SUBSCRIPTION_RELATIONSHIP_ID,
	SUBSCRIPTION_ORDER,
	SOURCE_IP_ADDRESS,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	IND_UPDATE
 from (


select 	 
	
	C1_SUBJECT_SUBSCRIPTION_ID SUBJECT_SUBSCRIPTION_ID,
	C2_SUBJECT_ID SUBJECT_ID,
	C3_SUBSCRIPTION SUBSCRIPTION,
	C4_SUBSCRIPTION_TYPE_ID SUBSCRIPTION_TYPE_ID,
	C5_SUBSCRIPTION_OPT_IN SUBSCRIPTION_OPT_IN,
	C6_SUBSCRIPTION_OPT_IN_TEXT SUBSCRIPTION_OPT_IN_TEXT,
	C7_SUBSCRIPTION_RELATIONSHIP_I SUBSCRIPTION_RELATIONSHIP_ID,
	C8_SUBSCRIPTION_ORDER SUBSCRIPTION_ORDER,
	C9_SOURCE_IP_ADDRESS SOURCE_IP_ADDRESS,
	C10_AUDIT_CREATE_DATE AUDIT_CREATE_DATE,
	C11_AUDIT_CREATED_BY AUDIT_CREATED_BY,
	C12_AUDIT_MODIFIED_BY AUDIT_MODIFIED_BY,
	C13_AUDIT_MODIFY_DATE AUDIT_MODIFY_DATE,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0SAS_SUB_SUBSCR_STG
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.SAS_SUBJECT_SUBSCRIPTION_STG T
	where	T.SUBJECT_SUBSCRIPTION_ID	= S.SUBJECT_SUBSCRIPTION_ID 
		 and ((T.SUBJECT_ID = S.SUBJECT_ID) or (T.SUBJECT_ID IS NULL and S.SUBJECT_ID IS NULL)) and
		((T.SUBSCRIPTION = S.SUBSCRIPTION) or (T.SUBSCRIPTION IS NULL and S.SUBSCRIPTION IS NULL)) and
		((T.SUBSCRIPTION_TYPE_ID = S.SUBSCRIPTION_TYPE_ID) or (T.SUBSCRIPTION_TYPE_ID IS NULL and S.SUBSCRIPTION_TYPE_ID IS NULL)) and
		((T.SUBSCRIPTION_OPT_IN = S.SUBSCRIPTION_OPT_IN) or (T.SUBSCRIPTION_OPT_IN IS NULL and S.SUBSCRIPTION_OPT_IN IS NULL)) and
		((T.SUBSCRIPTION_OPT_IN_TEXT = S.SUBSCRIPTION_OPT_IN_TEXT) or (T.SUBSCRIPTION_OPT_IN_TEXT IS NULL and S.SUBSCRIPTION_OPT_IN_TEXT IS NULL)) and
		((T.SUBSCRIPTION_RELATIONSHIP_ID = S.SUBSCRIPTION_RELATIONSHIP_ID) or (T.SUBSCRIPTION_RELATIONSHIP_ID IS NULL and S.SUBSCRIPTION_RELATIONSHIP_ID IS NULL)) and
		((T.SUBSCRIPTION_ORDER = S.SUBSCRIPTION_ORDER) or (T.SUBSCRIPTION_ORDER IS NULL and S.SUBSCRIPTION_ORDER IS NULL)) and
		((T.SOURCE_IP_ADDRESS = S.SOURCE_IP_ADDRESS) or (T.SOURCE_IP_ADDRESS IS NULL and S.SOURCE_IP_ADDRESS IS NULL)) and
		((T.AUDIT_CREATE_DATE = S.AUDIT_CREATE_DATE) or (T.AUDIT_CREATE_DATE IS NULL and S.AUDIT_CREATE_DATE IS NULL)) and
		((T.AUDIT_CREATED_BY = S.AUDIT_CREATED_BY) or (T.AUDIT_CREATED_BY IS NULL and S.AUDIT_CREATED_BY IS NULL)) and
		((T.AUDIT_MODIFIED_BY = S.AUDIT_MODIFIED_BY) or (T.AUDIT_MODIFIED_BY IS NULL and S.AUDIT_MODIFIED_BY IS NULL)) and
		((T.AUDIT_MODIFY_DATE = S.AUDIT_MODIFY_DATE) or (T.AUDIT_MODIFY_DATE IS NULL and S.AUDIT_MODIFY_DATE IS NULL))
        )

  
  

  



&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_SAS_SUB_SUBSCR_STG1721001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 14 */
/* Create Index on flow table */

-- create index	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG_IDX1721001
-- on		RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001 (SUBJECT_SUBSCRIPTION_ID)
-- NOLOGGING


BEGIN
  EXECUTE IMMEDIATE 'create index RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG_IDX1721001
on   RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001 (SUBJECT_SUBSCRIPTION_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long (ORA-00972)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Identifier is too long. Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* create check table */


BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.SNP_CHECK_TAB';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;

&

-- create table RAX_APP_USER.SNP_CHECK_TAB
-- (
-- 	CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
-- 	FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
-- 	ERR_TYPE		VARCHAR2(1 CHAR) NULL,
-- 	ERR_MESS		VARCHAR2(250 CHAR) NULL ,
-- 	CHECK_DATE	DATE NULL,
-- 	ORIGIN		VARCHAR2(100 CHAR) NULL,
-- 	CONS_NAME	VARCHAR2(35 CHAR) NULL,
-- 	CONS_TYPE		VARCHAR2(2 CHAR) NULL,
-- 	ERR_COUNT		NUMBER(10) NULL
-- )


BEGIN
   EXECUTE IMMEDIATE '
      create table RAX_APP_USER.SNP_CHECK_TAB
		(
			CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
			SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
			RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
			FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
			ERR_TYPE		VARCHAR2(1 CHAR) NULL,
			ERR_MESS		VARCHAR2(250 CHAR) NULL ,
			CHECK_DATE	DATE NULL,
			ORIGIN		VARCHAR2(100 CHAR) NULL,
			CONS_NAME	VARCHAR2(35 CHAR) NULL,
			CONS_TYPE		VARCHAR2(2 CHAR) NULL,
			ERR_COUNT		NUMBER(10) NULL
		)
   ';
END;


&


/*-----------------------------------------------*/
/* TASK No. 16 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_STAGE'
and	ORIGIN 		= '(1721001)ODS_Project.LOAD_SAS_SUBJECT_SUBSCRIPTION_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 17 */
/* create error table */


BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;

&

create table RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001
(
	ODI_ROW_ID 		UROWID,
	ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
	ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
	ODI_CHECK_DATE	DATE NULL, 
	SUBJECT_SUBSCRIPTION_ID	NUMBER NULL,
	SUBJECT_ID	NUMBER NULL,
	SUBSCRIPTION	VARCHAR2(255) NULL,
	SUBSCRIPTION_TYPE_ID	NUMBER NULL,
	SUBSCRIPTION_OPT_IN	VARCHAR2(1) NULL,
	SUBSCRIPTION_OPT_IN_TEXT	VARCHAR2(255) NULL,
	SUBSCRIPTION_RELATIONSHIP_ID	NUMBER NULL,
	SUBSCRIPTION_ORDER	NUMBER NULL,
	SOURCE_IP_ADDRESS	VARCHAR2(15) NULL,
	AUDIT_CREATE_DATE	TIMESTAMP(6) NULL,
	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFY_DATE	TIMESTAMP(6) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL,
	ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
	ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
	ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
	ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
	ODI_SESS_NO		VARCHAR2(19 CHAR)
)



&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(1721001)ODS_Project.LOAD_SAS_SUBJECT_SUBSCRIPTION_INT')


&


/*-----------------------------------------------*/
/* TASK No. 19 */
/* Create index on PK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
-- create index 	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001
-- on	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001 (SUBJECT_SUBSCRIPTION_ID)

BEGIN
  EXECUTE IMMEDIATE 'create index RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001
on   RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001 (SUBJECT_SUBSCRIPTION_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long (ORA-00972)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Identifier is too long. Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 20 */
/* insert PK errors */

DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                     VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG' INTO CheckTable FROM DUAL;
               SELECT 'ODS_STAGE.SAS_SUBJECT_SUBSCRIPTION_STG' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '1721001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_SUBSCRIPTION_ID,
	SUBJECT_ID,
	SUBSCRIPTION,
	SUBSCRIPTION_TYPE_ID,
	SUBSCRIPTION_OPT_IN,
	SUBSCRIPTION_OPT_IN_TEXT,
	SUBSCRIPTION_RELATIONSHIP_ID,
	SUBSCRIPTION_ORDER,
	SOURCE_IP_ADDRESS,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	''F'', 
	''ODI-15064: The primary key SUBJECT_SUBSCRIPTION_PK is not unique.'',
	''(1721001)ODS_Project.LOAD_SAS_SUBJECT_SUBSCRIPTION_INT'',
	sysdate,
	''SUBJECT_SUBSCRIPTION_PK'',
	''PK'',	
	SAS_SUB_SUBSCR_STG.SUBJECT_SUBSCRIPTION_ID,
	SAS_SUB_SUBSCR_STG.SUBJECT_ID,
	SAS_SUB_SUBSCR_STG.SUBSCRIPTION,
	SAS_SUB_SUBSCR_STG.SUBSCRIPTION_TYPE_ID,
	SAS_SUB_SUBSCR_STG.SUBSCRIPTION_OPT_IN,
	SAS_SUB_SUBSCR_STG.SUBSCRIPTION_OPT_IN_TEXT,
	SAS_SUB_SUBSCR_STG.SUBSCRIPTION_RELATIONSHIP_ID,
	SAS_SUB_SUBSCR_STG.SUBSCRIPTION_ORDER,
	SAS_SUB_SUBSCR_STG.SOURCE_IP_ADDRESS,
	SAS_SUB_SUBSCR_STG.AUDIT_CREATE_DATE,
	SAS_SUB_SUBSCR_STG.AUDIT_CREATED_BY,
	SAS_SUB_SUBSCR_STG.AUDIT_MODIFIED_BY,
	SAS_SUB_SUBSCR_STG.AUDIT_MODIFY_DATE,
	SAS_SUB_SUBSCR_STG.ODS_CREATE_DATE,
	SAS_SUB_SUBSCR_STG.ODS_MODIFY_DATE
from	'
 || VariableCheckTable || 
' SAS_SUB_SUBSCR_STG 
where	exists  (
		select	SUB1.SUBJECT_SUBSCRIPTION_ID
		from 	' 
|| VariableCheckTable ||
'  SUB1
		where 	SUB1.SUBJECT_SUBSCRIPTION_ID=SAS_SUB_SUBSCR_STG.SUBJECT_SUBSCRIPTION_ID
		group by 	SUB1.SUBJECT_SUBSCRIPTION_ID
		having 	count(1) > 1
		)
';

END;


&


/*-----------------------------------------------*/
/* TASK No. 21 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_SUBSCRIPTION_ID,
	SUBJECT_ID,
	SUBSCRIPTION,
	SUBSCRIPTION_TYPE_ID,
	SUBSCRIPTION_OPT_IN,
	SUBSCRIPTION_OPT_IN_TEXT,
	SUBSCRIPTION_RELATIONSHIP_ID,
	SUBSCRIPTION_ORDER,
	SOURCE_IP_ADDRESS,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SUBJECT_SUBSCRIPTION_ID cannot be null.',
	sysdate,
	'(1721001)ODS_Project.LOAD_SAS_SUBJECT_SUBSCRIPTION_INT',
	'SUBJECT_SUBSCRIPTION_ID',
	'NN',	
	SUBJECT_SUBSCRIPTION_ID,
	SUBJECT_ID,
	SUBSCRIPTION,
	SUBSCRIPTION_TYPE_ID,
	SUBSCRIPTION_OPT_IN,
	SUBSCRIPTION_OPT_IN_TEXT,
	SUBSCRIPTION_RELATIONSHIP_ID,
	SUBSCRIPTION_ORDER,
	SOURCE_IP_ADDRESS,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001
where	SUBJECT_SUBSCRIPTION_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 22 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_SUBSCRIPTION_ID,
	SUBJECT_ID,
	SUBSCRIPTION,
	SUBSCRIPTION_TYPE_ID,
	SUBSCRIPTION_OPT_IN,
	SUBSCRIPTION_OPT_IN_TEXT,
	SUBSCRIPTION_RELATIONSHIP_ID,
	SUBSCRIPTION_ORDER,
	SOURCE_IP_ADDRESS,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SUBJECT_ID cannot be null.',
	sysdate,
	'(1721001)ODS_Project.LOAD_SAS_SUBJECT_SUBSCRIPTION_INT',
	'SUBJECT_ID',
	'NN',	
	SUBJECT_SUBSCRIPTION_ID,
	SUBJECT_ID,
	SUBSCRIPTION,
	SUBSCRIPTION_TYPE_ID,
	SUBSCRIPTION_OPT_IN,
	SUBSCRIPTION_OPT_IN_TEXT,
	SUBSCRIPTION_RELATIONSHIP_ID,
	SUBSCRIPTION_ORDER,
	SOURCE_IP_ADDRESS,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001
where	SUBJECT_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 23 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */
-- create index 	RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001
-- on	RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001 (ODI_ROW_ID)

BEGIN
  EXECUTE IMMEDIATE 'create index RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001
on   RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001 (ODI_ROW_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long (ORA-00972)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Identifier is too long. Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 24 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001 E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 25 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_STAGE',
	'SAS_SUB_SUBSCR_STG',
	'ODS_STAGE.SAS_SUBJECT_SUBSCRIPTION_STG1721001',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_SAS_SUB_SUBSCR_STG1721001 E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(1721001)ODS_Project.LOAD_SAS_SUBJECT_SUBSCRIPTION_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 26 */
/* Merge Rows */

merge into	ODS_STAGE.SAS_SUBJECT_SUBSCRIPTION_STG T
using	RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001 S
on	(
		T.SUBJECT_SUBSCRIPTION_ID=S.SUBJECT_SUBSCRIPTION_ID
	)
when matched
then update set
	T.SUBJECT_ID	= S.SUBJECT_ID,
	T.SUBSCRIPTION	= S.SUBSCRIPTION,
	T.SUBSCRIPTION_TYPE_ID	= S.SUBSCRIPTION_TYPE_ID,
	T.SUBSCRIPTION_OPT_IN	= S.SUBSCRIPTION_OPT_IN,
	T.SUBSCRIPTION_OPT_IN_TEXT	= S.SUBSCRIPTION_OPT_IN_TEXT,
	T.SUBSCRIPTION_RELATIONSHIP_ID	= S.SUBSCRIPTION_RELATIONSHIP_ID,
	T.SUBSCRIPTION_ORDER	= S.SUBSCRIPTION_ORDER,
	T.SOURCE_IP_ADDRESS	= S.SOURCE_IP_ADDRESS,
	T.AUDIT_CREATE_DATE	= S.AUDIT_CREATE_DATE,
	T.AUDIT_CREATED_BY	= S.AUDIT_CREATED_BY,
	T.AUDIT_MODIFIED_BY	= S.AUDIT_MODIFIED_BY,
	T.AUDIT_MODIFY_DATE	= S.AUDIT_MODIFY_DATE
	,            T.ODS_CREATE_DATE	= SYSDATE,
	T.ODS_MODIFY_DATE	= SYSDATE
when not matched
then insert
	(
	T.SUBJECT_SUBSCRIPTION_ID,
	T.SUBJECT_ID,
	T.SUBSCRIPTION,
	T.SUBSCRIPTION_TYPE_ID,
	T.SUBSCRIPTION_OPT_IN,
	T.SUBSCRIPTION_OPT_IN_TEXT,
	T.SUBSCRIPTION_RELATIONSHIP_ID,
	T.SUBSCRIPTION_ORDER,
	T.SOURCE_IP_ADDRESS,
	T.AUDIT_CREATE_DATE,
	T.AUDIT_CREATED_BY,
	T.AUDIT_MODIFIED_BY,
	T.AUDIT_MODIFY_DATE
	,             T.ODS_CREATE_DATE,
	T.ODS_MODIFY_DATE
	)
values
	(
	S.SUBJECT_SUBSCRIPTION_ID,
	S.SUBJECT_ID,
	S.SUBSCRIPTION,
	S.SUBSCRIPTION_TYPE_ID,
	S.SUBSCRIPTION_OPT_IN,
	S.SUBSCRIPTION_OPT_IN_TEXT,
	S.SUBSCRIPTION_RELATIONSHIP_ID,
	S.SUBSCRIPTION_ORDER,
	S.SOURCE_IP_ADDRESS,
	S.AUDIT_CREATE_DATE,
	S.AUDIT_CREATED_BY,
	S.AUDIT_MODIFIED_BY,
	S.AUDIT_MODIFY_DATE
	,             SYSDATE,
	SYSDATE
	)

&


/*-----------------------------------------------*/
/* TASK No. 27 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 28 */
/* Drop flow table */

-- drop table RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001

BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_SAS_SUB_SUBSCR_STG1721001';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0SAS_SUB_SUBSCR_STG purge

BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.C$_0SAS_SUB_SUBSCR_STG purge';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 29 */
/* ODS_STAGE.SAS_USER_SUBSCRIPTION_XR */

-- SAS_USER_SUBSCRIPTION_XR
MERGE INTO ODS_STAGE.SAS_USER_SUBSCRIPTION_XR d
USING (
select * from
    (  Select
        XR.USER_SUBSCRIPTION_OID USER_SUBSCRIPTION_OID
        ,STG.SUBJECT_SUBSCRIPTION_ID as SK_SUBJECT_SUBSCRIPTION_ID
        ,STG.SUBJECT_ID as SK_SUBJECT_ID
        ,STG.SUBSCRIPTION_TYPE_ID as SK_SUBSCRIPTION_TYPE_ID
        ,STG.SUBSCRIPTION_RELATIONSHIP_ID  as SK_SUBSCRP_RELATIONSHIP_ID
        ,sysdate as ODS_CREATE_DATE
        ,sysdate as ODS_MODIFY_DATE
    -- select *
    FROM 
         ODS_STAGE.SAS_SUBJECT_SUBSCRIPTION_STG  stg
        ,ODS_STAGE.SAS_USER_SUBSCRIPTION_XR xr
    WHERE (1=1)
        and stg.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
        and STG.SUBJECT_SUBSCRIPTION_ID=XR.SK_SUBJECT_SUBSCRIPTION_ID(+)
     ) s
where NOT EXISTS 
	( select 1 from ODS_STAGE.SAS_USER_SUBSCRIPTION_XR T
	where	T.SK_SUBJECT_SUBSCRIPTION_ID=  S.SK_SUBJECT_SUBSCRIPTION_ID 
		 and
		((T.USER_SUBSCRIPTION_OID = S.USER_SUBSCRIPTION_OID) or (T.USER_SUBSCRIPTION_OID IS NULL and S.USER_SUBSCRIPTION_OID IS NULL)) and
		((T.SK_SUBJECT_SUBSCRIPTION_ID = S.SK_SUBJECT_SUBSCRIPTION_ID) or (T.SK_SUBJECT_SUBSCRIPTION_ID IS NULL and S.SK_SUBJECT_SUBSCRIPTION_ID IS NULL)) and
		((T.SK_SUBJECT_ID = S.SK_SUBJECT_ID) or (T.SK_SUBJECT_ID IS NULL and S.SK_SUBJECT_ID IS NULL)) and
		((T.SK_SUBSCRIPTION_TYPE_ID = S.SK_SUBSCRIPTION_TYPE_ID) or (T.SK_SUBSCRIPTION_TYPE_ID IS NULL and S.SK_SUBSCRIPTION_TYPE_ID IS NULL)) and
		((T.SK_SUBSCRP_RELATIONSHIP_ID = S.SK_SUBSCRP_RELATIONSHIP_ID) or (T.SK_SUBSCRP_RELATIONSHIP_ID IS NULL and S.SK_SUBSCRP_RELATIONSHIP_ID IS NULL))
    )
) s 
ON
  (s.SK_SUBJECT_SUBSCRIPTION_ID=d.SK_SUBJECT_SUBSCRIPTION_ID)
WHEN MATCHED THEN UPDATE SET
         d.USER_SUBSCRIPTION_OID = s.USER_SUBSCRIPTION_OID
--        ,d.SK_SUBJECT_SUBSCRIPTION_ID = s.SK_SUBJECT_SUBSCRIPTION_ID
        ,d.SK_SUBJECT_ID = s.SK_SUBJECT_ID
        ,d.SK_SUBSCRIPTION_TYPE_ID = s.SK_SUBSCRIPTION_TYPE_ID
        ,d.SK_SUBSCRP_RELATIONSHIP_ID = s.SK_SUBSCRP_RELATIONSHIP_ID
        ,d.ODS_MODIFY_DATE = s.ODS_MODIFY_DATE
WHEN NOT MATCHED THEN INSERT 
(
    USER_SUBSCRIPTION_OID
    ,SK_SUBJECT_SUBSCRIPTION_ID
    ,SK_SUBJECT_ID
    ,SK_SUBSCRIPTION_TYPE_ID
    ,SK_SUBSCRP_RELATIONSHIP_ID
    ,ODS_CREATE_DATE
    ,ODS_MODIFY_DATE
)
VALUES (
     ODS_STAGE.USER_SUBSCRIPTION_OID_SEQ.Nextval
    ,s.SK_SUBJECT_SUBSCRIPTION_ID
    ,s.SK_SUBJECT_ID
    ,s.SK_SUBSCRIPTION_TYPE_ID
    ,s.SK_SUBSCRP_RELATIONSHIP_ID
    ,s.ODS_CREATE_DATE
    ,s.ODS_MODIFY_DATE
  )


&


/*-----------------------------------------------*/
/* TASK No. 30 */
/* ODS_OWN.USER_SUBSCRIPTION */

MERGE INTO ODS_OWN.USER_SUBSCRIPTION d
USING (
select * from
(
      Select
        xr.USER_SUBSCRIPTION_OID
        ,-1 USER_SUBSCRIPTION_ID
        ,stg.AUDIT_CREATE_DATE SRC_CREATE_DATE
        ,stg.AUDIT_MODIFY_DATE SRC_MODIFY_DATE
        ,case when stg.SUBSCRIPTION_OPT_IN='Y' then 1 else 0 end OPT_IN_FLAG
        ,up_xr.USER_PROFILE_OID
        ,-1 USER_PROFILE_ID
        ,xr.SK_SUBSCRIPTION_TYPE_ID SUBSCRIPTION_TYPE_ID
        ,null MOBILE_PHONE_NUMBER
        ,sysdate ODS_CREATE_DATE
        ,sysdate ODS_UPDATE_DATE
        ,sub_xr.SUBJECT_OID
--        ,us_xr.USER_SUBSCRIPTION_TYPE_OID SUBSCRIPTION_TYPE_OID
--        ,ur_xr.USER_RELATIONSHIP_TYPE_OID RELATIONSHIP_TYPE_OID
        ,stg.SUBSCRIPTION SUBSCRIPTION_VALUE
        ,ss.SOURCE_SYSTEM_OID
        ,stg.SUBSCRIPTION_ORDER SUBSCRIPTION_ORDER
        ,us_xr.USER_SUBSCRIPTION_TYPE_OID
        ,ur_xr.USER_RELATIONSHIP_TYPE_OID
        ,sysdate as ODS_MODIFY_DATE
    -- select *
    FROM 
         ODS_STAGE.SAS_SUBJECT_SUBSCRIPTION_STG  stg
        ,ODS_STAGE.SAS_USER_SUBSCRIPTION_XR xr
        ,ODS_OWN.SOURCE_SYSTEM SS
        ,ODS_STAGE.SAS_USER_RELATIONSHIP_TYPE_XR ur_xr
        ,ODS_STAGE.SAS_USER_SUBSCRIPTION_TYPE_XR us_xr
        ,ODS_STAGE.SAS_SUBJECT_XR sub_xr
        ,(select up_xr.SK_SUBJECT_ID,max(up_xr.USER_PROFILE_OID) USER_PROFILE_OID from  ODS_STAGE.SAS_USER_PROFILE_XR up_xr group by up_xr.SK_SUBJECT_ID) up_xr
    WHERE (1=1)
        and stg.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
        and STG.SUBJECT_SUBSCRIPTION_ID=XR.SK_SUBJECT_SUBSCRIPTION_ID
        and SS.SOURCE_SYSTEM_SHORT_NAME='SAS'
        and xr.SK_SUBSCRIPTION_TYPE_ID=us_xr.SK_SUBSCRIPTION_TYPE_ID(+)
        and xr.SK_SUBSCRP_RELATIONSHIP_ID=ur_xr.SK_RELATIONSHIP_ID(+)
        and xr.SK_SUBJECT_ID=sub_xr.SK_SUBJECT_ID(+)
        and sub_xr.SK_SUBJECT_ID=up_xr.SK_SUBJECT_ID(+)
/*        and stg.AUDIT_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS') */
     )S
where NOT EXISTS 
    ( select 1 from ODS_OWN.USER_SUBSCRIPTION T
    where
        ((T.USER_SUBSCRIPTION_OID=S.USER_SUBSCRIPTION_OID  ) or (T.USER_SUBSCRIPTION_OID IS NULL and S.USER_SUBSCRIPTION_OID IS NULL)) and
        ((T.USER_SUBSCRIPTION_ID=S.USER_SUBSCRIPTION_ID ) or (t.USER_SUBSCRIPTION_ID is null and s.USER_SUBSCRIPTION_ID is null)) and
        ((T.SRC_CREATE_DATE=S.SRC_CREATE_DATE ) or (t.SRC_CREATE_DATE is null and s.SRC_CREATE_DATE is null)) and
        ((T.SRC_MODIFY_DATE=S.SRC_MODIFY_DATE ) or (t.SRC_MODIFY_DATE is null and s.SRC_MODIFY_DATE is null)) and
        ((T.OPT_IN_FLAG=s.OPT_IN_FLAG ) or (t.OPT_IN_FLAG is null and s.OPT_IN_FLAG is null)) and
        ((T.USER_PROFILE_OID=s.USER_PROFILE_OID ) or (t.USER_PROFILE_OID is null and s.USER_PROFILE_OID is null)) and
        ((T.USER_PROFILE_ID=s.USER_PROFILE_ID ) or (t.USER_PROFILE_ID is null and s.USER_PROFILE_ID is null)) and
        ((T.SUBSCRIPTION_TYPE_ID=s.SUBSCRIPTION_TYPE_ID ) or (t.SUBSCRIPTION_TYPE_ID is null and s.SUBSCRIPTION_TYPE_ID is null)) and
        ((T.MOBILE_PHONE_NUMBER=s.MOBILE_PHONE_NUMBER ) or (t.MOBILE_PHONE_NUMBER is null and s.MOBILE_PHONE_NUMBER is null)) and
        ((T.SUBJECT_OID=s.SUBJECT_OID ) or (t.SUBJECT_OID is null and s.SUBJECT_OID is null)) and
        ((T.SUBSCRIPTION_VALUE=s.SUBSCRIPTION_VALUE ) or (t.SUBSCRIPTION_VALUE is null and s.SUBSCRIPTION_VALUE is null)) and
        ((T.SOURCE_SYSTEM_OID=s.SOURCE_SYSTEM_OID ) or (t.SOURCE_SYSTEM_OID is null and s.SOURCE_SYSTEM_OID is null)) and
        ((T.SUBSCRIPTION_ORDER=s.SUBSCRIPTION_ORDER ) or (t.SUBSCRIPTION_ORDER is null and s.SUBSCRIPTION_ORDER is null)) and
        ((T.USER_SUBSCRIPTION_TYPE_OID=s.USER_SUBSCRIPTION_TYPE_OID ) or (t.USER_SUBSCRIPTION_TYPE_OID is null and s.USER_SUBSCRIPTION_TYPE_OID is null)) and
        ((T.USER_RELATIONSHIP_TYPE_OID=s.USER_RELATIONSHIP_TYPE_OID ) or (t.USER_RELATIONSHIP_TYPE_OID is null and s.USER_RELATIONSHIP_TYPE_OID is null))
     )
)s
ON (s.USER_SUBSCRIPTION_OID=d.USER_SUBSCRIPTION_OID)
WHEN MATCHED THEN UPDATE SET
    d.USER_SUBSCRIPTION_ID=s.USER_SUBSCRIPTION_ID
    ,d.SRC_CREATE_DATE=s.SRC_CREATE_DATE
    ,d.SRC_MODIFY_DATE=s.SRC_MODIFY_DATE
    ,d.OPT_IN_FLAG=s.OPT_IN_FLAG
    ,d.USER_PROFILE_OID=s.USER_PROFILE_OID
    ,d.USER_PROFILE_ID=s.USER_PROFILE_ID
    ,d.SUBSCRIPTION_TYPE_ID=s.SUBSCRIPTION_TYPE_ID
    ,d.MOBILE_PHONE_NUMBER=s.MOBILE_PHONE_NUMBER
--    ,d.ODS_CREATE_DATE=s.ODS_CREATE_DATE
    ,d.ODS_UPDATE_DATE=s.ODS_UPDATE_DATE
    ,d.SUBJECT_OID=s.SUBJECT_OID
    ,d.SUBSCRIPTION_VALUE=s.SUBSCRIPTION_VALUE
    ,d.SOURCE_SYSTEM_OID=s.SOURCE_SYSTEM_OID
    ,d.SUBSCRIPTION_ORDER=s.SUBSCRIPTION_ORDER
    ,d.ODS_MODIFY_DATE=s.ODS_MODIFY_DATE
    ,d.USER_SUBSCRIPTION_TYPE_OID=s.USER_SUBSCRIPTION_TYPE_OID
    ,d.USER_RELATIONSHIP_TYPE_OID=s.USER_RELATIONSHIP_TYPE_OID
WHEN NOT MATCHED THEN INSERT 
(
    USER_SUBSCRIPTION_OID
    ,USER_SUBSCRIPTION_ID
    ,SRC_CREATE_DATE
    ,SRC_MODIFY_DATE
    ,OPT_IN_FLAG
    ,USER_PROFILE_OID
    ,USER_PROFILE_ID
    ,SUBSCRIPTION_TYPE_ID
    ,MOBILE_PHONE_NUMBER
    ,ODS_CREATE_DATE
    ,ODS_UPDATE_DATE
    ,SUBJECT_OID
    ,SUBSCRIPTION_VALUE
    ,SOURCE_SYSTEM_OID
    ,SUBSCRIPTION_ORDER
    ,ODS_MODIFY_DATE
    ,USER_SUBSCRIPTION_TYPE_OID
    ,USER_RELATIONSHIP_TYPE_OID
)
VALUES (
     s.USER_SUBSCRIPTION_OID
    ,s.USER_SUBSCRIPTION_ID
    ,s.SRC_CREATE_DATE
    ,s.SRC_MODIFY_DATE
    ,s.OPT_IN_FLAG
    ,s.USER_PROFILE_OID
    ,s.USER_PROFILE_ID
    ,s.SUBSCRIPTION_TYPE_ID
    ,s.MOBILE_PHONE_NUMBER
    ,s.ODS_CREATE_DATE
    ,s.ODS_UPDATE_DATE
    ,s.SUBJECT_OID
    ,s.SUBSCRIPTION_VALUE
    ,s.SOURCE_SYSTEM_OID
    ,s.SUBSCRIPTION_ORDER
    ,s.ODS_MODIFY_DATE
    ,s.USER_SUBSCRIPTION_TYPE_OID
    ,s.USER_RELATIONSHIP_TYPE_OID
)


&


/*-----------------------------------------------*/
/* TASK No. 31 */
/* Update CDC Load Status */

UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env
*/

&


/*-----------------------------------------------*/
/* TASK No. 32 */
/* Insert CDC Audit Record */

INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name
,:v_sess_no
,'LOAD_SAS_SUBJECT_SUBSCRIPTION_PKG'
,'006'
,TO_DATE(SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
,TO_DATE (SUBSTR(:v_cdc_load_date, 1, 19),'YYYY-MM-DD HH24:MI:SS')
,:v_cdc_overlap
,SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS_OWN.ODS_CDC_LOAD_STATUS
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_SAS_SUBJECT_SUBSCRIPTION_PKG',
'006',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          )
,:v_cdc_overlap,
SYSDATE,
 :v_env)
*/


&


/*-----------------------------------------------*/
