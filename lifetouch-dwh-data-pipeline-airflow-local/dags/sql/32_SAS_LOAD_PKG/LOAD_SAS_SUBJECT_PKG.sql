/* TASK No. 1 */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 1 */




/*-----------------------------------------------*/
/* TASK No. 2 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 2 */




/*-----------------------------------------------*/
/* TASK No. 3 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 3 */




/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0SAS_SUBJECT_STG purge

-- &


/*-----------------------------------------------*/
/* TASK No. 5 */
/* Create work table */

-- create table RAX_APP_USER.C$_0SAS_SUBJECT_STG
-- (
-- 	C1_SUBJECT_ID	NUMBER(19) NULL,
-- 	C2_AUDIT_CREATE_DATE	TIMESTAMP(6) NULL,
-- 	C3_AUDIT_CREATED_BY	VARCHAR2(255) NULL,
-- 	C4_AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
-- 	C5_AUDIT_MODIFY_DATE	TIMESTAMP(6) NULL,
-- 	C6_SUBJECT_KEY	VARCHAR2(36) NULL,
-- 	C7_ADDRESS_LINE_1	VARCHAR2(50) NULL,
-- 	C8_ADDRESS_LINE_2	VARCHAR2(50) NULL,
-- 	C9_AS_OF_DATE	TIMESTAMP(6) NULL,
-- 	C10_BUS_NBR	VARCHAR2(50) NULL,
-- 	C11_CITY	VARCHAR2(30) NULL,
-- 	C12_COUNTRY	VARCHAR2(2) NULL,
-- 	C13_COURTESY_TITLE	VARCHAR2(50) NULL,
-- 	C14_DAYTIME_PHONE	VARCHAR2(20) NULL,
-- 	C15_EMAIL_ADDRESS	VARCHAR2(320) NULL,
-- 	C16_EMERGENCY_FIRST_NAME	VARCHAR2(50) NULL,
-- 	C17_EMERGENCY_LAST_NAME	VARCHAR2(50) NULL,
-- 	C18_EMERGENCY_PHONE	VARCHAR2(50) NULL,
-- 	C19_FIRST_NAME	VARCHAR2(50) NULL,
-- 	C20_GENDER	VARCHAR2(1) NULL,
-- 	C21_GRADE	VARCHAR2(10) NULL,
-- 	C22_GRADUATION_YEAR	VARCHAR2(10) NULL,
-- 	C23_HOMEROOM	VARCHAR2(10) NULL,
-- 	C24_LAST_NAME	VARCHAR2(50) NULL,
-- 	C25_LOCKER	VARCHAR2(50) NULL,
-- 	C26_MAJOR	VARCHAR2(50) NULL,
-- 	C27_MIDDLE_NAME	VARCHAR2(50) NULL,
-- 	C28_MINOR	VARCHAR2(50) NULL,
-- 	C29_EVENING_PHONE	VARCHAR2(20) NULL,
-- 	C30_PERIOD	VARCHAR2(10) NULL,
-- 	C31_POSTAL_CODE	VARCHAR2(10) NULL,
-- 	C32_SQUADRON	VARCHAR2(50) NULL,
-- 	C33_STATE	VARCHAR2(10) NULL,
-- 	C34_SUBJECT_EXTRA_DATA	VARCHAR2(255) NULL,
-- 	C35_TEACHER_FIRST_NAME	VARCHAR2(50) NULL,
-- 	C36_TEACHER_LAST_NAME	VARCHAR2(50) NULL,
-- 	C37_TEACHER_MIDDLE_NAME	VARCHAR2(50) NULL,
-- 	C38_TEACHER_NAME	VARCHAR2(40) NULL,
-- 	C39_TEACHER_NBR	VARCHAR2(10) NULL,
-- 	C40_TEACHER_TITLE	VARCHAR2(50) NULL,
-- 	C41_TRACK	VARCHAR2(50) NULL,
-- 	C42_STAFF_CODE	VARCHAR2(10) NULL,
-- 	C43_STAFF_FLAG	VARCHAR2(1) NULL,
-- 	C44_EXTERNAL_SUBJECT_ID	VARCHAR2(255) NULL,
-- 	C45_REVISION_NO	NUMBER(10) NULL,
-- 	C46_ACTIVE	NUMBER(1) NULL,
-- 	C47_VALID	NUMBER(1) NULL,
-- 	C48_BIRTH_DATE	VARCHAR2(25) NULL,
-- 	C49_STAFF_INDICATOR	VARCHAR2(255) NULL,
-- 	C50_AREA_CODE	VARCHAR2(3) NULL,
-- 	C51_EXCHANGE	VARCHAR2(3) NULL,
-- 	C52_PHONE	VARCHAR2(4) NULL,
-- 	C53_EMAIL2	VARCHAR2(50) NULL,
-- 	C54_EMAIL_MISC	VARCHAR2(50) NULL,
-- 	C55_POSITION	VARCHAR2(64) NULL,
-- 	C56_COLLEGE_ORG	VARCHAR2(50) NULL,
-- 	C57_FLIGHT	VARCHAR2(50) NULL,
-- 	C58_MIDDLE_INIT	VARCHAR2(50) NULL,
-- 	C59_ACCESS_CODE	VARCHAR2(6) NULL,
-- 	C60_AGE	NUMBER(3) NULL,
-- 	C61_MISCELLANEOUS	VARCHAR2(50) NULL,
-- 	C62_COURTESY	VARCHAR2(50) NULL,
-- 	C63_MISC_INFO	VARCHAR2(50) NULL,
-- 	C64_BIRTHDATE	VARCHAR2(25) NULL,
-- 	C65_APO_ID	VARCHAR2(255) NULL,
-- 	C66_OMS_SUBJECT_ID	VARCHAR2(15) NULL
-- )
-- NOLOGGING

-- &


/*-----------------------------------------------*/
/* TASK No. 6 */
/* Load data */

/* SOURCE CODE */


-- select	
-- 	SUBJECT.SUBJECT_ID	   C1_SUBJECT_ID,
-- 	SUBJECT.AUDIT_CREATE_DATE	   C2_AUDIT_CREATE_DATE,
-- 	SUBJECT.AUDIT_CREATED_BY	   C3_AUDIT_CREATED_BY,
-- 	SUBJECT.AUDIT_MODIFIED_BY	   C4_AUDIT_MODIFIED_BY,
-- 	SUBJECT.AUDIT_MODIFY_DATE	   C5_AUDIT_MODIFY_DATE,
-- 	SUBJECT.SUBJECT_KEY	   C6_SUBJECT_KEY,
-- 	SUBJECT.ADDRESS_LINE_1	   C7_ADDRESS_LINE_1,
-- 	SUBJECT.ADDRESS_LINE_2	   C8_ADDRESS_LINE_2,
-- 	SUBJECT.AS_OF_DATE	   C9_AS_OF_DATE,
-- 	SUBJECT.BUS_NBR	   C10_BUS_NBR,
-- 	SUBJECT.CITY	   C11_CITY,
-- 	SUBJECT.COUNTRY	   C12_COUNTRY,
-- 	SUBJECT.COURTESY_TITLE	   C13_COURTESY_TITLE,
-- 	SUBJECT.DAYTIME_PHONE	   C14_DAYTIME_PHONE,
-- 	SUBJECT.EMAIL_ADDRESS	   C15_EMAIL_ADDRESS,
-- 	SUBJECT.EMERGENCY_FIRST_NAME	   C16_EMERGENCY_FIRST_NAME,
-- 	SUBJECT.EMERGENCY_LAST_NAME	   C17_EMERGENCY_LAST_NAME,
-- 	SUBJECT.EMERGENCY_PHONE	   C18_EMERGENCY_PHONE,
-- 	SUBJECT.FIRST_NAME	   C19_FIRST_NAME,
-- 	SUBJECT.GENDER	   C20_GENDER,
-- 	SUBJECT.GRADE	   C21_GRADE,
-- 	SUBJECT.GRADUATION_YEAR	   C22_GRADUATION_YEAR,
-- 	SUBJECT.HOMEROOM	   C23_HOMEROOM,
-- 	SUBJECT.LAST_NAME	   C24_LAST_NAME,
-- 	SUBJECT.LOCKER	   C25_LOCKER,
-- 	SUBJECT.MAJOR	   C26_MAJOR,
-- 	SUBJECT.MIDDLE_NAME	   C27_MIDDLE_NAME,
-- 	SUBJECT.MINOR	   C28_MINOR,
-- 	SUBJECT.EVENING_PHONE	   C29_EVENING_PHONE,
-- 	SUBJECT.PERIOD	   C30_PERIOD,
-- 	SUBJECT.POSTAL_CODE	   C31_POSTAL_CODE,
-- 	SUBJECT.SQUADRON	   C32_SQUADRON,
-- 	SUBJECT.STATE	   C33_STATE,
-- 	SUBJECT.SUBJECT_EXTRA_DATA	   C34_SUBJECT_EXTRA_DATA,
-- 	SUBJECT.TEACHER_FIRST_NAME	   C35_TEACHER_FIRST_NAME,
-- 	SUBJECT.TEACHER_LAST_NAME	   C36_TEACHER_LAST_NAME,
-- 	SUBJECT.TEACHER_MIDDLE_NAME	   C37_TEACHER_MIDDLE_NAME,
-- 	SUBJECT.TEACHER_NAME	   C38_TEACHER_NAME,
-- 	SUBJECT.TEACHER_NBR	   C39_TEACHER_NBR,
-- 	SUBJECT.TEACHER_TITLE	   C40_TEACHER_TITLE,
-- 	SUBJECT.TRACK	   C41_TRACK,
-- 	SUBJECT.STAFF_CODE	   C42_STAFF_CODE,
-- 	SUBJECT.STAFF_FLAG	   C43_STAFF_FLAG,
-- 	SUBJECT.EXTERNAL_SUBJECT_ID	   C44_EXTERNAL_SUBJECT_ID,
-- 	SUBJECT.REVISION_NO	   C45_REVISION_NO,
-- 	SUBJECT.ACTIVE	   C46_ACTIVE,
-- 	SUBJECT.VALID	   C47_VALID,
-- 	SUBJECT.BIRTH_DATE	   C48_BIRTH_DATE,
-- 	SUBJECT.STAFF_INDICATOR	   C49_STAFF_INDICATOR,
-- 	SUBJECT.AREA_CODE	   C50_AREA_CODE,
-- 	SUBJECT.EXCHANGE	   C51_EXCHANGE,
-- 	SUBJECT.PHONE	   C52_PHONE,
-- 	SUBJECT.EMAIL2	   C53_EMAIL2,
-- 	SUBJECT.EMAIL_MISC	   C54_EMAIL_MISC,
-- 	SUBJECT.POSITION	   C55_POSITION,
-- 	SUBJECT.COLLEGE_ORG	   C56_COLLEGE_ORG,
-- 	SUBJECT.FLIGHT	   C57_FLIGHT,
-- 	SUBJECT.MIDDLE_INIT	   C58_MIDDLE_INIT,
-- 	SUBJECT.ACCESS_CODE	   C59_ACCESS_CODE,
-- 	SUBJECT.AGE	   C60_AGE,
-- 	SUBJECT.MISCELLANEOUS	   C61_MISCELLANEOUS,
-- 	SUBJECT.COURTESY	   C62_COURTESY,
-- 	SUBJECT.MISC_INFO	   C63_MISC_INFO,
-- 	SUBJECT.BIRTHDATE	   C64_BIRTHDATE,
-- 	SUBJECT.APO_ID	   C65_APO_ID,
-- 	SUBJECT.OMS_SUBJECT_ID	   C66_OMS_SUBJECT_ID
-- from	SAS_SIT_OWN.SUBJECT   SUBJECT
-- where	(1=1)
-- And (SUBJECT.AUDIT_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
-- )







-- &

/* TARGET CODE */
-- insert /*+ append */ into RAX_APP_USER.C$_0SAS_SUBJECT_STG
-- (
-- 	C1_SUBJECT_ID,
-- 	C2_AUDIT_CREATE_DATE,
-- 	C3_AUDIT_CREATED_BY,
-- 	C4_AUDIT_MODIFIED_BY,
-- 	C5_AUDIT_MODIFY_DATE,
-- 	C6_SUBJECT_KEY,
-- 	C7_ADDRESS_LINE_1,
-- 	C8_ADDRESS_LINE_2,
-- 	C9_AS_OF_DATE,
-- 	C10_BUS_NBR,
-- 	C11_CITY,
-- 	C12_COUNTRY,
-- 	C13_COURTESY_TITLE,
-- 	C14_DAYTIME_PHONE,
-- 	C15_EMAIL_ADDRESS,
-- 	C16_EMERGENCY_FIRST_NAME,
-- 	C17_EMERGENCY_LAST_NAME,
-- 	C18_EMERGENCY_PHONE,
-- 	C19_FIRST_NAME,
-- 	C20_GENDER,
-- 	C21_GRADE,
-- 	C22_GRADUATION_YEAR,
-- 	C23_HOMEROOM,
-- 	C24_LAST_NAME,
-- 	C25_LOCKER,
-- 	C26_MAJOR,
-- 	C27_MIDDLE_NAME,
-- 	C28_MINOR,
-- 	C29_EVENING_PHONE,
-- 	C30_PERIOD,
-- 	C31_POSTAL_CODE,
-- 	C32_SQUADRON,
-- 	C33_STATE,
-- 	C34_SUBJECT_EXTRA_DATA,
-- 	C35_TEACHER_FIRST_NAME,
-- 	C36_TEACHER_LAST_NAME,
-- 	C37_TEACHER_MIDDLE_NAME,
-- 	C38_TEACHER_NAME,
-- 	C39_TEACHER_NBR,
-- 	C40_TEACHER_TITLE,
-- 	C41_TRACK,
-- 	C42_STAFF_CODE,
-- 	C43_STAFF_FLAG,
-- 	C44_EXTERNAL_SUBJECT_ID,
-- 	C45_REVISION_NO,
-- 	C46_ACTIVE,
-- 	C47_VALID,
-- 	C48_BIRTH_DATE,
-- 	C49_STAFF_INDICATOR,
-- 	C50_AREA_CODE,
-- 	C51_EXCHANGE,
-- 	C52_PHONE,
-- 	C53_EMAIL2,
-- 	C54_EMAIL_MISC,
-- 	C55_POSITION,
-- 	C56_COLLEGE_ORG,
-- 	C57_FLIGHT,
-- 	C58_MIDDLE_INIT,
-- 	C59_ACCESS_CODE,
-- 	C60_AGE,
-- 	C61_MISCELLANEOUS,
-- 	C62_COURTESY,
-- 	C63_MISC_INFO,
-- 	C64_BIRTHDATE,
-- 	C65_APO_ID,
-- 	C66_OMS_SUBJECT_ID
-- )
-- values
-- (
-- 	:C1_SUBJECT_ID,
-- 	:C2_AUDIT_CREATE_DATE,
-- 	:C3_AUDIT_CREATED_BY,
-- 	:C4_AUDIT_MODIFIED_BY,
-- 	:C5_AUDIT_MODIFY_DATE,
-- 	:C6_SUBJECT_KEY,
-- 	:C7_ADDRESS_LINE_1,
-- 	:C8_ADDRESS_LINE_2,
-- 	:C9_AS_OF_DATE,
-- 	:C10_BUS_NBR,
-- 	:C11_CITY,
-- 	:C12_COUNTRY,
-- 	:C13_COURTESY_TITLE,
-- 	:C14_DAYTIME_PHONE,
-- 	:C15_EMAIL_ADDRESS,
-- 	:C16_EMERGENCY_FIRST_NAME,
-- 	:C17_EMERGENCY_LAST_NAME,
-- 	:C18_EMERGENCY_PHONE,
-- 	:C19_FIRST_NAME,
-- 	:C20_GENDER,
-- 	:C21_GRADE,
-- 	:C22_GRADUATION_YEAR,
-- 	:C23_HOMEROOM,
-- 	:C24_LAST_NAME,
-- 	:C25_LOCKER,
-- 	:C26_MAJOR,
-- 	:C27_MIDDLE_NAME,
-- 	:C28_MINOR,
-- 	:C29_EVENING_PHONE,
-- 	:C30_PERIOD,
-- 	:C31_POSTAL_CODE,
-- 	:C32_SQUADRON,
-- 	:C33_STATE,
-- 	:C34_SUBJECT_EXTRA_DATA,
-- 	:C35_TEACHER_FIRST_NAME,
-- 	:C36_TEACHER_LAST_NAME,
-- 	:C37_TEACHER_MIDDLE_NAME,
-- 	:C38_TEACHER_NAME,
-- 	:C39_TEACHER_NBR,
-- 	:C40_TEACHER_TITLE,
-- 	:C41_TRACK,
-- 	:C42_STAFF_CODE,
-- 	:C43_STAFF_FLAG,
-- 	:C44_EXTERNAL_SUBJECT_ID,
-- 	:C45_REVISION_NO,
-- 	:C46_ACTIVE,
-- 	:C47_VALID,
-- 	:C48_BIRTH_DATE,
-- 	:C49_STAFF_INDICATOR,
-- 	:C50_AREA_CODE,
-- 	:C51_EXCHANGE,
-- 	:C52_PHONE,
-- 	:C53_EMAIL2,
-- 	:C54_EMAIL_MISC,
-- 	:C55_POSITION,
-- 	:C56_COLLEGE_ORG,
-- 	:C57_FLIGHT,
-- 	:C58_MIDDLE_INIT,
-- 	:C59_ACCESS_CODE,
-- 	:C60_AGE,
-- 	:C61_MISCELLANEOUS,
-- 	:C62_COURTESY,
-- 	:C63_MISC_INFO,
-- 	:C64_BIRTHDATE,
-- 	:C65_APO_ID,
-- 	:C66_OMS_SUBJECT_ID
-- )

-- &


/*-----------------------------------------------*/
/* TASK No. 7 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0SAS_SUBJECT_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Set vID */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 9 */




/*-----------------------------------------------*/
/* TASK No. 10 */
/* Drop flow table */

-- drop table RAX_APP_USER.I$_SAS_SUBJECT_STG1397001

BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_SAS_SUBJECT_STG1397001';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;


&


/*-----------------------------------------------*/
/* TASK No. 11 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
(
	SUBJECT_ID	NUMBER(19) NULL,
	AUDIT_CREATE_DATE	TIMESTAMP(6) NULL,
	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFY_DATE	TIMESTAMP(6) NULL,
	SUBJECT_KEY	VARCHAR2(36) NULL,
	ADDRESS_LINE_1	VARCHAR2(50) NULL,
	ADDRESS_LINE_2	VARCHAR2(50) NULL,
	AS_OF_DATE	TIMESTAMP(6) NULL,
	BUS_NBR	VARCHAR2(50) NULL,
	CITY	VARCHAR2(30) NULL,
	COUNTRY	VARCHAR2(2) NULL,
	COURTESY_TITLE	VARCHAR2(50) NULL,
	DAYTIME_PHONE	VARCHAR2(20) NULL,
	EMAIL_ADDRESS	VARCHAR2(320) NULL,
	EMERGENCY_FIRST_NAME	VARCHAR2(50) NULL,
	EMERGENCY_LAST_NAME	VARCHAR2(50) NULL,
	EMERGENCY_PHONE	VARCHAR2(50) NULL,
	FIRST_NAME	VARCHAR2(50) NULL,
	GENDER	VARCHAR2(1) NULL,
	GRADE	VARCHAR2(10) NULL,
	GRADUATION_YEAR	VARCHAR2(10) NULL,
	HOMEROOM	VARCHAR2(10) NULL,
	LAST_NAME	VARCHAR2(50) NULL,
	LOCKER	VARCHAR2(50) NULL,
	MAJOR	VARCHAR2(50) NULL,
	MIDDLE_NAME	VARCHAR2(50) NULL,
	MINOR	VARCHAR2(50) NULL,
	EVENING_PHONE	VARCHAR2(20) NULL,
	PERIOD	VARCHAR2(10) NULL,
	POSTAL_CODE	VARCHAR2(10) NULL,
	SQUADRON	VARCHAR2(50) NULL,
	STATE	VARCHAR2(10) NULL,
	SUBJECT_EXTRA_DATA	VARCHAR2(255) NULL,
	TEACHER_FIRST_NAME	VARCHAR2(50) NULL,
	TEACHER_LAST_NAME	VARCHAR2(50) NULL,
	TEACHER_MIDDLE_NAME	VARCHAR2(50) NULL,
	TEACHER_NAME	VARCHAR2(40) NULL,
	TEACHER_NBR	VARCHAR2(10) NULL,
	TEACHER_TITLE	VARCHAR2(50) NULL,
	TRACK	VARCHAR2(50) NULL,
	STAFF_CODE	VARCHAR2(10) NULL,
	STAFF_FLAG	VARCHAR2(1) NULL,
	EXTERNAL_SUBJECT_ID	VARCHAR2(255) NULL,
	REVISION_NO	NUMBER(10) NULL,
	ACTIVE	NUMBER(1) NULL,
	VALID	NUMBER(1) NULL,
	BIRTH_DATE	VARCHAR2(25) NULL,
	STAFF_INDICATOR	VARCHAR2(255) NULL,
	AREA_CODE	VARCHAR2(3) NULL,
	EXCHANGE	VARCHAR2(3) NULL,
	PHONE	VARCHAR2(4) NULL,
	EMAIL2	VARCHAR2(50) NULL,
	EMAIL_MISC	VARCHAR2(50) NULL,
	POSITION	VARCHAR2(64) NULL,
	COLLEGE_ORG	VARCHAR2(50) NULL,
	FLIGHT	VARCHAR2(50) NULL,
	MIDDLE_INIT	VARCHAR2(50) NULL,
	ACCESS_CODE	VARCHAR2(6) NULL,
	AGE	NUMBER(3) NULL,
	MISCELLANEOUS	VARCHAR2(50) NULL,
	COURTESY	VARCHAR2(50) NULL,
	MISC_INFO	VARCHAR2(50) NULL,
	BIRTHDATE	VARCHAR2(25) NULL,
	APO_ID	VARCHAR2(255) NULL,
	OMS_SUBJECT_ID	VARCHAR2(15) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL
	,IND_UPDATE		char(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = NOT_EXISTS */
 


  


insert into	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
(
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	IND_UPDATE
)
select 
SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	IND_UPDATE
 from (


select 	 
	
	C1_SUBJECT_ID SUBJECT_ID,
	C2_AUDIT_CREATE_DATE AUDIT_CREATE_DATE,
	C3_AUDIT_CREATED_BY AUDIT_CREATED_BY,
	C4_AUDIT_MODIFIED_BY AUDIT_MODIFIED_BY,
	C5_AUDIT_MODIFY_DATE AUDIT_MODIFY_DATE,
	C6_SUBJECT_KEY SUBJECT_KEY,
	C7_ADDRESS_LINE_1 ADDRESS_LINE_1,
	C8_ADDRESS_LINE_2 ADDRESS_LINE_2,
	C9_AS_OF_DATE AS_OF_DATE,
	C10_BUS_NBR BUS_NBR,
	C11_CITY CITY,
	C12_COUNTRY COUNTRY,
	C13_COURTESY_TITLE COURTESY_TITLE,
	C14_DAYTIME_PHONE DAYTIME_PHONE,
	C15_EMAIL_ADDRESS EMAIL_ADDRESS,
	C16_EMERGENCY_FIRST_NAME EMERGENCY_FIRST_NAME,
	C17_EMERGENCY_LAST_NAME EMERGENCY_LAST_NAME,
	C18_EMERGENCY_PHONE EMERGENCY_PHONE,
	C19_FIRST_NAME FIRST_NAME,
	C20_GENDER GENDER,
	C21_GRADE GRADE,
	C22_GRADUATION_YEAR GRADUATION_YEAR,
	C23_HOMEROOM HOMEROOM,
	C24_LAST_NAME LAST_NAME,
	C25_LOCKER LOCKER,
	C26_MAJOR MAJOR,
	C27_MIDDLE_NAME MIDDLE_NAME,
	C28_MINOR MINOR,
	C29_EVENING_PHONE EVENING_PHONE,
	C30_PERIOD PERIOD,
	C31_POSTAL_CODE POSTAL_CODE,
	C32_SQUADRON SQUADRON,
	C33_STATE STATE,
	C34_SUBJECT_EXTRA_DATA SUBJECT_EXTRA_DATA,
	C35_TEACHER_FIRST_NAME TEACHER_FIRST_NAME,
	C36_TEACHER_LAST_NAME TEACHER_LAST_NAME,
	C37_TEACHER_MIDDLE_NAME TEACHER_MIDDLE_NAME,
	C38_TEACHER_NAME TEACHER_NAME,
	C39_TEACHER_NBR TEACHER_NBR,
	C40_TEACHER_TITLE TEACHER_TITLE,
	C41_TRACK TRACK,
	C42_STAFF_CODE STAFF_CODE,
	C43_STAFF_FLAG STAFF_FLAG,
	C44_EXTERNAL_SUBJECT_ID EXTERNAL_SUBJECT_ID,
	C45_REVISION_NO REVISION_NO,
	C46_ACTIVE ACTIVE,
	C47_VALID VALID,
	C48_BIRTH_DATE BIRTH_DATE,
	C49_STAFF_INDICATOR STAFF_INDICATOR,
	C50_AREA_CODE AREA_CODE,
	C51_EXCHANGE EXCHANGE,
	C52_PHONE PHONE,
	C53_EMAIL2 EMAIL2,
	C54_EMAIL_MISC EMAIL_MISC,
	C55_POSITION POSITION,
	C56_COLLEGE_ORG COLLEGE_ORG,
	C57_FLIGHT FLIGHT,
	C58_MIDDLE_INIT MIDDLE_INIT,
	C59_ACCESS_CODE ACCESS_CODE,
	C60_AGE AGE,
	C61_MISCELLANEOUS MISCELLANEOUS,
	C62_COURTESY COURTESY,
	C63_MISC_INFO MISC_INFO,
	C64_BIRTHDATE BIRTHDATE,
	C65_APO_ID APO_ID,
	C66_OMS_SUBJECT_ID OMS_SUBJECT_ID,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0SAS_SUBJECT_STG
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.SAS_SUBJECT_STG T
	where	T.SUBJECT_ID	= S.SUBJECT_ID 
		 and ((T.AUDIT_CREATE_DATE = S.AUDIT_CREATE_DATE) or (T.AUDIT_CREATE_DATE IS NULL and S.AUDIT_CREATE_DATE IS NULL)) and
		((T.AUDIT_CREATED_BY = S.AUDIT_CREATED_BY) or (T.AUDIT_CREATED_BY IS NULL and S.AUDIT_CREATED_BY IS NULL)) and
		((T.AUDIT_MODIFIED_BY = S.AUDIT_MODIFIED_BY) or (T.AUDIT_MODIFIED_BY IS NULL and S.AUDIT_MODIFIED_BY IS NULL)) and
		((T.AUDIT_MODIFY_DATE = S.AUDIT_MODIFY_DATE) or (T.AUDIT_MODIFY_DATE IS NULL and S.AUDIT_MODIFY_DATE IS NULL)) and
		((T.SUBJECT_KEY = S.SUBJECT_KEY) or (T.SUBJECT_KEY IS NULL and S.SUBJECT_KEY IS NULL)) and
		((T.ADDRESS_LINE_1 = S.ADDRESS_LINE_1) or (T.ADDRESS_LINE_1 IS NULL and S.ADDRESS_LINE_1 IS NULL)) and
		((T.ADDRESS_LINE_2 = S.ADDRESS_LINE_2) or (T.ADDRESS_LINE_2 IS NULL and S.ADDRESS_LINE_2 IS NULL)) and
		((T.AS_OF_DATE = S.AS_OF_DATE) or (T.AS_OF_DATE IS NULL and S.AS_OF_DATE IS NULL)) and
		((T.BUS_NBR = S.BUS_NBR) or (T.BUS_NBR IS NULL and S.BUS_NBR IS NULL)) and
		((T.CITY = S.CITY) or (T.CITY IS NULL and S.CITY IS NULL)) and
		((T.COUNTRY = S.COUNTRY) or (T.COUNTRY IS NULL and S.COUNTRY IS NULL)) and
		((T.COURTESY_TITLE = S.COURTESY_TITLE) or (T.COURTESY_TITLE IS NULL and S.COURTESY_TITLE IS NULL)) and
		((T.DAYTIME_PHONE = S.DAYTIME_PHONE) or (T.DAYTIME_PHONE IS NULL and S.DAYTIME_PHONE IS NULL)) and
		((T.EMAIL_ADDRESS = S.EMAIL_ADDRESS) or (T.EMAIL_ADDRESS IS NULL and S.EMAIL_ADDRESS IS NULL)) and
		((T.EMERGENCY_FIRST_NAME = S.EMERGENCY_FIRST_NAME) or (T.EMERGENCY_FIRST_NAME IS NULL and S.EMERGENCY_FIRST_NAME IS NULL)) and
		((T.EMERGENCY_LAST_NAME = S.EMERGENCY_LAST_NAME) or (T.EMERGENCY_LAST_NAME IS NULL and S.EMERGENCY_LAST_NAME IS NULL)) and
		((T.EMERGENCY_PHONE = S.EMERGENCY_PHONE) or (T.EMERGENCY_PHONE IS NULL and S.EMERGENCY_PHONE IS NULL)) and
		((T.FIRST_NAME = S.FIRST_NAME) or (T.FIRST_NAME IS NULL and S.FIRST_NAME IS NULL)) and
		((T.GENDER = S.GENDER) or (T.GENDER IS NULL and S.GENDER IS NULL)) and
		((T.GRADE = S.GRADE) or (T.GRADE IS NULL and S.GRADE IS NULL)) and
		((T.GRADUATION_YEAR = S.GRADUATION_YEAR) or (T.GRADUATION_YEAR IS NULL and S.GRADUATION_YEAR IS NULL)) and
		((T.HOMEROOM = S.HOMEROOM) or (T.HOMEROOM IS NULL and S.HOMEROOM IS NULL)) and
		((T.LAST_NAME = S.LAST_NAME) or (T.LAST_NAME IS NULL and S.LAST_NAME IS NULL)) and
		((T.LOCKER = S.LOCKER) or (T.LOCKER IS NULL and S.LOCKER IS NULL)) and
		((T.MAJOR = S.MAJOR) or (T.MAJOR IS NULL and S.MAJOR IS NULL)) and
		((T.MIDDLE_NAME = S.MIDDLE_NAME) or (T.MIDDLE_NAME IS NULL and S.MIDDLE_NAME IS NULL)) and
		((T.MINOR = S.MINOR) or (T.MINOR IS NULL and S.MINOR IS NULL)) and
		((T.EVENING_PHONE = S.EVENING_PHONE) or (T.EVENING_PHONE IS NULL and S.EVENING_PHONE IS NULL)) and
		((T.PERIOD = S.PERIOD) or (T.PERIOD IS NULL and S.PERIOD IS NULL)) and
		((T.POSTAL_CODE = S.POSTAL_CODE) or (T.POSTAL_CODE IS NULL and S.POSTAL_CODE IS NULL)) and
		((T.SQUADRON = S.SQUADRON) or (T.SQUADRON IS NULL and S.SQUADRON IS NULL)) and
		((T.STATE = S.STATE) or (T.STATE IS NULL and S.STATE IS NULL)) and
		((T.SUBJECT_EXTRA_DATA = S.SUBJECT_EXTRA_DATA) or (T.SUBJECT_EXTRA_DATA IS NULL and S.SUBJECT_EXTRA_DATA IS NULL)) and
		((T.TEACHER_FIRST_NAME = S.TEACHER_FIRST_NAME) or (T.TEACHER_FIRST_NAME IS NULL and S.TEACHER_FIRST_NAME IS NULL)) and
		((T.TEACHER_LAST_NAME = S.TEACHER_LAST_NAME) or (T.TEACHER_LAST_NAME IS NULL and S.TEACHER_LAST_NAME IS NULL)) and
		((T.TEACHER_MIDDLE_NAME = S.TEACHER_MIDDLE_NAME) or (T.TEACHER_MIDDLE_NAME IS NULL and S.TEACHER_MIDDLE_NAME IS NULL)) and
		((T.TEACHER_NAME = S.TEACHER_NAME) or (T.TEACHER_NAME IS NULL and S.TEACHER_NAME IS NULL)) and
		((T.TEACHER_NBR = S.TEACHER_NBR) or (T.TEACHER_NBR IS NULL and S.TEACHER_NBR IS NULL)) and
		((T.TEACHER_TITLE = S.TEACHER_TITLE) or (T.TEACHER_TITLE IS NULL and S.TEACHER_TITLE IS NULL)) and
		((T.TRACK = S.TRACK) or (T.TRACK IS NULL and S.TRACK IS NULL)) and
		((T.STAFF_CODE = S.STAFF_CODE) or (T.STAFF_CODE IS NULL and S.STAFF_CODE IS NULL)) and
		((T.STAFF_FLAG = S.STAFF_FLAG) or (T.STAFF_FLAG IS NULL and S.STAFF_FLAG IS NULL)) and
		((T.EXTERNAL_SUBJECT_ID = S.EXTERNAL_SUBJECT_ID) or (T.EXTERNAL_SUBJECT_ID IS NULL and S.EXTERNAL_SUBJECT_ID IS NULL)) and
		((T.REVISION_NO = S.REVISION_NO) or (T.REVISION_NO IS NULL and S.REVISION_NO IS NULL)) and
		((T.ACTIVE = S.ACTIVE) or (T.ACTIVE IS NULL and S.ACTIVE IS NULL)) and
		((T.VALID = S.VALID) or (T.VALID IS NULL and S.VALID IS NULL)) and
		((T.BIRTH_DATE = S.BIRTH_DATE) or (T.BIRTH_DATE IS NULL and S.BIRTH_DATE IS NULL)) and
		((T.STAFF_INDICATOR = S.STAFF_INDICATOR) or (T.STAFF_INDICATOR IS NULL and S.STAFF_INDICATOR IS NULL)) and
		((T.AREA_CODE = S.AREA_CODE) or (T.AREA_CODE IS NULL and S.AREA_CODE IS NULL)) and
		((T.EXCHANGE = S.EXCHANGE) or (T.EXCHANGE IS NULL and S.EXCHANGE IS NULL)) and
		((T.PHONE = S.PHONE) or (T.PHONE IS NULL and S.PHONE IS NULL)) and
		((T.EMAIL2 = S.EMAIL2) or (T.EMAIL2 IS NULL and S.EMAIL2 IS NULL)) and
		((T.EMAIL_MISC = S.EMAIL_MISC) or (T.EMAIL_MISC IS NULL and S.EMAIL_MISC IS NULL)) and
		((T.POSITION = S.POSITION) or (T.POSITION IS NULL and S.POSITION IS NULL)) and
		((T.COLLEGE_ORG = S.COLLEGE_ORG) or (T.COLLEGE_ORG IS NULL and S.COLLEGE_ORG IS NULL)) and
		((T.FLIGHT = S.FLIGHT) or (T.FLIGHT IS NULL and S.FLIGHT IS NULL)) and
		((T.MIDDLE_INIT = S.MIDDLE_INIT) or (T.MIDDLE_INIT IS NULL and S.MIDDLE_INIT IS NULL)) and
		((T.ACCESS_CODE = S.ACCESS_CODE) or (T.ACCESS_CODE IS NULL and S.ACCESS_CODE IS NULL)) and
		((T.AGE = S.AGE) or (T.AGE IS NULL and S.AGE IS NULL)) and
		((T.MISCELLANEOUS = S.MISCELLANEOUS) or (T.MISCELLANEOUS IS NULL and S.MISCELLANEOUS IS NULL)) and
		((T.COURTESY = S.COURTESY) or (T.COURTESY IS NULL and S.COURTESY IS NULL)) and
		((T.MISC_INFO = S.MISC_INFO) or (T.MISC_INFO IS NULL and S.MISC_INFO IS NULL)) and
		((T.BIRTHDATE = S.BIRTHDATE) or (T.BIRTHDATE IS NULL and S.BIRTHDATE IS NULL)) and
		((T.APO_ID = S.APO_ID) or (T.APO_ID IS NULL and S.APO_ID IS NULL)) and
		((T.OMS_SUBJECT_ID = S.OMS_SUBJECT_ID) or (T.OMS_SUBJECT_ID IS NULL and S.OMS_SUBJECT_ID IS NULL))
        )

  
  

  



&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_SAS_SUBJECT_STG1397001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 14 */
/* Create Index on flow table */

-- create index	RAX_APP_USER.I$_SAS_SUBJECT_STG_IDX1397001
-- on		RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 (SUBJECT_ID)
-- NOLOGGING


BEGIN
  EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.I$_SAS_SUBJECT_STG_IDX1397001
on   RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 (SUBJECT_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long or such column list already indexed (ORA-00972 or ORA-01408)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* create check table */

BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.SNP_CHECK_TAB';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;


&

-- create table RAX_APP_USER.SNP_CHECK_TAB
-- (
-- 	CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
-- 	FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
-- 	ERR_TYPE		VARCHAR2(1 CHAR) NULL,
-- 	ERR_MESS		VARCHAR2(250 CHAR) NULL ,
-- 	CHECK_DATE	DATE NULL,
-- 	ORIGIN		VARCHAR2(100 CHAR) NULL,
-- 	CONS_NAME	VARCHAR2(35 CHAR) NULL,
-- 	CONS_TYPE		VARCHAR2(2 CHAR) NULL,
-- 	ERR_COUNT		NUMBER(10) NULL
-- )

BEGIN
   EXECUTE IMMEDIATE '
      create table RAX_APP_USER.SNP_CHECK_TAB
		(
			CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
			SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
			RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
			FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
			ERR_TYPE		VARCHAR2(1 CHAR) NULL,
			ERR_MESS		VARCHAR2(250 CHAR) NULL ,
			CHECK_DATE	DATE NULL,
			ORIGIN		VARCHAR2(100 CHAR) NULL,
			CONS_NAME	VARCHAR2(35 CHAR) NULL,
			CONS_TYPE		VARCHAR2(2 CHAR) NULL,
			ERR_COUNT		NUMBER(10) NULL
		)
   ';
END;


&


/*-----------------------------------------------*/
/* TASK No. 16 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_STAGE'
and	ORIGIN 		= '(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT'
and	ERR_TYPE 		= 'F'


&


/*-----------------------------------------------*/
/* TASK No. 17 */
/* create error table */

BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.E$_SAS_SUBJECT_STG1397001';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;

&


create table RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_ROW_ID 		UROWID,
	ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
	ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
	ODI_CHECK_DATE	DATE NULL, 
	SUBJECT_ID	NUMBER(19) NULL,
	AUDIT_CREATE_DATE	TIMESTAMP(6) NULL,
	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFY_DATE	TIMESTAMP(6) NULL,
	SUBJECT_KEY	VARCHAR2(36) NULL,
	ADDRESS_LINE_1	VARCHAR2(50) NULL,
	ADDRESS_LINE_2	VARCHAR2(50) NULL,
	AS_OF_DATE	TIMESTAMP(6) NULL,
	BUS_NBR	VARCHAR2(50) NULL,
	CITY	VARCHAR2(30) NULL,
	COUNTRY	VARCHAR2(2) NULL,
	COURTESY_TITLE	VARCHAR2(50) NULL,
	DAYTIME_PHONE	VARCHAR2(20) NULL,
	EMAIL_ADDRESS	VARCHAR2(320) NULL,
	EMERGENCY_FIRST_NAME	VARCHAR2(50) NULL,
	EMERGENCY_LAST_NAME	VARCHAR2(50) NULL,
	EMERGENCY_PHONE	VARCHAR2(50) NULL,
	FIRST_NAME	VARCHAR2(50) NULL,
	GENDER	VARCHAR2(1) NULL,
	GRADE	VARCHAR2(10) NULL,
	GRADUATION_YEAR	VARCHAR2(10) NULL,
	HOMEROOM	VARCHAR2(10) NULL,
	LAST_NAME	VARCHAR2(50) NULL,
	LOCKER	VARCHAR2(50) NULL,
	MAJOR	VARCHAR2(50) NULL,
	MIDDLE_NAME	VARCHAR2(50) NULL,
	MINOR	VARCHAR2(50) NULL,
	EVENING_PHONE	VARCHAR2(20) NULL,
	PERIOD	VARCHAR2(10) NULL,
	POSTAL_CODE	VARCHAR2(10) NULL,
	SQUADRON	VARCHAR2(50) NULL,
	STATE	VARCHAR2(10) NULL,
	SUBJECT_EXTRA_DATA	VARCHAR2(255) NULL,
	TEACHER_FIRST_NAME	VARCHAR2(50) NULL,
	TEACHER_LAST_NAME	VARCHAR2(50) NULL,
	TEACHER_MIDDLE_NAME	VARCHAR2(50) NULL,
	TEACHER_NAME	VARCHAR2(40) NULL,
	TEACHER_NBR	VARCHAR2(10) NULL,
	TEACHER_TITLE	VARCHAR2(50) NULL,
	TRACK	VARCHAR2(50) NULL,
	STAFF_CODE	VARCHAR2(10) NULL,
	STAFF_FLAG	VARCHAR2(1) NULL,
	EXTERNAL_SUBJECT_ID	VARCHAR2(255) NULL,
	REVISION_NO	NUMBER(10) NULL,
	ACTIVE	NUMBER(1) NULL,
	VALID	NUMBER(1) NULL,
	BIRTH_DATE	VARCHAR2(25) NULL,
	STAFF_INDICATOR	VARCHAR2(255) NULL,
	AREA_CODE	VARCHAR2(3) NULL,
	EXCHANGE	VARCHAR2(3) NULL,
	PHONE	VARCHAR2(4) NULL,
	EMAIL2	VARCHAR2(50) NULL,
	EMAIL_MISC	VARCHAR2(50) NULL,
	POSITION	VARCHAR2(64) NULL,
	COLLEGE_ORG	VARCHAR2(50) NULL,
	FLIGHT	VARCHAR2(50) NULL,
	MIDDLE_INIT	VARCHAR2(50) NULL,
	ACCESS_CODE	VARCHAR2(6) NULL,
	AGE	NUMBER(3) NULL,
	MISCELLANEOUS	VARCHAR2(50) NULL,
	COURTESY	VARCHAR2(50) NULL,
	MISC_INFO	VARCHAR2(50) NULL,
	BIRTHDATE	VARCHAR2(25) NULL,
	APO_ID	VARCHAR2(255) NULL,
	OMS_SUBJECT_ID	VARCHAR2(15) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL,
	ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
	ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
	ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
	ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
	ODI_SESS_NO		VARCHAR2(19 CHAR)
)



&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT')


&


/*-----------------------------------------------*/
/* TASK No. 19 */
/* Create index on PK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
-- create index 	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
-- on	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 (SUBJECT_ID)


BEGIN
  EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
on   RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 (SUBJECT_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long or such column list already indexed (ORA-00972 or ORA-01408)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;


&


/*-----------------------------------------------*/
/* TASK No. 20 */
/* insert PK errors */

DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                     VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_SAS_SUBJECT_STG' INTO CheckTable FROM DUAL;
               SELECT 'ODS_STAGE.SAS_SUBJECT_STG' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '1397001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	''F'', 
	''ODI-15064: The primary key SUBJECT_PK is not unique.'',
	''(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT'',
	sysdate,
	''SUBJECT_PK'',
	''PK'',	
	SAS_SUBJECT_STG.SUBJECT_ID,
	SAS_SUBJECT_STG.AUDIT_CREATE_DATE,
	SAS_SUBJECT_STG.AUDIT_CREATED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFIED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFY_DATE,
	SAS_SUBJECT_STG.SUBJECT_KEY,
	SAS_SUBJECT_STG.ADDRESS_LINE_1,
	SAS_SUBJECT_STG.ADDRESS_LINE_2,
	SAS_SUBJECT_STG.AS_OF_DATE,
	SAS_SUBJECT_STG.BUS_NBR,
	SAS_SUBJECT_STG.CITY,
	SAS_SUBJECT_STG.COUNTRY,
	SAS_SUBJECT_STG.COURTESY_TITLE,
	SAS_SUBJECT_STG.DAYTIME_PHONE,
	SAS_SUBJECT_STG.EMAIL_ADDRESS,
	SAS_SUBJECT_STG.EMERGENCY_FIRST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_LAST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_PHONE,
	SAS_SUBJECT_STG.FIRST_NAME,
	SAS_SUBJECT_STG.GENDER,
	SAS_SUBJECT_STG.GRADE,
	SAS_SUBJECT_STG.GRADUATION_YEAR,
	SAS_SUBJECT_STG.HOMEROOM,
	SAS_SUBJECT_STG.LAST_NAME,
	SAS_SUBJECT_STG.LOCKER,
	SAS_SUBJECT_STG.MAJOR,
	SAS_SUBJECT_STG.MIDDLE_NAME,
	SAS_SUBJECT_STG.MINOR,
	SAS_SUBJECT_STG.EVENING_PHONE,
	SAS_SUBJECT_STG.PERIOD,
	SAS_SUBJECT_STG.POSTAL_CODE,
	SAS_SUBJECT_STG.SQUADRON,
	SAS_SUBJECT_STG.STATE,
	SAS_SUBJECT_STG.SUBJECT_EXTRA_DATA,
	SAS_SUBJECT_STG.TEACHER_FIRST_NAME,
	SAS_SUBJECT_STG.TEACHER_LAST_NAME,
	SAS_SUBJECT_STG.TEACHER_MIDDLE_NAME,
	SAS_SUBJECT_STG.TEACHER_NAME,
	SAS_SUBJECT_STG.TEACHER_NBR,
	SAS_SUBJECT_STG.TEACHER_TITLE,
	SAS_SUBJECT_STG.TRACK,
	SAS_SUBJECT_STG.STAFF_CODE,
	SAS_SUBJECT_STG.STAFF_FLAG,
	SAS_SUBJECT_STG.EXTERNAL_SUBJECT_ID,
	SAS_SUBJECT_STG.REVISION_NO,
	SAS_SUBJECT_STG.ACTIVE,
	SAS_SUBJECT_STG.VALID,
	SAS_SUBJECT_STG.BIRTH_DATE,
	SAS_SUBJECT_STG.STAFF_INDICATOR,
	SAS_SUBJECT_STG.AREA_CODE,
	SAS_SUBJECT_STG.EXCHANGE,
	SAS_SUBJECT_STG.PHONE,
	SAS_SUBJECT_STG.EMAIL2,
	SAS_SUBJECT_STG.EMAIL_MISC,
	SAS_SUBJECT_STG.POSITION,
	SAS_SUBJECT_STG.COLLEGE_ORG,
	SAS_SUBJECT_STG.FLIGHT,
	SAS_SUBJECT_STG.MIDDLE_INIT,
	SAS_SUBJECT_STG.ACCESS_CODE,
	SAS_SUBJECT_STG.AGE,
	SAS_SUBJECT_STG.MISCELLANEOUS,
	SAS_SUBJECT_STG.COURTESY,
	SAS_SUBJECT_STG.MISC_INFO,
	SAS_SUBJECT_STG.BIRTHDATE,
	SAS_SUBJECT_STG.APO_ID,
	SAS_SUBJECT_STG.OMS_SUBJECT_ID,
	SAS_SUBJECT_STG.ODS_CREATE_DATE,
	SAS_SUBJECT_STG.ODS_MODIFY_DATE
from	'
 || VariableCheckTable || 
' SAS_SUBJECT_STG 
where	exists  (
		select	SUB1.SUBJECT_ID
		from 	' 
|| VariableCheckTable ||
'  SUB1
		where 	SUB1.SUBJECT_ID=SAS_SUBJECT_STG.SUBJECT_ID
		group by 	SUB1.SUBJECT_ID
		having 	count(1) > 1
		)
';

END;


&


/*-----------------------------------------------*/
/* TASK No. 21 */
/* Create index on AK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
-- create index 	SAS_IDX_EXTERNAL_SUBJECT_ID_flow
-- on	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 
-- 	(EXTERNAL_SUBJECT_ID)

BEGIN
  EXECUTE IMMEDIATE 'create index SAS_IDX_EXTERNAL_SUBJECT_ID_flow
on   RAX_APP_USER.I$_SAS_SUBJECT_STG1397001  (EXTERNAL_SUBJECT_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long (ORA-00972)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Identifier is too long. Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 22 */
/* insert AK errors */

DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_SAS_SUBJECT_STG' INTO CheckTable FROM DUAL;
               SELECT 'ODS_STAGE.SAS_SUBJECT_STG' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '1397001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	''F'', 
	''ODI-15063: The alternate key SAS_IDX_EXTERNAL_SUBJECT_ID is not unique.'',
	''(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT'',
	sysdate,
	''SAS_IDX_EXTERNAL_SUBJECT_ID'',
	''AK'',	
	SAS_SUBJECT_STG.SUBJECT_ID,
	SAS_SUBJECT_STG.AUDIT_CREATE_DATE,
	SAS_SUBJECT_STG.AUDIT_CREATED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFIED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFY_DATE,
	SAS_SUBJECT_STG.SUBJECT_KEY,
	SAS_SUBJECT_STG.ADDRESS_LINE_1,
	SAS_SUBJECT_STG.ADDRESS_LINE_2,
	SAS_SUBJECT_STG.AS_OF_DATE,
	SAS_SUBJECT_STG.BUS_NBR,
	SAS_SUBJECT_STG.CITY,
	SAS_SUBJECT_STG.COUNTRY,
	SAS_SUBJECT_STG.COURTESY_TITLE,
	SAS_SUBJECT_STG.DAYTIME_PHONE,
	SAS_SUBJECT_STG.EMAIL_ADDRESS,
	SAS_SUBJECT_STG.EMERGENCY_FIRST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_LAST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_PHONE,
	SAS_SUBJECT_STG.FIRST_NAME,
	SAS_SUBJECT_STG.GENDER,
	SAS_SUBJECT_STG.GRADE,
	SAS_SUBJECT_STG.GRADUATION_YEAR,
	SAS_SUBJECT_STG.HOMEROOM,
	SAS_SUBJECT_STG.LAST_NAME,
	SAS_SUBJECT_STG.LOCKER,
	SAS_SUBJECT_STG.MAJOR,
	SAS_SUBJECT_STG.MIDDLE_NAME,
	SAS_SUBJECT_STG.MINOR,
	SAS_SUBJECT_STG.EVENING_PHONE,
	SAS_SUBJECT_STG.PERIOD,
	SAS_SUBJECT_STG.POSTAL_CODE,
	SAS_SUBJECT_STG.SQUADRON,
	SAS_SUBJECT_STG.STATE,
	SAS_SUBJECT_STG.SUBJECT_EXTRA_DATA,
	SAS_SUBJECT_STG.TEACHER_FIRST_NAME,
	SAS_SUBJECT_STG.TEACHER_LAST_NAME,
	SAS_SUBJECT_STG.TEACHER_MIDDLE_NAME,
	SAS_SUBJECT_STG.TEACHER_NAME,
	SAS_SUBJECT_STG.TEACHER_NBR,
	SAS_SUBJECT_STG.TEACHER_TITLE,
	SAS_SUBJECT_STG.TRACK,
	SAS_SUBJECT_STG.STAFF_CODE,
	SAS_SUBJECT_STG.STAFF_FLAG,
	SAS_SUBJECT_STG.EXTERNAL_SUBJECT_ID,
	SAS_SUBJECT_STG.REVISION_NO,
	SAS_SUBJECT_STG.ACTIVE,
	SAS_SUBJECT_STG.VALID,
	SAS_SUBJECT_STG.BIRTH_DATE,
	SAS_SUBJECT_STG.STAFF_INDICATOR,
	SAS_SUBJECT_STG.AREA_CODE,
	SAS_SUBJECT_STG.EXCHANGE,
	SAS_SUBJECT_STG.PHONE,
	SAS_SUBJECT_STG.EMAIL2,
	SAS_SUBJECT_STG.EMAIL_MISC,
	SAS_SUBJECT_STG.POSITION,
	SAS_SUBJECT_STG.COLLEGE_ORG,
	SAS_SUBJECT_STG.FLIGHT,
	SAS_SUBJECT_STG.MIDDLE_INIT,
	SAS_SUBJECT_STG.ACCESS_CODE,
	SAS_SUBJECT_STG.AGE,
	SAS_SUBJECT_STG.MISCELLANEOUS,
	SAS_SUBJECT_STG.COURTESY,
	SAS_SUBJECT_STG.MISC_INFO,
	SAS_SUBJECT_STG.BIRTHDATE,
	SAS_SUBJECT_STG.APO_ID,
	SAS_SUBJECT_STG.OMS_SUBJECT_ID,
	SAS_SUBJECT_STG.ODS_CREATE_DATE,
	SAS_SUBJECT_STG.ODS_MODIFY_DATE
from              '	
 || VariableCheckTable || 
' SAS_SUBJECT_STG
where	exists  (
		select	SUB.EXTERNAL_SUBJECT_ID
		from 	'
 || VariableCheckTable || 
' SUB
		where 	SUB.EXTERNAL_SUBJECT_ID=SAS_SUBJECT_STG.EXTERNAL_SUBJECT_ID
		group by 	SUB.EXTERNAL_SUBJECT_ID
		having 	count(1) > 1
		)
 ';

END;

/*  Checked Datastore =RAX_APP_USER.I$_SAS_SUBJECT_STG  */
/*  Integration Datastore =RAX_APP_USER.I$_SAS_SUBJECT_STG   */
/*  Target Datastore =ODS_STAGE.SAS_SUBJECT_STG */



&


/*-----------------------------------------------*/
/* TASK No. 23 */
/* Create index on AK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
-- create index 	SAS_IDX_SUBJECT_KEY_flow
-- on	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 
-- 	(SUBJECT_KEY)

BEGIN
  EXECUTE IMMEDIATE 'create index 	SAS_IDX_SUBJECT_KEY_flow
on   RAX_APP_USER.I$_SAS_SUBJECT_STG1397001  (SUBJECT_KEY)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long or such column list already indexed (ORA-00972 or ORA-01408)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 24 */
/* insert AK errors */

DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_SAS_SUBJECT_STG' INTO CheckTable FROM DUAL;
               SELECT 'ODS_STAGE.SAS_SUBJECT_STG' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '1397001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	''F'', 
	''ODI-15063: The alternate key SAS_IDX_SUBJECT_KEY is not unique.'',
	''(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT'',
	sysdate,
	''SAS_IDX_SUBJECT_KEY'',
	''AK'',	
	SAS_SUBJECT_STG.SUBJECT_ID,
	SAS_SUBJECT_STG.AUDIT_CREATE_DATE,
	SAS_SUBJECT_STG.AUDIT_CREATED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFIED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFY_DATE,
	SAS_SUBJECT_STG.SUBJECT_KEY,
	SAS_SUBJECT_STG.ADDRESS_LINE_1,
	SAS_SUBJECT_STG.ADDRESS_LINE_2,
	SAS_SUBJECT_STG.AS_OF_DATE,
	SAS_SUBJECT_STG.BUS_NBR,
	SAS_SUBJECT_STG.CITY,
	SAS_SUBJECT_STG.COUNTRY,
	SAS_SUBJECT_STG.COURTESY_TITLE,
	SAS_SUBJECT_STG.DAYTIME_PHONE,
	SAS_SUBJECT_STG.EMAIL_ADDRESS,
	SAS_SUBJECT_STG.EMERGENCY_FIRST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_LAST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_PHONE,
	SAS_SUBJECT_STG.FIRST_NAME,
	SAS_SUBJECT_STG.GENDER,
	SAS_SUBJECT_STG.GRADE,
	SAS_SUBJECT_STG.GRADUATION_YEAR,
	SAS_SUBJECT_STG.HOMEROOM,
	SAS_SUBJECT_STG.LAST_NAME,
	SAS_SUBJECT_STG.LOCKER,
	SAS_SUBJECT_STG.MAJOR,
	SAS_SUBJECT_STG.MIDDLE_NAME,
	SAS_SUBJECT_STG.MINOR,
	SAS_SUBJECT_STG.EVENING_PHONE,
	SAS_SUBJECT_STG.PERIOD,
	SAS_SUBJECT_STG.POSTAL_CODE,
	SAS_SUBJECT_STG.SQUADRON,
	SAS_SUBJECT_STG.STATE,
	SAS_SUBJECT_STG.SUBJECT_EXTRA_DATA,
	SAS_SUBJECT_STG.TEACHER_FIRST_NAME,
	SAS_SUBJECT_STG.TEACHER_LAST_NAME,
	SAS_SUBJECT_STG.TEACHER_MIDDLE_NAME,
	SAS_SUBJECT_STG.TEACHER_NAME,
	SAS_SUBJECT_STG.TEACHER_NBR,
	SAS_SUBJECT_STG.TEACHER_TITLE,
	SAS_SUBJECT_STG.TRACK,
	SAS_SUBJECT_STG.STAFF_CODE,
	SAS_SUBJECT_STG.STAFF_FLAG,
	SAS_SUBJECT_STG.EXTERNAL_SUBJECT_ID,
	SAS_SUBJECT_STG.REVISION_NO,
	SAS_SUBJECT_STG.ACTIVE,
	SAS_SUBJECT_STG.VALID,
	SAS_SUBJECT_STG.BIRTH_DATE,
	SAS_SUBJECT_STG.STAFF_INDICATOR,
	SAS_SUBJECT_STG.AREA_CODE,
	SAS_SUBJECT_STG.EXCHANGE,
	SAS_SUBJECT_STG.PHONE,
	SAS_SUBJECT_STG.EMAIL2,
	SAS_SUBJECT_STG.EMAIL_MISC,
	SAS_SUBJECT_STG.POSITION,
	SAS_SUBJECT_STG.COLLEGE_ORG,
	SAS_SUBJECT_STG.FLIGHT,
	SAS_SUBJECT_STG.MIDDLE_INIT,
	SAS_SUBJECT_STG.ACCESS_CODE,
	SAS_SUBJECT_STG.AGE,
	SAS_SUBJECT_STG.MISCELLANEOUS,
	SAS_SUBJECT_STG.COURTESY,
	SAS_SUBJECT_STG.MISC_INFO,
	SAS_SUBJECT_STG.BIRTHDATE,
	SAS_SUBJECT_STG.APO_ID,
	SAS_SUBJECT_STG.OMS_SUBJECT_ID,
	SAS_SUBJECT_STG.ODS_CREATE_DATE,
	SAS_SUBJECT_STG.ODS_MODIFY_DATE
from              '	
 || VariableCheckTable || 
' SAS_SUBJECT_STG
where	exists  (
		select	SUB.SUBJECT_KEY
		from 	'
 || VariableCheckTable || 
' SUB
		where 	SUB.SUBJECT_KEY=SAS_SUBJECT_STG.SUBJECT_KEY
		group by 	SUB.SUBJECT_KEY
		having 	count(1) > 1
		)
 ';

END;

/*  Checked Datastore =RAX_APP_USER.I$_SAS_SUBJECT_STG  */
/*  Integration Datastore =RAX_APP_USER.I$_SAS_SUBJECT_STG   */
/*  Target Datastore =ODS_STAGE.SAS_SUBJECT_STG */



&


/*-----------------------------------------------*/
/* TASK No. 25 */
/* Create index on AK */

 
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */
-- create index 	SAS_SUBJECT_PK1_flow
-- on	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 
-- 	(SUBJECT_ID)

BEGIN
  EXECUTE IMMEDIATE 'create index 	SAS_SUBJECT_PK1_flow
on   RAX_APP_USER.I$_SAS_SUBJECT_STG1397001   (SUBJECT_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long or such column list already indexed (ORA-00972 or ORA-01408)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 26 */
/* insert AK errors */

DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_SAS_SUBJECT_STG' INTO CheckTable FROM DUAL;
               SELECT 'ODS_STAGE.SAS_SUBJECT_STG' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '1397001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	''F'', 
	''ODI-15063: The alternate key SAS_SUBJECT_PK1 is not unique.'',
	''(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT'',
	sysdate,
	''SAS_SUBJECT_PK1'',
	''AK'',	
	SAS_SUBJECT_STG.SUBJECT_ID,
	SAS_SUBJECT_STG.AUDIT_CREATE_DATE,
	SAS_SUBJECT_STG.AUDIT_CREATED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFIED_BY,
	SAS_SUBJECT_STG.AUDIT_MODIFY_DATE,
	SAS_SUBJECT_STG.SUBJECT_KEY,
	SAS_SUBJECT_STG.ADDRESS_LINE_1,
	SAS_SUBJECT_STG.ADDRESS_LINE_2,
	SAS_SUBJECT_STG.AS_OF_DATE,
	SAS_SUBJECT_STG.BUS_NBR,
	SAS_SUBJECT_STG.CITY,
	SAS_SUBJECT_STG.COUNTRY,
	SAS_SUBJECT_STG.COURTESY_TITLE,
	SAS_SUBJECT_STG.DAYTIME_PHONE,
	SAS_SUBJECT_STG.EMAIL_ADDRESS,
	SAS_SUBJECT_STG.EMERGENCY_FIRST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_LAST_NAME,
	SAS_SUBJECT_STG.EMERGENCY_PHONE,
	SAS_SUBJECT_STG.FIRST_NAME,
	SAS_SUBJECT_STG.GENDER,
	SAS_SUBJECT_STG.GRADE,
	SAS_SUBJECT_STG.GRADUATION_YEAR,
	SAS_SUBJECT_STG.HOMEROOM,
	SAS_SUBJECT_STG.LAST_NAME,
	SAS_SUBJECT_STG.LOCKER,
	SAS_SUBJECT_STG.MAJOR,
	SAS_SUBJECT_STG.MIDDLE_NAME,
	SAS_SUBJECT_STG.MINOR,
	SAS_SUBJECT_STG.EVENING_PHONE,
	SAS_SUBJECT_STG.PERIOD,
	SAS_SUBJECT_STG.POSTAL_CODE,
	SAS_SUBJECT_STG.SQUADRON,
	SAS_SUBJECT_STG.STATE,
	SAS_SUBJECT_STG.SUBJECT_EXTRA_DATA,
	SAS_SUBJECT_STG.TEACHER_FIRST_NAME,
	SAS_SUBJECT_STG.TEACHER_LAST_NAME,
	SAS_SUBJECT_STG.TEACHER_MIDDLE_NAME,
	SAS_SUBJECT_STG.TEACHER_NAME,
	SAS_SUBJECT_STG.TEACHER_NBR,
	SAS_SUBJECT_STG.TEACHER_TITLE,
	SAS_SUBJECT_STG.TRACK,
	SAS_SUBJECT_STG.STAFF_CODE,
	SAS_SUBJECT_STG.STAFF_FLAG,
	SAS_SUBJECT_STG.EXTERNAL_SUBJECT_ID,
	SAS_SUBJECT_STG.REVISION_NO,
	SAS_SUBJECT_STG.ACTIVE,
	SAS_SUBJECT_STG.VALID,
	SAS_SUBJECT_STG.BIRTH_DATE,
	SAS_SUBJECT_STG.STAFF_INDICATOR,
	SAS_SUBJECT_STG.AREA_CODE,
	SAS_SUBJECT_STG.EXCHANGE,
	SAS_SUBJECT_STG.PHONE,
	SAS_SUBJECT_STG.EMAIL2,
	SAS_SUBJECT_STG.EMAIL_MISC,
	SAS_SUBJECT_STG.POSITION,
	SAS_SUBJECT_STG.COLLEGE_ORG,
	SAS_SUBJECT_STG.FLIGHT,
	SAS_SUBJECT_STG.MIDDLE_INIT,
	SAS_SUBJECT_STG.ACCESS_CODE,
	SAS_SUBJECT_STG.AGE,
	SAS_SUBJECT_STG.MISCELLANEOUS,
	SAS_SUBJECT_STG.COURTESY,
	SAS_SUBJECT_STG.MISC_INFO,
	SAS_SUBJECT_STG.BIRTHDATE,
	SAS_SUBJECT_STG.APO_ID,
	SAS_SUBJECT_STG.OMS_SUBJECT_ID,
	SAS_SUBJECT_STG.ODS_CREATE_DATE,
	SAS_SUBJECT_STG.ODS_MODIFY_DATE
from              '	
 || VariableCheckTable || 
' SAS_SUBJECT_STG
where	exists  (
		select	SUB.SUBJECT_ID
		from 	'
 || VariableCheckTable || 
' SUB
		where 	SUB.SUBJECT_ID=SAS_SUBJECT_STG.SUBJECT_ID
		group by 	SUB.SUBJECT_ID
		having 	count(1) > 1
		)
 ';

END;

/*  Checked Datastore =RAX_APP_USER.I$_SAS_SUBJECT_STG  */
/*  Integration Datastore =RAX_APP_USER.I$_SAS_SUBJECT_STG   */
/*  Target Datastore =ODS_STAGE.SAS_SUBJECT_STG */



&


/*-----------------------------------------------*/
/* TASK No. 27 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SUBJECT_ID cannot be null.',
	sysdate,
	'(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT',
	'SUBJECT_ID',
	'NN',	
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
where	SUBJECT_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 28 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column FIRST_NAME cannot be null.',
	sysdate,
	'(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT',
	'FIRST_NAME',
	'NN',	
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
where	FIRST_NAME is null



&


/*-----------------------------------------------*/
/* TASK No. 29 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column GRADE cannot be null.',
	sysdate,
	'(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT',
	'GRADE',
	'NN',	
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
where	GRADE is null



&


/*-----------------------------------------------*/
/* TASK No. 30 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column LAST_NAME cannot be null.',
	sysdate,
	'(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT',
	'LAST_NAME',
	'NN',	
	SUBJECT_ID,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFIED_BY,
	AUDIT_MODIFY_DATE,
	SUBJECT_KEY,
	ADDRESS_LINE_1,
	ADDRESS_LINE_2,
	AS_OF_DATE,
	BUS_NBR,
	CITY,
	COUNTRY,
	COURTESY_TITLE,
	DAYTIME_PHONE,
	EMAIL_ADDRESS,
	EMERGENCY_FIRST_NAME,
	EMERGENCY_LAST_NAME,
	EMERGENCY_PHONE,
	FIRST_NAME,
	GENDER,
	GRADE,
	GRADUATION_YEAR,
	HOMEROOM,
	LAST_NAME,
	LOCKER,
	MAJOR,
	MIDDLE_NAME,
	MINOR,
	EVENING_PHONE,
	PERIOD,
	POSTAL_CODE,
	SQUADRON,
	STATE,
	SUBJECT_EXTRA_DATA,
	TEACHER_FIRST_NAME,
	TEACHER_LAST_NAME,
	TEACHER_MIDDLE_NAME,
	TEACHER_NAME,
	TEACHER_NBR,
	TEACHER_TITLE,
	TRACK,
	STAFF_CODE,
	STAFF_FLAG,
	EXTERNAL_SUBJECT_ID,
	REVISION_NO,
	ACTIVE,
	VALID,
	BIRTH_DATE,
	STAFF_INDICATOR,
	AREA_CODE,
	EXCHANGE,
	PHONE,
	EMAIL2,
	EMAIL_MISC,
	POSITION,
	COLLEGE_ORG,
	FLIGHT,
	MIDDLE_INIT,
	ACCESS_CODE,
	AGE,
	MISCELLANEOUS,
	COURTESY,
	MISC_INFO,
	BIRTHDATE,
	APO_ID,
	OMS_SUBJECT_ID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001
where	LAST_NAME is null



&


/*-----------------------------------------------*/
/* TASK No. 31 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */
-- create index 	RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
-- on	RAX_APP_USER.E$_SAS_SUBJECT_STG1397001 (ODI_ROW_ID)

BEGIN
  EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_SAS_SUBJECT_STG1397001
on   RAX_APP_USER.E$_SAS_SUBJECT_STG1397001 (ODI_ROW_ID)';
EXCEPTION
  WHEN OTHERS THEN
   -- Handle the case where the identifier is too long or such column list already indexed (ORA-00972 or ORA-01408)
   IF SQLCODE = -972 or  SQLCODE = -1408 or SQLCODE = -955  THEN
     DBMS_OUTPUT.PUT_LINE('Skipping creation of index.');
   ELSE
     RAISE;
   END IF;
END;


&


/*-----------------------------------------------*/
/* TASK No. 32 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_SAS_SUBJECT_STG1397001 E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 33 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_STAGE',
	'SAS_SUBJECT_STG',
	'ODS_STAGE.SAS_SUBJECT_STG1397001',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_SAS_SUBJECT_STG1397001 E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(1397001)ODS_Project.LOAD_SAS_SUBJECT_STG_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 34 */
/* Merge Rows */

merge into	ODS_STAGE.SAS_SUBJECT_STG T
using	RAX_APP_USER.I$_SAS_SUBJECT_STG1397001 S
on	(
		T.SUBJECT_ID=S.SUBJECT_ID
	)
when matched
then update set
	T.AUDIT_CREATE_DATE	= S.AUDIT_CREATE_DATE,
	T.AUDIT_CREATED_BY	= S.AUDIT_CREATED_BY,
	T.AUDIT_MODIFIED_BY	= S.AUDIT_MODIFIED_BY,
	T.AUDIT_MODIFY_DATE	= S.AUDIT_MODIFY_DATE,
	T.SUBJECT_KEY	= S.SUBJECT_KEY,
	T.ADDRESS_LINE_1	= S.ADDRESS_LINE_1,
	T.ADDRESS_LINE_2	= S.ADDRESS_LINE_2,
	T.AS_OF_DATE	= S.AS_OF_DATE,
	T.BUS_NBR	= S.BUS_NBR,
	T.CITY	= S.CITY,
	T.COUNTRY	= S.COUNTRY,
	T.COURTESY_TITLE	= S.COURTESY_TITLE,
	T.DAYTIME_PHONE	= S.DAYTIME_PHONE,
	T.EMAIL_ADDRESS	= S.EMAIL_ADDRESS,
	T.EMERGENCY_FIRST_NAME	= S.EMERGENCY_FIRST_NAME,
	T.EMERGENCY_LAST_NAME	= S.EMERGENCY_LAST_NAME,
	T.EMERGENCY_PHONE	= S.EMERGENCY_PHONE,
	T.FIRST_NAME	= S.FIRST_NAME,
	T.GENDER	= S.GENDER,
	T.GRADE	= S.GRADE,
	T.GRADUATION_YEAR	= S.GRADUATION_YEAR,
	T.HOMEROOM	= S.HOMEROOM,
	T.LAST_NAME	= S.LAST_NAME,
	T.LOCKER	= S.LOCKER,
	T.MAJOR	= S.MAJOR,
	T.MIDDLE_NAME	= S.MIDDLE_NAME,
	T.MINOR	= S.MINOR,
	T.EVENING_PHONE	= S.EVENING_PHONE,
	T.PERIOD	= S.PERIOD,
	T.POSTAL_CODE	= S.POSTAL_CODE,
	T.SQUADRON	= S.SQUADRON,
	T.STATE	= S.STATE,
	T.SUBJECT_EXTRA_DATA	= S.SUBJECT_EXTRA_DATA,
	T.TEACHER_FIRST_NAME	= S.TEACHER_FIRST_NAME,
	T.TEACHER_LAST_NAME	= S.TEACHER_LAST_NAME,
	T.TEACHER_MIDDLE_NAME	= S.TEACHER_MIDDLE_NAME,
	T.TEACHER_NAME	= S.TEACHER_NAME,
	T.TEACHER_NBR	= S.TEACHER_NBR,
	T.TEACHER_TITLE	= S.TEACHER_TITLE,
	T.TRACK	= S.TRACK,
	T.STAFF_CODE	= S.STAFF_CODE,
	T.STAFF_FLAG	= S.STAFF_FLAG,
	T.EXTERNAL_SUBJECT_ID	= S.EXTERNAL_SUBJECT_ID,
	T.REVISION_NO	= S.REVISION_NO,
	T.ACTIVE	= S.ACTIVE,
	T.VALID	= S.VALID,
	T.BIRTH_DATE	= S.BIRTH_DATE,
	T.STAFF_INDICATOR	= S.STAFF_INDICATOR,
	T.AREA_CODE	= S.AREA_CODE,
	T.EXCHANGE	= S.EXCHANGE,
	T.PHONE	= S.PHONE,
	T.EMAIL2	= S.EMAIL2,
	T.EMAIL_MISC	= S.EMAIL_MISC,
	T.POSITION	= S.POSITION,
	T.COLLEGE_ORG	= S.COLLEGE_ORG,
	T.FLIGHT	= S.FLIGHT,
	T.MIDDLE_INIT	= S.MIDDLE_INIT,
	T.ACCESS_CODE	= S.ACCESS_CODE,
	T.AGE	= S.AGE,
	T.MISCELLANEOUS	= S.MISCELLANEOUS,
	T.COURTESY	= S.COURTESY,
	T.MISC_INFO	= S.MISC_INFO,
	T.BIRTHDATE	= S.BIRTHDATE,
	T.APO_ID	= S.APO_ID,
	T.OMS_SUBJECT_ID	= S.OMS_SUBJECT_ID
	,                                                                 T.ODS_MODIFY_DATE	= sysdate
when not matched
then insert
	(
	T.SUBJECT_ID,
	T.AUDIT_CREATE_DATE,
	T.AUDIT_CREATED_BY,
	T.AUDIT_MODIFIED_BY,
	T.AUDIT_MODIFY_DATE,
	T.SUBJECT_KEY,
	T.ADDRESS_LINE_1,
	T.ADDRESS_LINE_2,
	T.AS_OF_DATE,
	T.BUS_NBR,
	T.CITY,
	T.COUNTRY,
	T.COURTESY_TITLE,
	T.DAYTIME_PHONE,
	T.EMAIL_ADDRESS,
	T.EMERGENCY_FIRST_NAME,
	T.EMERGENCY_LAST_NAME,
	T.EMERGENCY_PHONE,
	T.FIRST_NAME,
	T.GENDER,
	T.GRADE,
	T.GRADUATION_YEAR,
	T.HOMEROOM,
	T.LAST_NAME,
	T.LOCKER,
	T.MAJOR,
	T.MIDDLE_NAME,
	T.MINOR,
	T.EVENING_PHONE,
	T.PERIOD,
	T.POSTAL_CODE,
	T.SQUADRON,
	T.STATE,
	T.SUBJECT_EXTRA_DATA,
	T.TEACHER_FIRST_NAME,
	T.TEACHER_LAST_NAME,
	T.TEACHER_MIDDLE_NAME,
	T.TEACHER_NAME,
	T.TEACHER_NBR,
	T.TEACHER_TITLE,
	T.TRACK,
	T.STAFF_CODE,
	T.STAFF_FLAG,
	T.EXTERNAL_SUBJECT_ID,
	T.REVISION_NO,
	T.ACTIVE,
	T.VALID,
	T.BIRTH_DATE,
	T.STAFF_INDICATOR,
	T.AREA_CODE,
	T.EXCHANGE,
	T.PHONE,
	T.EMAIL2,
	T.EMAIL_MISC,
	T.POSITION,
	T.COLLEGE_ORG,
	T.FLIGHT,
	T.MIDDLE_INIT,
	T.ACCESS_CODE,
	T.AGE,
	T.MISCELLANEOUS,
	T.COURTESY,
	T.MISC_INFO,
	T.BIRTHDATE,
	T.APO_ID,
	T.OMS_SUBJECT_ID
	,                                                                  T.ODS_CREATE_DATE,
	T.ODS_MODIFY_DATE
	)
values
	(
	S.SUBJECT_ID,
	S.AUDIT_CREATE_DATE,
	S.AUDIT_CREATED_BY,
	S.AUDIT_MODIFIED_BY,
	S.AUDIT_MODIFY_DATE,
	S.SUBJECT_KEY,
	S.ADDRESS_LINE_1,
	S.ADDRESS_LINE_2,
	S.AS_OF_DATE,
	S.BUS_NBR,
	S.CITY,
	S.COUNTRY,
	S.COURTESY_TITLE,
	S.DAYTIME_PHONE,
	S.EMAIL_ADDRESS,
	S.EMERGENCY_FIRST_NAME,
	S.EMERGENCY_LAST_NAME,
	S.EMERGENCY_PHONE,
	S.FIRST_NAME,
	S.GENDER,
	S.GRADE,
	S.GRADUATION_YEAR,
	S.HOMEROOM,
	S.LAST_NAME,
	S.LOCKER,
	S.MAJOR,
	S.MIDDLE_NAME,
	S.MINOR,
	S.EVENING_PHONE,
	S.PERIOD,
	S.POSTAL_CODE,
	S.SQUADRON,
	S.STATE,
	S.SUBJECT_EXTRA_DATA,
	S.TEACHER_FIRST_NAME,
	S.TEACHER_LAST_NAME,
	S.TEACHER_MIDDLE_NAME,
	S.TEACHER_NAME,
	S.TEACHER_NBR,
	S.TEACHER_TITLE,
	S.TRACK,
	S.STAFF_CODE,
	S.STAFF_FLAG,
	S.EXTERNAL_SUBJECT_ID,
	S.REVISION_NO,
	S.ACTIVE,
	S.VALID,
	S.BIRTH_DATE,
	S.STAFF_INDICATOR,
	S.AREA_CODE,
	S.EXCHANGE,
	S.PHONE,
	S.EMAIL2,
	S.EMAIL_MISC,
	S.POSITION,
	S.COLLEGE_ORG,
	S.FLIGHT,
	S.MIDDLE_INIT,
	S.ACCESS_CODE,
	S.AGE,
	S.MISCELLANEOUS,
	S.COURTESY,
	S.MISC_INFO,
	S.BIRTHDATE,
	S.APO_ID,
	S.OMS_SUBJECT_ID
	,                                                                  sysdate,
	sysdate
	)

&


/*-----------------------------------------------*/
/* TASK No. 35 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 36 */
/* Drop flow table */

-- drop table RAX_APP_USER.I$_SAS_SUBJECT_STG1397001

BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_SAS_SUBJECT_STG1397001';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;

&


/*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0SAS_SUBJECT_STG purge


BEGIN
  EXECUTE IMMEDIATE 'drop table RAX_APP_USER.C$_0SAS_SUBJECT_STG purge';
EXCEPTION
  WHEN OTHERS THEN
   IF SQLCODE != -942 THEN
     RAISE;
   END IF;
END;


&


/*-----------------------------------------------*/
/* TASK No. 37 */
/* ODS_STAGE.SAS_SUBJECT_XR */

-- SAS_SUBJECT_XR
MERGE INTO ODS_STAGE.SAS_SUBJECT_XR d
USING (
select * from
    (  Select
        XR.SUBJECT_OID SUBJECT_OID,
        STG.SUBJECT_ID as SK_SUBJECT_ID,
        STG.SUBJECT_KEY as SK_SUBJECT_KEY,
        STG.EXTERNAL_SUBJECT_ID as SK_EXTERNAL_SUBJECT_ID,
        STG.APO_ID as SK_APO_ID,
        STG.OMS_SUBJECT_ID as SK_OMS_SUBJECT_ID,
        sysdate as ODS_CREATE_DATE,
        sysdate as ODS_MODIFY_DATE
    -- select *
    FROM 
        ODS_STAGE.SAS_SUBJECT_STG stg
        ,ODS_STAGE.SAS_SUBJECT_XR xr
    WHERE (1=1)
        and stg.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
        and STG.SUBJECT_ID=XR.SK_SUBJECT_ID(+)
     ) s
where NOT EXISTS 
	( select 1 from ODS_STAGE.SAS_SUBJECT_XR T
	where	T.SK_SUBJECT_ID	= S.SK_SUBJECT_ID 
		 and
		((T.SUBJECT_OID = S.SUBJECT_OID) or (T.SUBJECT_OID IS NULL and S.SUBJECT_OID IS NULL)) and
		((T.SK_SUBJECT_ID = S.SK_SUBJECT_ID) or (T.SK_SUBJECT_ID IS NULL and S.SK_SUBJECT_ID IS NULL)) and
		((T.SK_SUBJECT_KEY = S.SK_SUBJECT_KEY) or (T.SK_SUBJECT_KEY IS NULL and S.SK_SUBJECT_KEY IS NULL)) and
		((T.SK_APO_ID = S.SK_APO_ID) or (T.SK_APO_ID IS NULL and S.SK_APO_ID IS NULL)) and
		((T.SK_OMS_SUBJECT_ID = S.SK_OMS_SUBJECT_ID) or (T.SK_OMS_SUBJECT_ID IS NULL and S.SK_OMS_SUBJECT_ID IS NULL)) and
		((T.SK_EXTERNAL_SUBJECT_ID = S.SK_EXTERNAL_SUBJECT_ID) or (T.SK_EXTERNAL_SUBJECT_ID IS NULL and S.SK_EXTERNAL_SUBJECT_ID IS NULL)) 
    )
) s 
ON
  (s.SK_SUBJECT_ID=d.SK_SUBJECT_ID)
WHEN MATCHED
THEN
UPDATE SET
  d.SUBJECT_OID = s.SUBJECT_OID,
--  d.SK_SUBJECT_ID = s.SK_SUBJECT_ID,
  d.SK_SUBJECT_KEY = s.SK_SUBJECT_KEY,
  d.SK_EXTERNAL_SUBJECT_ID = s.SK_EXTERNAL_SUBJECT_ID,
  d.SK_APO_ID = s.SK_APO_ID,
  d.SK_OMS_SUBJECT_ID = s.SK_OMS_SUBJECT_ID,
  d.ODS_MODIFY_DATE = s.ODS_MODIFY_DATE
WHEN NOT MATCHED
THEN
INSERT (
  SUBJECT_OID, SK_SUBJECT_ID, SK_SUBJECT_KEY, SK_APO_ID, SK_OMS_SUBJECT_ID,
  SK_EXTERNAL_SUBJECT_ID, ODS_CREATE_DATE, ODS_MODIFY_DATE)
VALUES (
  ODS_STAGE.SUBJECT_OID_SEQ.nextval, s.SK_SUBJECT_ID, s.SK_SUBJECT_KEY, s.SK_APO_ID, s.SK_OMS_SUBJECT_ID,
  s.SK_EXTERNAL_SUBJECT_ID, s.ODS_CREATE_DATE, s.ODS_MODIFY_DATE
  )


&


/*-----------------------------------------------*/
/* TASK No. 38 */
/* ODS_OWN.SUBJECT */

MERGE INTO ODS_OWN.SUBJECT d
USING (
select * from (
      Select
        XR.SUBJECT_OID as SUBJECT_OID,
        STG.SUBJECT_KEY as SUBJECT_KEY,
        STG.ADDRESS_LINE_1 as ADDRESS_LINE_1,
        STG.ADDRESS_LINE_2 as ADDRESS_LINE_2,
        STG.BUS_NBR as BUS_NBR,
        STG.CITY as CITY,
        STG.DAYTIME_PHONE as HOME_PHONE,
        STG.EMAIL_ADDRESS as EMAIL_ADDRESS,
        STG.EMERGENCY_FIRST_NAME as EMER_FNAME,
        STG.EMERGENCY_LAST_NAME as EMER_LNAME,
        STG.EMERGENCY_PHONE as E_PHONE,
        STG.FIRST_NAME as FIRST_NAME,
        STG.GRADE as GRADE,
        STG.HOMEROOM as HOME_ROOM,
        STG.LAST_NAME as LAST_NAME,
        STG.LOCKER as LOCKER,
        STG.MAJOR as MAJOR,
        STG.MIDDLE_NAME as MIDDLE_NAME,
        STG.MINOR as MINOR,
        STG.EVENING_PHONE as M_PHONE,
        STG.PERIOD as PERIOD,
        STG.POSTAL_CODE as POSTAL_CODE,
        STG.SQUADRON as SQUADRON,
        STG.STATE as STATE,
        STG.SUBJECT_EXTRA_DATA as SUBJECT_EXTRA_DATA,
        STG.TEACHER_FIRST_NAME as TEACHER_FIRST_NAME,
        STG.TEACHER_LAST_NAME as TEACHER_LAST_NAME,
        STG.TEACHER_MIDDLE_NAME as TEACHER_MIDDLE_NAME,
        STG.TEACHER_NBR as TEACHER_NBR,
        STG.TRACK as TRACK,
        STG.STAFF_CODE as STAFF_CODE,
        STG.STAFF_FLAG as STAFF_FLAG,
        STG.EXTERNAL_SUBJECT_ID as EXTERNAL_SUBJECT_ID,
        case 
            when regexp_instr(STG.BIRTH_DATE,'\d{1,2}/\d{1,2}/\d{4}$') = 1 then to_date(STG.BIRTH_DATE,'MM/DD/YYYY')
            when regexp_instr(STG.BIRTH_DATE,'\d{4}$/\d{1,2}/\d{1,2}') = 1 then to_date(STG.BIRTH_DATE,'YYYY/MM/DD')
            when regexp_instr(STG.BIRTH_DATE,'\d{1,2}-\d{1,2}-\d{4}$') = 1 then to_date(STG.BIRTH_DATE,'MM-DD-YYYY')
            when regexp_instr(STG.BIRTH_DATE,'\d{4}$-\d{1,2}-\d{1,2}') = 1 then to_date(STG.BIRTH_DATE,'YYYY-MM-DD')
            else null end as BIRTHDAY,
        STG.PHONE as F_PHONE,
        STG.MISC_INFO as MISC_INFO,
        SS.SOURCE_SYSTEM_OID as SOURCE_SYSTEM_OID,
        sysdate as ODS_CREATE_DATE,
        sysdate as ODS_MODIFY_DATE,
       STG.ACTIVE
-- select *
    from
        ODS_STAGE.SAS_SUBJECT_STG stg
        ,ODS_STAGE.SAS_SUBJECT_XR xr
        ,ODS_OWN.SOURCE_SYSTEM SS
    where (1=1)
        and stg.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
        and SS.SOURCE_SYSTEM_SHORT_NAME='SAS'
        and STG.SUBJECT_ID=XR.SK_SUBJECT_ID(+)
     ) s
where NOT EXISTS 
	( select 1 from ODS_OWN.SUBJECT T
	where	T.SUBJECT_OID	= S.SUBJECT_OID 
		 and 
        ((T.SUBJECT_KEY = S.SUBJECT_KEY) or (T.SUBJECT_KEY IS NULL and S.SUBJECT_KEY IS NULL)) and
        ((T.ADDRESS_LINE_1 = S.ADDRESS_LINE_1) or (T.ADDRESS_LINE_1 IS NULL and S.ADDRESS_LINE_1 IS NULL)) and
        ((T.ADDRESS_LINE_2 = S.ADDRESS_LINE_2) or (T.ADDRESS_LINE_2 IS NULL and S.ADDRESS_LINE_2 IS NULL)) and
        ((T.BUS_NBR = S.BUS_NBR) or (T.BUS_NBR IS NULL and S.BUS_NBR IS NULL)) and
        ((T.CITY = S.CITY) or (T.CITY IS NULL and S.CITY IS NULL)) and
        ((T.HOME_PHONE = S.HOME_PHONE) or (T.HOME_PHONE IS NULL and S.HOME_PHONE IS NULL)) and
        ((T.EMAIL_ADDRESS = S.EMAIL_ADDRESS) or (T.EMAIL_ADDRESS IS NULL and S.EMAIL_ADDRESS IS NULL)) and
        ((T.EMER_FNAME = S.EMER_FNAME) or (T.EMER_FNAME IS NULL and S.EMER_FNAME IS NULL)) and
        ((T.EMER_LNAME = S.EMER_LNAME) or (T.EMER_LNAME IS NULL and S.EMER_LNAME IS NULL)) and
        ((T.E_PHONE = S.E_PHONE) or (T.E_PHONE IS NULL and S.E_PHONE IS NULL)) and
        ((T.FIRST_NAME = S.FIRST_NAME) or (T.FIRST_NAME IS NULL and S.FIRST_NAME IS NULL)) and
        ((T.GRADE = S.GRADE) or (T.GRADE IS NULL and S.GRADE IS NULL)) and
        ((T.HOME_ROOM = S.HOME_ROOM) or (T.HOME_ROOM IS NULL and S.HOME_ROOM IS NULL)) and
        ((T.LAST_NAME = S.LAST_NAME) or (T.LAST_NAME IS NULL and S.LAST_NAME IS NULL)) and
        ((T.LOCKER = S.LOCKER) or (T.LOCKER IS NULL and S.LOCKER IS NULL)) and
        ((T.MAJOR = S.MAJOR) or (T.MAJOR IS NULL and S.MAJOR IS NULL)) and
        ((T.MIDDLE_NAME = S.MIDDLE_NAME) or (T.MIDDLE_NAME IS NULL and S.MIDDLE_NAME IS NULL)) and
        ((T.MINOR = S.MINOR) or (T.MINOR IS NULL and S.MINOR IS NULL)) and
        ((T.M_PHONE = S.M_PHONE) or (T.M_PHONE IS NULL and S.M_PHONE IS NULL)) and
        ((T.PERIOD = S.PERIOD) or (T.PERIOD IS NULL and S.PERIOD IS NULL)) and
        ((T.POSTAL_CODE = S.POSTAL_CODE) or (T.POSTAL_CODE IS NULL and S.POSTAL_CODE IS NULL)) and
        ((T.SQUADRON = S.SQUADRON) or (T.SQUADRON IS NULL and S.SQUADRON IS NULL)) and
        ((T.STATE = S.STATE) or (T.STATE IS NULL and S.STATE IS NULL)) and
        ((T.SUBJECT_EXTRA_DATA = S.SUBJECT_EXTRA_DATA) or (T.SUBJECT_EXTRA_DATA IS NULL and S.SUBJECT_EXTRA_DATA IS NULL)) and
        ((T.TEACHER_FIRST_NAME = S.TEACHER_FIRST_NAME) or (T.TEACHER_FIRST_NAME IS NULL and S.TEACHER_FIRST_NAME IS NULL)) and
        ((T.TEACHER_LAST_NAME = S.TEACHER_LAST_NAME) or (T.TEACHER_LAST_NAME IS NULL and S.TEACHER_LAST_NAME IS NULL)) and
        ((T.TEACHER_MIDDLE_NAME = S.TEACHER_MIDDLE_NAME) or (T.TEACHER_MIDDLE_NAME IS NULL and S.TEACHER_MIDDLE_NAME IS NULL)) and
        ((T.TEACHER_NBR = S.TEACHER_NBR) or (T.TEACHER_NBR IS NULL and S.TEACHER_NBR IS NULL)) and
        ((T.TRACK = S.TRACK) or (T.TRACK IS NULL and S.TRACK IS NULL)) and
        ((T.STAFF_CODE = S.STAFF_CODE) or (T.STAFF_CODE IS NULL and S.STAFF_CODE IS NULL)) and
        ((T.STAFF_FLAG = S.STAFF_FLAG) or (T.STAFF_FLAG IS NULL and S.STAFF_FLAG IS NULL)) and
        ((T.EXTERNAL_SUBJECT_ID = S.EXTERNAL_SUBJECT_ID) or (T.EXTERNAL_SUBJECT_ID IS NULL and S.EXTERNAL_SUBJECT_ID IS NULL)) and
        ((T.BIRTHDAY = S.BIRTHDAY) or (T.BIRTHDAY IS NULL and S.BIRTHDAY IS NULL)) and
        ((T.F_PHONE = S.F_PHONE) or (T.F_PHONE IS NULL and S.F_PHONE IS NULL)) and
        ((T.MISC_INFO = S.MISC_INFO) or (T.MISC_INFO IS NULL and S.MISC_INFO IS NULL)) and
        ((T.SOURCE_SYSTEM_OID = S.SOURCE_SYSTEM_OID) or (T.SOURCE_SYSTEM_OID IS NULL and S.SOURCE_SYSTEM_OID IS NULL)) and 
        ((T.ACTIVE = S.ACTIVE) or(T.ACTIVE IS NULL and S.ACTIVE IS NULL))
        )
) s 
ON
  (d.SUBJECT_OID = s.SUBJECT_OID)
WHEN MATCHED
THEN
UPDATE SET
--    d.SUBJECT_OID = s.SUBJECT_OID,
    d.SUBJECT_KEY = s.SUBJECT_KEY,
    d.ADDRESS_LINE_1 = s.ADDRESS_LINE_1,
    d.ADDRESS_LINE_2 = s.ADDRESS_LINE_2,
    d.BUS_NBR = s.BUS_NBR,
    d.CITY = s.CITY,
    d.HOME_PHONE = s.HOME_PHONE,
    d.EMAIL_ADDRESS = s.EMAIL_ADDRESS,
    d.EMER_FNAME = s.EMER_FNAME,
    d.EMER_LNAME = s.EMER_LNAME,
    d.E_PHONE = s.E_PHONE,
    d.FIRST_NAME = s.FIRST_NAME,
    d.GRADE = s.GRADE,
    d.HOME_ROOM = s.HOME_ROOM,
    d.LAST_NAME = s.LAST_NAME,
    d.LOCKER = s.LOCKER,
    d.MAJOR = s.MAJOR,
    d.MIDDLE_NAME = s.MIDDLE_NAME,
    d.MINOR = s.MINOR,
    d.M_PHONE = s.M_PHONE,
    d.PERIOD = s.PERIOD,
    d.POSTAL_CODE = s.POSTAL_CODE,
    d.SQUADRON = s.SQUADRON,
    d.STATE = s.STATE,
    d.SUBJECT_EXTRA_DATA = s.SUBJECT_EXTRA_DATA,
    d.TEACHER_FIRST_NAME = s.TEACHER_FIRST_NAME,
    d.TEACHER_LAST_NAME = s.TEACHER_LAST_NAME,
    d.TEACHER_MIDDLE_NAME = s.TEACHER_MIDDLE_NAME,
    d.TEACHER_NBR = s.TEACHER_NBR,
    d.TRACK = s.TRACK,
    d.STAFF_CODE = s.STAFF_CODE,
    d.STAFF_FLAG = s.STAFF_FLAG,
    d.EXTERNAL_SUBJECT_ID = s.EXTERNAL_SUBJECT_ID,
    d.BIRTHDAY = s.BIRTHDAY,
    d.F_PHONE = s.F_PHONE,
    d.MISC_INFO = s.MISC_INFO,
    d.SOURCE_SYSTEM_OID = s.SOURCE_SYSTEM_OID,
    d.ODS_MODIFY_DATE = s.ODS_MODIFY_DATE,
    d.ACTIVE = s.ACTIVE
WHEN NOT MATCHED
THEN
INSERT (
    SUBJECT_OID,
    SUBJECT_KEY,
    ADDRESS_LINE_1,
    ADDRESS_LINE_2,
    BUS_NBR,
    CITY,
    HOME_PHONE,
    EMAIL_ADDRESS,
    EMER_FNAME,
    EMER_LNAME,
    E_PHONE,
    FIRST_NAME,
    GRADE,
    HOME_ROOM,
    LAST_NAME,
    LOCKER,
    MAJOR,
    MIDDLE_NAME,
    MINOR,
    M_PHONE,
    PERIOD,
    POSTAL_CODE,
    SQUADRON,
    STATE,
    SUBJECT_EXTRA_DATA,
    TEACHER_FIRST_NAME,
    TEACHER_LAST_NAME,
    TEACHER_MIDDLE_NAME,
    TEACHER_NBR,
    TRACK,
    STAFF_CODE,
    STAFF_FLAG,
    EXTERNAL_SUBJECT_ID,
    BIRTHDAY,
    F_PHONE,
    MISC_INFO,
    SOURCE_SYSTEM_OID,
    ODS_CREATE_DATE,
    ODS_MODIFY_DATE,
    ACTIVE
)
VALUES (
    s.SUBJECT_OID,
    s.SUBJECT_KEY,
    s.ADDRESS_LINE_1,
    s.ADDRESS_LINE_2,
    s.BUS_NBR,
    s.CITY,
    s.HOME_PHONE,
    s.EMAIL_ADDRESS,
    s.EMER_FNAME,
    s.EMER_LNAME,
    s.E_PHONE,
    s.FIRST_NAME,
    s.GRADE,
    s.HOME_ROOM,
    s.LAST_NAME,
    s.LOCKER,
    s.MAJOR,
    s.MIDDLE_NAME,
    s.MINOR,
    s.M_PHONE,
    s.PERIOD,
    s.POSTAL_CODE,
    s.SQUADRON,
    s.STATE,
    s.SUBJECT_EXTRA_DATA,
    s.TEACHER_FIRST_NAME,
    s.TEACHER_LAST_NAME,
    s.TEACHER_MIDDLE_NAME,
    s.TEACHER_NBR,
    s.TRACK,
    s.STAFF_CODE,
    s.STAFF_FLAG,
    s.EXTERNAL_SUBJECT_ID,
    s.BIRTHDAY,
    s.F_PHONE,
    s.MISC_INFO,
    s.SOURCE_SYSTEM_OID,
    s.ODS_CREATE_DATE,
    s.ODS_MODIFY_DATE, 
    s.ACTIVE
	
)


&


/*-----------------------------------------------*/
/* TASK No. 39 */
/* ODS_STAGE.SAS_USER_PROFILE_XR */

-- SAS_USER_PROFILE_XR
MERGE INTO ODS_STAGE.SAS_USER_PROFILE_XR d
USING (
select * from
    (  Select
        XR.USER_PROFILE_OID USER_PROFILE_OID,
        STG.SUBJECT_ID as SK_SUBJECT_ID,
        STG.EMAIL_ADDRESS as SK_EMAIL_ADDRESS,
        sysdate as ODS_CREATE_DATE,
        sysdate as ODS_MODIFY_DATE
    -- select *
    FROM 
        ODS_STAGE.SAS_SUBJECT_STG stg
        ,ODS_STAGE.SAS_USER_PROFILE_XR xr
    WHERE (1=1)
        and stg.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
        and STG.SUBJECT_ID is not null
        and STG.EMAIL_ADDRESS is not null
        and  STG.SUBJECT_ID=XR.SK_SUBJECT_ID(+) and stg.EMAIL_ADDRESS = xr.SK_EMAIL_ADDRESS(+)
     ) s
where NOT EXISTS 
	( select 1 from ODS_STAGE.SAS_USER_PROFILE_XR T
	where	T.SK_SUBJECT_ID	= S.SK_SUBJECT_ID and T.SK_EMAIL_ADDRESS = S.SK_EMAIL_ADDRESS
		 and
		((T.USER_PROFILE_OID = S.USER_PROFILE_OID) or (T.USER_PROFILE_OID IS NULL and S.USER_PROFILE_OID IS NULL)) and
		((T.SK_SUBJECT_ID = S.SK_SUBJECT_ID) or (T.SK_SUBJECT_ID IS NULL and S.SK_SUBJECT_ID IS NULL)) and
		((T.SK_EMAIL_ADDRESS = S.SK_EMAIL_ADDRESS) or (T.SK_EMAIL_ADDRESS IS NULL and S.SK_EMAIL_ADDRESS IS NULL))
    )
) s 
ON
  (s.SK_SUBJECT_ID=d.SK_SUBJECT_ID and s.SK_EMAIL_ADDRESS=d.SK_EMAIL_ADDRESS)
WHEN MATCHED THEN UPDATE SET
   d.USER_PROFILE_OID = s.USER_PROFILE_OID
  ,d.ODS_MODIFY_DATE = s.ODS_MODIFY_DATE
WHEN NOT MATCHED THEN INSERT (
  USER_PROFILE_OID
  ,SK_SUBJECT_ID
  ,SK_EMAIL_ADDRESS
  ,ODS_CREATE_DATE
  ,ODS_MODIFY_DATE
  )
VALUES (
   ODS_STAGE.USER_PROFILE_OID_SEQ.nextval
  ,s.SK_SUBJECT_ID
  ,s.SK_EMAIL_ADDRESS
  ,s.ODS_CREATE_DATE
  ,s.ODS_MODIFY_DATE
  )


&


/*-----------------------------------------------*/
/* TASK No. 40 */
/* ODS_OWN.USER_PROFILE */

MERGE INTO ODS_OWN.USER_PROFILE d
USING (
select * from
(
SELECT 
        xr.USER_PROFILE_OID
        ,-1 as USER_PROFILE_ID
        ,'.' as LIFETOUCH_USER_PROFILE_ID
        ,1 as VERSION
        ,xr.SK_EMAIL_ADDRESS CONTACT_EMAIL_ADDRESS
        ,xr.SK_EMAIL_ADDRESS ACCOUNT_EMAIL_ADDRESS
        ,sub_XR.SUBJECT_OID SUBJECT_OID
        ,stg.FIRST_NAME
        ,stg.LAST_NAME
        ,stg.AUDIT_CREATE_DATE SRC_CREATE_DATE
        ,stg.AUDIT_MODIFY_DATE SRC_MODIFY_DATE
        ,SS.SOURCE_SYSTEM_OID as SOURCE_SYSTEM_OID
        ,sysdate as ODS_CREATE_DATE
        ,sysdate as ODS_MODIFY_DATE
        ,sysdate as ODS_UPDATE_DATE
    -- select *
    FROM 
        ODS_STAGE.SAS_SUBJECT_STG stg
        ,ODS_STAGE.SAS_USER_PROFILE_XR xr
        ,ODS_STAGE.SAS_SUBJECT_XR sub_xr
        ,ODS_OWN.SOURCE_SYSTEM SS
    WHERE (1=1)
        and stg.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
        and  STG.SUBJECT_ID=XR.SK_SUBJECT_ID and stg.EMAIL_ADDRESS = xr.SK_EMAIL_ADDRESS
        and xr.SK_SUBJECT_ID=sub_xr.SK_SUBJECT_ID
        and STG.SUBJECT_ID is not null
        and STG.EMAIL_ADDRESS is not null
        and SS.SOURCE_SYSTEM_SHORT_NAME='SAS'
/*        and stg.AUDIT_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS') */
     )S
where NOT EXISTS 
    ( select 1 from ODS_OWN.USER_PROFILE T
    where
        ((T.USER_PROFILE_OID=S.USER_PROFILE_OID  ) or (T.USER_PROFILE_OID IS NULL and S.USER_PROFILE_OID IS NULL)) and
        ((T.SUBJECT_OID=S.SUBJECT_OID  ) or (T.SUBJECT_OID IS NULL and S.SUBJECT_OID IS NULL)) and
        ((T.CONTACT_EMAIL_ADDRESS = S.CONTACT_EMAIL_ADDRESS) or (T.CONTACT_EMAIL_ADDRESS IS NULL and S.CONTACT_EMAIL_ADDRESS IS NULL)) and
        ((T.ACCOUNT_EMAIL_ADDRESS = S.ACCOUNT_EMAIL_ADDRESS) or (T.ACCOUNT_EMAIL_ADDRESS IS NULL and S.ACCOUNT_EMAIL_ADDRESS IS NULL)) and
        ((T.FIRST_NAME = S.FIRST_NAME) or (T.FIRST_NAME IS NULL and S.FIRST_NAME IS NULL)) and
        ((T.LAST_NAME = S.LAST_NAME) or (T.LAST_NAME IS NULL and S.LAST_NAME IS NULL)) and
        ((T.SRC_CREATE_DATE = S.SRC_CREATE_DATE) or (T.SRC_CREATE_DATE IS NULL and S.SRC_CREATE_DATE IS NULL)) and
        ((T.SRC_MODIFY_DATE = S.SRC_MODIFY_DATE) or (T.SRC_MODIFY_DATE IS NULL and S.SRC_MODIFY_DATE IS NULL))
     )
)s
ON (s.USER_PROFILE_OID=d.USER_PROFILE_OID)
WHEN MATCHED THEN UPDATE SET
    d.SOURCE_SYSTEM_OID = S.SOURCE_SYSTEM_OID
    ,d.SUBJECT_OID = S.SUBJECT_OID 
    ,d.CONTACT_EMAIL_ADDRESS = S.CONTACT_EMAIL_ADDRESS
    ,d.ACCOUNT_EMAIL_ADDRESS = S.ACCOUNT_EMAIL_ADDRESS
    ,d.FIRST_NAME = S.FIRST_NAME
    ,d.LAST_NAME = S.LAST_NAME
    ,d.SRC_CREATE_DATE = S.SRC_CREATE_DATE
    ,d.SRC_MODIFY_DATE = S.SRC_MODIFY_DATE
    ,d.ODS_UPDATE_DATE = S.ODS_UPDATE_DATE
    ,d.ODS_MODIFY_DATE = S.ODS_MODIFY_DATE
WHEN NOT MATCHED THEN INSERT 
(
        USER_PROFILE_OID
        ,USER_PROFILE_ID
        ,LIFETOUCH_USER_PROFILE_ID
        ,VERSION
        ,CONTACT_EMAIL_ADDRESS
        ,SUBJECT_OID
        ,FIRST_NAME
        ,LAST_NAME
        ,SRC_CREATE_DATE
        ,SRC_MODIFY_DATE
        ,SOURCE_SYSTEM_OID
        ,ODS_CREATE_DATE
        ,ODS_MODIFY_DATE
        ,ODS_UPDATE_DATE
)
VALUES (
         s.USER_PROFILE_OID
        ,s.USER_PROFILE_ID
        ,s.LIFETOUCH_USER_PROFILE_ID
        ,s.VERSION
        ,s.CONTACT_EMAIL_ADDRESS
        ,s.SUBJECT_OID
        ,s.FIRST_NAME
        ,s.LAST_NAME
        ,s.SRC_CREATE_DATE
        ,s.SRC_MODIFY_DATE
        ,s.SOURCE_SYSTEM_OID
        ,s.ODS_CREATE_DATE
        ,s.ODS_MODIFY_DATE
        ,s.ODS_UPDATE_DATE
)


&


/*-----------------------------------------------*/
/* TASK No. 41 */
/* Update CDC Load Status */

UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env
*/

&


/*-----------------------------------------------*/
/* TASK No. 42 */
/* Insert CDC Audit Record */

INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name
,:v_sess_no
,'LOAD_SAS_SUBJECT_PKG'
,'014'
,TO_DATE(SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
,TO_DATE (SUBSTR(:v_cdc_load_date, 1, 19),'YYYY-MM-DD HH24:MI:SS')
,:v_cdc_overlap
,SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS_OWN.ODS_CDC_LOAD_STATUS
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_SAS_SUBJECT_PKG',
'014',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          )
,:v_cdc_overlap,
SYSDATE,
 :v_env)
*/


&


/*-----------------------------------------------*/
