/* TASK No. 1 */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 1 */




/*-----------------------------------------------*/
/* TASK No. 2 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 2 */




/*-----------------------------------------------*/
/* TASK No. 3 */

/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 3 */




/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop Temp Table */

BEGIN  
   EXECUTE IMMEDIATE 'DROP TABLE RAX_APP_USER.TERRITORY_SHIPMENT_TEMP1';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;


&

/*-----------------------------------------------*/
/* TASK No. 5 */
/* Create and Load Temp Table */

CREATE TABLE RAX_APP_USER.TERRITORY_SHIPMENT_TEMP1 AS
SELECT S.SHIPMENT_OID,SL.SHIPMENT_LINE_OID,SL.ORDER_LINE_OID,OL.ORDER_HEADER_OID,
             SP.SUB_PROGRAM_OID,PI.PERSON_INFO_OID,APO.APO_OID,A.ACCOUNT_OID,E.EVENT_OID,
             I.ITEM_OID,VW.REGION_NAME,APO.TERRITORY_CODE,OH.ORDER_NO,OH.ORDER_BUCKET,
            OH.ORDER_TYPE,S.SHIPMENT_NO,S.SHIP_DATE,S.ACTUAL_SHIPMENT_DATE,
            OH.SHIP_ORDERS_TO OH_SHIP_ORDERS_TO,S.SCAC AS CARRIER,S.CARRIER_SERVICE_CODE AS SHIPPING_METHOD,
            S.TRACKING_NO,PI.ADDRESS_LINE6 AS PI_SHIP_TO,PI.FIRST_NAME,PI.LAST_NAME,PI.ADDRESS_LINE1,
            PI.ADDRESS_LINE2,PI.CITY,PI.STATE,PI.COUNTRY,PI.ZIP_CODE,
            OL.ORDERED_QUANTITY AS ORDERED_QTY,OL.SHIPPED_QTY,OL.SOURCE_SYSTEM_OID
FROM 
ODS_OWN.SHIPMENT_LINE SL,
ODS_OWN.SHIPMENT S,
ODS_OWN.ORDER_LINE OL,
ODS_OWN.ORDER_HEADER OH,
ODS_OWN.PERSON_INFO PI,
ODS_OWN.EVENT E,
ODS_OWN.ACCOUNT A,
ODS_OWN.APO APO,
ODS_OWN.SUB_PROGRAM SP,
ODS_OWN.ITEM I,
ODS_OWN.ORGANIZATION_VW VW
WHERE 1 = 1
AND S.PERSON_INFO_OID = PI.PERSON_INFO_OID(+) 
AND SL.SHIPMENT_OID = S.SHIPMENT_OID
AND SL.ORDER_LINE_OID = OL.ORDER_LINE_OID
AND OL.ORDER_HEADER_OID = OH.ORDER_HEADER_OID
AND OH.EVENT_OID = E.EVENT_OID
AND OH.APO_OID = APO.APO_OID
AND APO.ACCOUNT_OID = A.ACCOUNT_OID
AND APO.SUB_PROGRAM_OID = SP.SUB_PROGRAM_OID
AND OL.ITEM_OID = I.ITEM_OID
AND APO.TERRITORY_CODE = VW.TERRITORY_CODE
AND APO.SCHOOL_YEAR > (SELECT DISTINCT FISCAL_YEAR - 2 FROM MART.TIME WHERE DATE_KEY = (SELECT TRUNC(SYSDATE) FROM DUAL))
AND S.ODS_CREATE_DATE > SYSDATE - 7
AND S.ODS_MODIFY_DATE >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_oms_overlap


&

/*-----------------------------------------------*/
/* TASK No. 6 */
/* Create IDX */



BEGIN  
   EXECUTE IMMEDIATE 'CREATE INDEX RAX_APP_USER.TERR_SHIPMENT_TEMP1_IX1 ON TERRITORY_SHIPMENT_TEMP1
(SHIPMENT_LINE_OID)';  
 EXCEPTION  
    WHEN OTHERS THEN NULL;  
END;


-- CREATE INDEX RAX_APP_USER.TERR_SHIPMENT_TEMP1_IX1 ON TERRITORY_SHIPMENT_TEMP1
-- (SHIPMENT_LINE_OID)
-- LOGGING
-- NOPARALLEL


&

/*-----------------------------------------------*/
/* TASK No. 7 */
/* Merge to Target table - TERRITORY_SHIPMENTS  */

MERGE INTO ODS_OWN.TERRITORY_SHIPMENTS TGT
    USING  
    (  
     SELECT 
       SHIPMENT_OID,SHIPMENT_LINE_OID,ORDER_LINE_OID,ORDER_HEADER_OID,SUB_PROGRAM_OID,
       PERSON_INFO_OID,APO_OID,ACCOUNT_OID,EVENT_OID,ITEM_OID,REGION_NAME,TERRITORY_CODE,
       ORDER_NO,ORDER_BUCKET,ORDER_TYPE,SHIPMENT_NO,TRUNC(SHIP_DATE) AS SHIP_DATE,
       ACTUAL_SHIPMENT_DATE,OH_SHIP_ORDERS_TO,CARRIER,SHIPPING_METHOD,TRACKING_NO,
       PI_SHIP_TO,FIRST_NAME,LAST_NAME,ADDRESS_LINE1,ADDRESS_LINE2,CITY,STATE,COUNTRY,
       ZIP_CODE,ORDERED_QTY, SHIPPED_QTY,SOURCE_SYSTEM_OID
     FROM
     RAX_APP_USER.TERRITORY_SHIPMENT_TEMP1 SH
    )SRC
      ON (TGT.SHIPMENT_LINE_OID = SRC.SHIPMENT_LINE_OID)          
WHEN MATCHED THEN UPDATE 
SET  
TGT.SHIPMENT_OID	   	=   SRC.SHIPMENT_OID,
TGT.ORDER_LINE_OID		=   SRC.ORDER_LINE_OID,
TGT.ORDER_HEADER_OID	=   SRC.ORDER_HEADER_OID,
TGT.SUB_PROGRAM_OID	    	=   SRC.SUB_PROGRAM_OID,
TGT.PERSON_INFO_OID	    	=   SRC.PERSON_INFO_OID,
TGT.APO_OID		=   SRC.APO_OID,
TGT.ACCOUNT_OID		=   SRC.ACCOUNT_OID,
TGT.EVENT_OID		=   SRC.EVENT_OID,
TGT.ITEM_OID		=   SRC.ITEM_OID,
TGT.REGION_NAME		=   SRC.REGION_NAME,
TGT.TERRITORY_CODE	    	=   SRC.TERRITORY_CODE,
TGT.ORDER_NO		=   SRC.ORDER_NO,
TGT.ORDER_BUCKET        		=   SRC.ORDER_BUCKET,
TGT.ORDER_TYPE          		=   SRC.ORDER_TYPE,
TGT.SHIPMENT_NO         		=   SRC.SHIPMENT_NO,
TGT.SHIP_DATE           		=   SRC.SHIP_DATE,
TGT.ACTUAL_SHIPMENT_DATE	=   SRC.ACTUAL_SHIPMENT_DATE,
TGT.OH_SHIP_ORDERS_TO   	=   SRC.OH_SHIP_ORDERS_TO,
TGT.CARRIER             		=   SRC.CARRIER,
TGT.SHIPPING_METHOD     	=   SRC.SHIPPING_METHOD,
TGT.TRACKING_NO         		=   SRC.TRACKING_NO,
TGT.PI_SHIP_TO          		=   SRC.PI_SHIP_TO,
TGT.FIRST_NAME          		=   SRC.FIRST_NAME,
TGT.LAST_NAME           		=   SRC.LAST_NAME,
TGT.ADDRESS_LINE1       		=   SRC.ADDRESS_LINE1,
TGT.ADDRESS_LINE2       		=   SRC.ADDRESS_LINE2,
TGT.CITY                		=   SRC.CITY,
TGT.STATE               		=   SRC.STATE,
TGT.COUNTRY             		=   SRC.COUNTRY,
TGT.ZIP_CODE            		=   SRC.ZIP_CODE,
TGT.ORDERED_QTY         		=   SRC.ORDERED_QTY,
TGT.SHIPPED_QTY         		=   SRC.SHIPPED_QTY,
TGT.ODS_MODIFY_DATE     	=   SYSDATE,
TGT.SOURCE_SYSTEM_OID   	=   SRC.SOURCE_SYSTEM_OID
      
WHEN NOT MATCHED THEN 
INSERT
(
TGT.SHIPMENT_OID,TGT.SHIPMENT_LINE_OID,TGT.ORDER_LINE_OID,TGT.ORDER_HEADER_OID,
TGT.SUB_PROGRAM_OID,TGT.PERSON_INFO_OID,TGT.APO_OID,TGT.ACCOUNT_OID,TGT.EVENT_OID,
TGT.ITEM_OID,TGT.REGION_NAME,TGT.TERRITORY_CODE,TGT.ORDER_NO,TGT.ORDER_BUCKET,
TGT.ORDER_TYPE,TGT.SHIPMENT_NO,TGT.SHIP_DATE,TGT.ACTUAL_SHIPMENT_DATE,
TGT.OH_SHIP_ORDERS_TO,TGT.CARRIER,TGT.SHIPPING_METHOD,TGT.TRACKING_NO,
TGT.PI_SHIP_TO,TGT.FIRST_NAME,TGT.LAST_NAME,TGT.ADDRESS_LINE1,TGT.ADDRESS_LINE2,
TGT.CITY,TGT.STATE,TGT.COUNTRY,TGT.ZIP_CODE,TGT.ORDERED_QTY,TGT.SHIPPED_QTY,
TGT.ODS_CREATE_DATE,TGT.ODS_MODIFY_DATE,TGT.SOURCE_SYSTEM_OID           
)
VALUES(
SRC.SHIPMENT_OID,SRC.SHIPMENT_LINE_OID,SRC.ORDER_LINE_OID,SRC.ORDER_HEADER_OID,
SRC.SUB_PROGRAM_OID,SRC.PERSON_INFO_OID,SRC.APO_OID,SRC.ACCOUNT_OID,SRC.EVENT_OID,
SRC.ITEM_OID,SRC.REGION_NAME,SRC.TERRITORY_CODE,SRC.ORDER_NO,SRC.ORDER_BUCKET,SRC.ORDER_TYPE,
SRC.SHIPMENT_NO,SRC.SHIP_DATE,SRC.ACTUAL_SHIPMENT_DATE,SRC.OH_SHIP_ORDERS_TO,
SRC.CARRIER,SRC.SHIPPING_METHOD,SRC.TRACKING_NO,SRC.PI_SHIP_TO,SRC.FIRST_NAME,
SRC.LAST_NAME,SRC.ADDRESS_LINE1,SRC.ADDRESS_LINE2,SRC.CITY,SRC.STATE,SRC.COUNTRY,
SRC.ZIP_CODE,SRC.ORDERED_QTY,SRC.SHIPPED_QTY,SYSDATE,SYSDATE,SRC.SOURCE_SYSTEM_OID 
      )

&

/*-----------------------------------------------*/
/* TASK No. 8 */
/* Drop Temp Table */


DROP TABLE RAX_APP_USER.TERRITORY_SHIPMENT_TEMP1


&

/*-----------------------------------------------*/
/* TASK No. 8 */
/* Update CDC Load Status */


UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env
*/

&



/*-----------------------------------------------*/
/* TASK No. 9 */
/* Insert CDC Audit Record */

INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name
,:v_sess_no
,'LOAD_TERRITORY_SHIPMENTS_PKG'
,'003'
,TO_DATE(SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
,TO_DATE (SUBSTR(:v_cdc_load_date, 1, 19),'YYYY-MM-DD HH24:MI:SS')
,:v_cdc_overlap
,SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS_OWN.ODS_CDC_LOAD_STATUS
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

/*
INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_TERRITORY_SHIPMENTS_PKG',
'003',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          )
,:v_cdc_overlap,
SYSDATE,
 :v_env)
*/

&


/*-----------------------------------------------*/
