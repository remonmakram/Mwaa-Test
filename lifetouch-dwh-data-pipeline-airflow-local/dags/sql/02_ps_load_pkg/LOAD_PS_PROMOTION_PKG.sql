/* TASK No. 1 */
/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 1 */
/*-----------------------------------------------*/
/* TASK No. 2 */
/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 2 */
/*-----------------------------------------------*/
/* TASK No. 3 */
/* SELECT STATEMENT FOUND, CHECK ODI TASK NO. 3 */
/*-----------------------------------------------*/
/* TASK No. 4 */
/* Drop work table */
/*-----------------------------------------------*/
/* TASK No. 5 */
/* Create work table */
/*-----------------------------------------------*/
/* TASK No. 6 */
/* Load data */
/* SOURCE CODE */
/* drop table RAX_APP_USER.C$_0PS_PROMOTION_STG purge */
/* create table RAX_APP_USER.C$_0PS_PROMOTION_STG
(
	C1_PROMOTION_ID	NUMBER(19) NULL,
	C2_PROMOTION_CODE	VARCHAR2(255) NULL,
	C3_DESCRIPTION	VARCHAR2(255) NULL,
	C4_ORDER_PRICE_DISCOUNT	NUMBER(8,2) NULL,
	C5_ORDER_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
	C6_ITEM_PRICE_DISCOUNT	NUMBER(8,2) NULL,
	C7_ITEM_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
	C8_START_DATE	DATE NULL,
	C9_END_DATE	DATE NULL,
	C10_ACTIVE	NUMBER(1) NULL,
	C11_SEQUENCE	NUMBER(8) NULL,
	C12_ALGORITHM	NUMBER(19) NULL,
	C13_ALWAYS_APPLIES	NUMBER(1) NULL,
	C14_CHANNEL	NUMBER(19) NULL,
	C15_RESULT_PRODUCT_LINE	NUMBER(19) NULL,
	C16_RESULT_SKU	NUMBER(19) NULL,
	C17_ORDER_MIN_COST	NUMBER(8,2) NULL,
	C18_ORDER_MAX_COST	NUMBER(8,2) NULL,
	C19_NUMBER_REQUIRED_ATTACHED_S	NUMBER(8) NULL,
	C20_MAX_PROMOTION_APPLICATIONS	NUMBER(8) NULL,
	C21_PER_QUANTITY	NUMBER(8,2) NULL,
	C22_SKU_CATEGORY	VARCHAR2(50) NULL,
	C23_DISABLE_ON_CATEGORY_TRIGGE	NUMBER(1) NULL,
	C24_SHIPPING_PRICE_DISCOUNT	NUMBER(19,2) NULL,
	C25_SHIPPING_PERCENT_DISCOUNT	NUMBER(19,2) NULL,
	C26_SHIPPING_METHOD_FOR_DISCOU	VARCHAR2(255) NULL,
	C27_PROMOTION_USE_TYPE	VARCHAR2(32) NULL,
	C28_AUDIT_CREATE_DATE	DATE NULL,
	C29_AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	C30_AUDIT_MODIFY_DATE	DATE NULL,
	C31_AUDIT_MODIFIED_BY	VARCHAR2(255) NULL
)
NOLOGGING */
/* select	
	PROMOTION.PROMOTION_ID	   C1_PROMOTION_ID,
	PROMOTION.PROMOTION_CODE	   C2_PROMOTION_CODE,
	PROMOTION.DESCRIPTION	   C3_DESCRIPTION,
	PROMOTION.ORDER_PRICE_DISCOUNT	   C4_ORDER_PRICE_DISCOUNT,
	PROMOTION.ORDER_PERCENT_DISCOUNT	   C5_ORDER_PERCENT_DISCOUNT,
	PROMOTION.ITEM_PRICE_DISCOUNT	   C6_ITEM_PRICE_DISCOUNT,
	PROMOTION.ITEM_PERCENT_DISCOUNT	   C7_ITEM_PERCENT_DISCOUNT,
	PROMOTION.START_DATE	   C8_START_DATE,
	PROMOTION.END_DATE	   C9_END_DATE,
	PROMOTION.ACTIVE	   C10_ACTIVE,
	PROMOTION.SEQUENCE	   C11_SEQUENCE,
	PROMOTION.ALGORITHM	   C12_ALGORITHM,
	PROMOTION.ALWAYS_APPLIES	   C13_ALWAYS_APPLIES,
	PROMOTION.CHANNEL	   C14_CHANNEL,
	PROMOTION.RESULT_PRODUCT_LINE	   C15_RESULT_PRODUCT_LINE,
	PROMOTION.RESULT_SKU	   C16_RESULT_SKU,
	PROMOTION.ORDER_MIN_COST	   C17_ORDER_MIN_COST,
	PROMOTION.ORDER_MAX_COST	   C18_ORDER_MAX_COST,
	PROMOTION.NUMBER_REQUIRED_ATTACHED_SKU	   C19_NUMBER_REQUIRED_ATTACHED_S,
	PROMOTION.MAX_PROMOTION_APPLICATIONS	   C20_MAX_PROMOTION_APPLICATIONS,
	PROMOTION.PER_QUANTITY	   C21_PER_QUANTITY,
	PROMOTION.SKU_CATEGORY	   C22_SKU_CATEGORY,
	PROMOTION.DISABLE_ON_CATEGORY_TRIGGER	   C23_DISABLE_ON_CATEGORY_TRIGGE,
	PROMOTION.SHIPPING_PRICE_DISCOUNT	   C24_SHIPPING_PRICE_DISCOUNT,
	PROMOTION.SHIPPING_PERCENT_DISCOUNT	   C25_SHIPPING_PERCENT_DISCOUNT,
	PROMOTION.SHIPPING_METHOD_FOR_DISCOUNT	   C26_SHIPPING_METHOD_FOR_DISCOU,
	PROMOTION.PROMOTION_USE_TYPE	   C27_PROMOTION_USE_TYPE,
	PROMOTION.AUDIT_CREATE_DATE	   C28_AUDIT_CREATE_DATE,
	PROMOTION.AUDIT_CREATED_BY	   C29_AUDIT_CREATED_BY,
	PROMOTION.AUDIT_MODIFY_DATE	   C30_AUDIT_MODIFY_DATE,
	PROMOTION.AUDIT_MODIFIED_BY	   C31_AUDIT_MODIFIED_BY
from	PS_OWN.PROMOTION   PROMOTION
where	(1=1)
And (NVL(PROMOTION.AUDIT_MODIFY_DATE, PROMOTION.AUDIT_CREATE_DATE) >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap) */
/* insert  into RAX_APP_USER.C$_0PS_PROMOTION_STG
(
	C1_PROMOTION_ID,
	C2_PROMOTION_CODE,
	C3_DESCRIPTION,
	C4_ORDER_PRICE_DISCOUNT,
	C5_ORDER_PERCENT_DISCOUNT,
	C6_ITEM_PRICE_DISCOUNT,
	C7_ITEM_PERCENT_DISCOUNT,
	C8_START_DATE,
	C9_END_DATE,
	C10_ACTIVE,
	C11_SEQUENCE,
	C12_ALGORITHM,
	C13_ALWAYS_APPLIES,
	C14_CHANNEL,
	C15_RESULT_PRODUCT_LINE,
	C16_RESULT_SKU,
	C17_ORDER_MIN_COST,
	C18_ORDER_MAX_COST,
	C19_NUMBER_REQUIRED_ATTACHED_S,
	C20_MAX_PROMOTION_APPLICATIONS,
	C21_PER_QUANTITY,
	C22_SKU_CATEGORY,
	C23_DISABLE_ON_CATEGORY_TRIGGE,
	C24_SHIPPING_PRICE_DISCOUNT,
	C25_SHIPPING_PERCENT_DISCOUNT,
	C26_SHIPPING_METHOD_FOR_DISCOU,
	C27_PROMOTION_USE_TYPE,
	C28_AUDIT_CREATE_DATE,
	C29_AUDIT_CREATED_BY,
	C30_AUDIT_MODIFY_DATE,
	C31_AUDIT_MODIFIED_BY
)
values
(
	:C1_PROMOTION_ID,
	:C2_PROMOTION_CODE,
	:C3_DESCRIPTION,
	:C4_ORDER_PRICE_DISCOUNT,
	:C5_ORDER_PERCENT_DISCOUNT,
	:C6_ITEM_PRICE_DISCOUNT,
	:C7_ITEM_PERCENT_DISCOUNT,
	:C8_START_DATE,
	:C9_END_DATE,
	:C10_ACTIVE,
	:C11_SEQUENCE,
	:C12_ALGORITHM,
	:C13_ALWAYS_APPLIES,
	:C14_CHANNEL,
	:C15_RESULT_PRODUCT_LINE,
	:C16_RESULT_SKU,
	:C17_ORDER_MIN_COST,
	:C18_ORDER_MAX_COST,
	:C19_NUMBER_REQUIRED_ATTACHED_S,
	:C20_MAX_PROMOTION_APPLICATIONS,
	:C21_PER_QUANTITY,
	:C22_SKU_CATEGORY,
	:C23_DISABLE_ON_CATEGORY_TRIGGE,
	:C24_SHIPPING_PRICE_DISCOUNT,
	:C25_SHIPPING_PERCENT_DISCOUNT,
	:C26_SHIPPING_METHOD_FOR_DISCOU,
	:C27_PROMOTION_USE_TYPE,
	:C28_AUDIT_CREATE_DATE,
	:C29_AUDIT_CREATED_BY,
	:C30_AUDIT_MODIFY_DATE,
	:C31_AUDIT_MODIFIED_BY
) */
/* TARGET CODE */
/*+ append */
/*-----------------------------------------------*/
/* TASK No. 7 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0PS_PROMOTION_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;

& /*-----------------------------------------------*/
/* TASK No. 9 */
/* Set vID */
/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 9 */
/*-----------------------------------------------*/
/* TASK No. 10 */
/* Drop flow table */


 /* drop table RAX_APP_USER.I$_PS_PROMOTION_STG2070001 */ 


BEGIN
    EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_PS_PROMOTION_STG2070001';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 11 */
/* Create flow table I$ */



create table RAX_APP_USER.I$_PS_PROMOTION_STG2070001
(
	PROMOTION_ID	NUMBER(19) NULL,
	PROMOTION_CODE	VARCHAR2(255) NULL,
	DESCRIPTION	VARCHAR2(255) NULL,
	ORDER_PRICE_DISCOUNT	NUMBER(8,2) NULL,
	ORDER_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
	ITEM_PRICE_DISCOUNT	NUMBER(8,2) NULL,
	ITEM_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
	START_DATE	DATE NULL,
	END_DATE	DATE NULL,
	ACTIVE	NUMBER(1) NULL,
	SEQUENCE	NUMBER(8) NULL,
	ALGORITHM	NUMBER(19) NULL,
	ALWAYS_APPLIES	NUMBER(1) NULL,
	CHANNEL	NUMBER(19) NULL,
	RESULT_PRODUCT_LINE	NUMBER(19) NULL,
	RESULT_SKU	NUMBER(19) NULL,
	ORDER_MIN_COST	NUMBER(8,2) NULL,
	ORDER_MAX_COST	NUMBER(8,2) NULL,
	NUMBER_REQUIRED_ATTACHED_SKU	NUMBER(8) NULL,
	MAX_PROMOTION_APPLICATIONS	NUMBER(8) NULL,
	PER_QUANTITY	NUMBER(8,2) NULL,
	SKU_CATEGORY	VARCHAR2(50) NULL,
	DISABLE_ON_CATEGORY_TRIGGER	NUMBER(1) NULL,
	SHIPPING_PRICE_DISCOUNT	NUMBER(19,2) NULL,
	SHIPPING_PERCENT_DISCOUNT	NUMBER(19,2) NULL,
	SHIPPING_METHOD_FOR_DISCOUNT	VARCHAR2(255) NULL,
	PROMOTION_USE_TYPE	VARCHAR2(32) NULL,
	AUDIT_CREATE_DATE	DATE NULL,
	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFY_DATE	DATE NULL,
	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL
	,IND_UPDATE		char(1)
)
NOLOGGING

& /*-----------------------------------------------*/
/* TASK No. 12 */
/* Insert flow into I$ table */
/* DETECTION_STRATEGY = NOT_EXISTS */



insert into	RAX_APP_USER.I$_PS_PROMOTION_STG2070001
(
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	IND_UPDATE
)
select 
PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	IND_UPDATE
 from (


select 	 
	
	C1_PROMOTION_ID PROMOTION_ID,
	C2_PROMOTION_CODE PROMOTION_CODE,
	C3_DESCRIPTION DESCRIPTION,
	C4_ORDER_PRICE_DISCOUNT ORDER_PRICE_DISCOUNT,
	C5_ORDER_PERCENT_DISCOUNT ORDER_PERCENT_DISCOUNT,
	C6_ITEM_PRICE_DISCOUNT ITEM_PRICE_DISCOUNT,
	C7_ITEM_PERCENT_DISCOUNT ITEM_PERCENT_DISCOUNT,
	C8_START_DATE START_DATE,
	C9_END_DATE END_DATE,
	C10_ACTIVE ACTIVE,
	C11_SEQUENCE SEQUENCE,
	C12_ALGORITHM ALGORITHM,
	C13_ALWAYS_APPLIES ALWAYS_APPLIES,
	C14_CHANNEL CHANNEL,
	C15_RESULT_PRODUCT_LINE RESULT_PRODUCT_LINE,
	C16_RESULT_SKU RESULT_SKU,
	C17_ORDER_MIN_COST ORDER_MIN_COST,
	C18_ORDER_MAX_COST ORDER_MAX_COST,
	C19_NUMBER_REQUIRED_ATTACHED_S NUMBER_REQUIRED_ATTACHED_SKU,
	C20_MAX_PROMOTION_APPLICATIONS MAX_PROMOTION_APPLICATIONS,
	C21_PER_QUANTITY PER_QUANTITY,
	C22_SKU_CATEGORY SKU_CATEGORY,
	C23_DISABLE_ON_CATEGORY_TRIGGE DISABLE_ON_CATEGORY_TRIGGER,
	C24_SHIPPING_PRICE_DISCOUNT SHIPPING_PRICE_DISCOUNT,
	C25_SHIPPING_PERCENT_DISCOUNT SHIPPING_PERCENT_DISCOUNT,
	C26_SHIPPING_METHOD_FOR_DISCOU SHIPPING_METHOD_FOR_DISCOUNT,
	C27_PROMOTION_USE_TYPE PROMOTION_USE_TYPE,
	C28_AUDIT_CREATE_DATE AUDIT_CREATE_DATE,
	C29_AUDIT_CREATED_BY AUDIT_CREATED_BY,
	C30_AUDIT_MODIFY_DATE AUDIT_MODIFY_DATE,
	C31_AUDIT_MODIFIED_BY AUDIT_MODIFIED_BY,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0PS_PROMOTION_STG
where	(1=1)






) S
where NOT EXISTS 
	( select 1 from ODS_STAGE.PS_PROMOTION_STG T
	where	T.PROMOTION_ID	= S.PROMOTION_ID 
		 and ((T.PROMOTION_CODE = S.PROMOTION_CODE) or (T.PROMOTION_CODE IS NULL and S.PROMOTION_CODE IS NULL)) and
		((T.DESCRIPTION = S.DESCRIPTION) or (T.DESCRIPTION IS NULL and S.DESCRIPTION IS NULL)) and
		((T.ORDER_PRICE_DISCOUNT = S.ORDER_PRICE_DISCOUNT) or (T.ORDER_PRICE_DISCOUNT IS NULL and S.ORDER_PRICE_DISCOUNT IS NULL)) and
		((T.ORDER_PERCENT_DISCOUNT = S.ORDER_PERCENT_DISCOUNT) or (T.ORDER_PERCENT_DISCOUNT IS NULL and S.ORDER_PERCENT_DISCOUNT IS NULL)) and
		((T.ITEM_PRICE_DISCOUNT = S.ITEM_PRICE_DISCOUNT) or (T.ITEM_PRICE_DISCOUNT IS NULL and S.ITEM_PRICE_DISCOUNT IS NULL)) and
		((T.ITEM_PERCENT_DISCOUNT = S.ITEM_PERCENT_DISCOUNT) or (T.ITEM_PERCENT_DISCOUNT IS NULL and S.ITEM_PERCENT_DISCOUNT IS NULL)) and
		((T.START_DATE = S.START_DATE) or (T.START_DATE IS NULL and S.START_DATE IS NULL)) and
		((T.END_DATE = S.END_DATE) or (T.END_DATE IS NULL and S.END_DATE IS NULL)) and
		((T.ACTIVE = S.ACTIVE) or (T.ACTIVE IS NULL and S.ACTIVE IS NULL)) and
		((T.SEQUENCE = S.SEQUENCE) or (T.SEQUENCE IS NULL and S.SEQUENCE IS NULL)) and
		((T.ALGORITHM = S.ALGORITHM) or (T.ALGORITHM IS NULL and S.ALGORITHM IS NULL)) and
		((T.ALWAYS_APPLIES = S.ALWAYS_APPLIES) or (T.ALWAYS_APPLIES IS NULL and S.ALWAYS_APPLIES IS NULL)) and
		((T.CHANNEL = S.CHANNEL) or (T.CHANNEL IS NULL and S.CHANNEL IS NULL)) and
		((T.RESULT_PRODUCT_LINE = S.RESULT_PRODUCT_LINE) or (T.RESULT_PRODUCT_LINE IS NULL and S.RESULT_PRODUCT_LINE IS NULL)) and
		((T.RESULT_SKU = S.RESULT_SKU) or (T.RESULT_SKU IS NULL and S.RESULT_SKU IS NULL)) and
		((T.ORDER_MIN_COST = S.ORDER_MIN_COST) or (T.ORDER_MIN_COST IS NULL and S.ORDER_MIN_COST IS NULL)) and
		((T.ORDER_MAX_COST = S.ORDER_MAX_COST) or (T.ORDER_MAX_COST IS NULL and S.ORDER_MAX_COST IS NULL)) and
		((T.NUMBER_REQUIRED_ATTACHED_SKU = S.NUMBER_REQUIRED_ATTACHED_SKU) or (T.NUMBER_REQUIRED_ATTACHED_SKU IS NULL and S.NUMBER_REQUIRED_ATTACHED_SKU IS NULL)) and
		((T.MAX_PROMOTION_APPLICATIONS = S.MAX_PROMOTION_APPLICATIONS) or (T.MAX_PROMOTION_APPLICATIONS IS NULL and S.MAX_PROMOTION_APPLICATIONS IS NULL)) and
		((T.PER_QUANTITY = S.PER_QUANTITY) or (T.PER_QUANTITY IS NULL and S.PER_QUANTITY IS NULL)) and
		((T.SKU_CATEGORY = S.SKU_CATEGORY) or (T.SKU_CATEGORY IS NULL and S.SKU_CATEGORY IS NULL)) and
		((T.DISABLE_ON_CATEGORY_TRIGGER = S.DISABLE_ON_CATEGORY_TRIGGER) or (T.DISABLE_ON_CATEGORY_TRIGGER IS NULL and S.DISABLE_ON_CATEGORY_TRIGGER IS NULL)) and
		((T.SHIPPING_PRICE_DISCOUNT = S.SHIPPING_PRICE_DISCOUNT) or (T.SHIPPING_PRICE_DISCOUNT IS NULL and S.SHIPPING_PRICE_DISCOUNT IS NULL)) and
		((T.SHIPPING_PERCENT_DISCOUNT = S.SHIPPING_PERCENT_DISCOUNT) or (T.SHIPPING_PERCENT_DISCOUNT IS NULL and S.SHIPPING_PERCENT_DISCOUNT IS NULL)) and
		((T.SHIPPING_METHOD_FOR_DISCOUNT = S.SHIPPING_METHOD_FOR_DISCOUNT) or (T.SHIPPING_METHOD_FOR_DISCOUNT IS NULL and S.SHIPPING_METHOD_FOR_DISCOUNT IS NULL)) and
		((T.PROMOTION_USE_TYPE = S.PROMOTION_USE_TYPE) or (T.PROMOTION_USE_TYPE IS NULL and S.PROMOTION_USE_TYPE IS NULL)) and
		((T.AUDIT_CREATE_DATE = S.AUDIT_CREATE_DATE) or (T.AUDIT_CREATE_DATE IS NULL and S.AUDIT_CREATE_DATE IS NULL)) and
		((T.AUDIT_CREATED_BY = S.AUDIT_CREATED_BY) or (T.AUDIT_CREATED_BY IS NULL and S.AUDIT_CREATED_BY IS NULL)) and
		((T.AUDIT_MODIFY_DATE = S.AUDIT_MODIFY_DATE) or (T.AUDIT_MODIFY_DATE IS NULL and S.AUDIT_MODIFY_DATE IS NULL)) and
		((T.AUDIT_MODIFIED_BY = S.AUDIT_MODIFIED_BY) or (T.AUDIT_MODIFIED_BY IS NULL and S.AUDIT_MODIFIED_BY IS NULL))
        )

& /*-----------------------------------------------*/
/* TASK No. 13 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_PS_PROMOTION_STG2070001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;

& /*-----------------------------------------------*/
/* TASK No. 14 */
/* Create Index on flow table */


 /* create index	RAX_APP_USER.I$_PS_PROMOTION_STG_IDX2070001
on		RAX_APP_USER.I$_PS_PROMOTION_STG2070001 (PROMOTION_ID)
NOLOGGING */ 


BEGIN
    EXECUTE IMMEDIATE 'create index	RAX_APP_USER.I$_PS_PROMOTION_STG_IDX2070001
on		RAX_APP_USER.I$_PS_PROMOTION_STG2070001 (PROMOTION_ID)
NOLOGGING';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -972 AND SQLCODE != -1418 AND SQLCODE != -1408 AND SQLCODE != -955 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 15 */
/* create check table */


 /* create table RAX_APP_USER.SNP_CHECK_TAB
(
	CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
	SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
	RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
	FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
	ERR_TYPE		VARCHAR2(1 CHAR) NULL,
	ERR_MESS		VARCHAR2(250 CHAR) NULL ,
	CHECK_DATE	DATE NULL,
	ORIGIN		VARCHAR2(100 CHAR) NULL,
	CONS_NAME	VARCHAR2(35 CHAR) NULL,
	CONS_TYPE		VARCHAR2(2 CHAR) NULL,
	ERR_COUNT		NUMBER(10) NULL
) */ 


BEGIN
    EXECUTE IMMEDIATE 'create table RAX_APP_USER.SNP_CHECK_TAB
(
	CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
	SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
	RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
	FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
	ERR_TYPE		VARCHAR2(1 CHAR) NULL,
	ERR_MESS		VARCHAR2(250 CHAR) NULL ,
	CHECK_DATE	DATE NULL,
	ORIGIN		VARCHAR2(100 CHAR) NULL,
	CONS_NAME	VARCHAR2(35 CHAR) NULL,
	CONS_TYPE		VARCHAR2(2 CHAR) NULL,
	ERR_COUNT		NUMBER(10) NULL
)';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -955 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 16 */
/* delete previous check sum */



delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_STAGE'
and	ORIGIN 		= '(2070001)ODS_Project.LOAD_PROMOTION_STG_INT'
and	ERR_TYPE 		= 'F'

& /*-----------------------------------------------*/
/* TASK No. 17 */
/* create error table */



-- create table RAX_APP_USER.E$_PS_PROMOTION_STG2070001
-- (
-- 	ODI_ROW_ID 		UROWID,
-- 	ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
-- 	ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
-- 	ODI_CHECK_DATE	DATE NULL, 
-- 	PROMOTION_ID	NUMBER(19) NULL,
-- 	PROMOTION_CODE	VARCHAR2(255) NULL,
-- 	DESCRIPTION	VARCHAR2(255) NULL,
-- 	ORDER_PRICE_DISCOUNT	NUMBER(8,2) NULL,
-- 	ORDER_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
-- 	ITEM_PRICE_DISCOUNT	NUMBER(8,2) NULL,
-- 	ITEM_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
-- 	START_DATE	DATE NULL,
-- 	END_DATE	DATE NULL,
-- 	ACTIVE	NUMBER(1) NULL,
-- 	SEQUENCE	NUMBER(8) NULL,
-- 	ALGORITHM	NUMBER(19) NULL,
-- 	ALWAYS_APPLIES	NUMBER(1) NULL,
-- 	CHANNEL	NUMBER(19) NULL,
-- 	RESULT_PRODUCT_LINE	NUMBER(19) NULL,
-- 	RESULT_SKU	NUMBER(19) NULL,
-- 	ORDER_MIN_COST	NUMBER(8,2) NULL,
-- 	ORDER_MAX_COST	NUMBER(8,2) NULL,
-- 	NUMBER_REQUIRED_ATTACHED_SKU	NUMBER(8) NULL,
-- 	MAX_PROMOTION_APPLICATIONS	NUMBER(8) NULL,
-- 	PER_QUANTITY	NUMBER(8,2) NULL,
-- 	SKU_CATEGORY	VARCHAR2(50) NULL,
-- 	DISABLE_ON_CATEGORY_TRIGGER	NUMBER(1) NULL,
-- 	SHIPPING_PRICE_DISCOUNT	NUMBER(19,2) NULL,
-- 	SHIPPING_PERCENT_DISCOUNT	NUMBER(19,2) NULL,
-- 	SHIPPING_METHOD_FOR_DISCOUNT	VARCHAR2(255) NULL,
-- 	PROMOTION_USE_TYPE	VARCHAR2(32) NULL,
-- 	AUDIT_CREATE_DATE	DATE NULL,
-- 	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
-- 	AUDIT_MODIFY_DATE	DATE NULL,
-- 	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
-- 	ODS_CREATE_DATE	DATE NULL,
-- 	ODS_MODIFY_DATE	DATE NULL,
-- 	ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
-- 	ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
-- 	ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
-- 	ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
-- 	ODI_SESS_NO		VARCHAR2(19 CHAR)
-- )

BEGIN
    EXECUTE IMMEDIATE 'create table RAX_APP_USER.E$_PS_PROMOTION_STG2070001
(
	ODI_ROW_ID 		UROWID,
	ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
	ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
	ODI_CHECK_DATE	DATE NULL, 
	PROMOTION_ID	NUMBER(19) NULL,
	PROMOTION_CODE	VARCHAR2(255) NULL,
	DESCRIPTION	VARCHAR2(255) NULL,
	ORDER_PRICE_DISCOUNT	NUMBER(8,2) NULL,
	ORDER_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
	ITEM_PRICE_DISCOUNT	NUMBER(8,2) NULL,
	ITEM_PERCENT_DISCOUNT	NUMBER(8,2) NULL,
	START_DATE	DATE NULL,
	END_DATE	DATE NULL,
	ACTIVE	NUMBER(1) NULL,
	SEQUENCE	NUMBER(8) NULL,
	ALGORITHM	NUMBER(19) NULL,
	ALWAYS_APPLIES	NUMBER(1) NULL,
	CHANNEL	NUMBER(19) NULL,
	RESULT_PRODUCT_LINE	NUMBER(19) NULL,
	RESULT_SKU	NUMBER(19) NULL,
	ORDER_MIN_COST	NUMBER(8,2) NULL,
	ORDER_MAX_COST	NUMBER(8,2) NULL,
	NUMBER_REQUIRED_ATTACHED_SKU	NUMBER(8) NULL,
	MAX_PROMOTION_APPLICATIONS	NUMBER(8) NULL,
	PER_QUANTITY	NUMBER(8,2) NULL,
	SKU_CATEGORY	VARCHAR2(50) NULL,
	DISABLE_ON_CATEGORY_TRIGGER	NUMBER(1) NULL,
	SHIPPING_PRICE_DISCOUNT	NUMBER(19,2) NULL,
	SHIPPING_PERCENT_DISCOUNT	NUMBER(19,2) NULL,
	SHIPPING_METHOD_FOR_DISCOUNT	VARCHAR2(255) NULL,
	PROMOTION_USE_TYPE	VARCHAR2(32) NULL,
	AUDIT_CREATE_DATE	DATE NULL,
	AUDIT_CREATED_BY	VARCHAR2(255) NULL,
	AUDIT_MODIFY_DATE	DATE NULL,
	AUDIT_MODIFIED_BY	VARCHAR2(255) NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL,
	ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
	ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
	ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
	ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
	ODI_SESS_NO		VARCHAR2(19 CHAR)
)
';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -955 THEN
            RAISE;
        END IF;
    END;

& /*-----------------------------------------------*/
/* TASK No. 18 */
/* delete previous errors */



delete from 	RAX_APP_USER.E$_PS_PROMOTION_STG2070001
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(2070001)ODS_Project.LOAD_PROMOTION_STG_INT')

& /*-----------------------------------------------*/
/* TASK No. 19 */
/* Create index on PK */
/* FLOW CONTROL CREATE THE iNDEX ON THE I$TABLE */


 /* create index 	RAX_APP_USER.I$_PS_PROMOTION_STG2070001
on	RAX_APP_USER.I$_PS_PROMOTION_STG2070001 (PROMOTION_ID) */ 


BEGIN
    EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.I$_PS_PROMOTION_STG2070001
on	RAX_APP_USER.I$_PS_PROMOTION_STG2070001 (PROMOTION_ID)';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -972 AND SQLCODE != -1418 AND SQLCODE != -1408 AND SQLCODE != -955 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 20 */
/* insert PK errors */



DECLARE
               CheckTable                             VarChar2(60);
               TargetTable                            VarChar2(60);
               VariableCheckTable                     VarChar2(60);

BEGIN
               SELECT 'RAX_APP_USER.I$_PS_PROMOTION_STG' INTO CheckTable FROM DUAL;
               SELECT 'ODS_STAGE.PS_PROMOTION_STG' INTO TargetTable FROM DUAL;

IF CheckTable = TargetTable THEN
   VariableCheckTable := CheckTable; 
ELSE
   VariableCheckTable := CheckTable || '2070001';
END IF;

execute immediate '
insert into RAX_APP_USER.E$_PS_PROMOTION_STG2070001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_ORIGIN,
	ODI_CHECK_DATE,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select	SYS_GUID(),
	:v_sess_no, 
	rowid,
	''F'', 
	''ODI-15064: The primary key PS_PROMOTION_PK is not unique.'',
	''(2070001)ODS_Project.LOAD_PROMOTION_STG_INT'',
	sysdate,
	''PS_PROMOTION_PK'',
	''PK'',	
	PS_PROMOTION_STG.PROMOTION_ID,
	PS_PROMOTION_STG.PROMOTION_CODE,
	PS_PROMOTION_STG.DESCRIPTION,
	PS_PROMOTION_STG.ORDER_PRICE_DISCOUNT,
	PS_PROMOTION_STG.ORDER_PERCENT_DISCOUNT,
	PS_PROMOTION_STG.ITEM_PRICE_DISCOUNT,
	PS_PROMOTION_STG.ITEM_PERCENT_DISCOUNT,
	PS_PROMOTION_STG.START_DATE,
	PS_PROMOTION_STG.END_DATE,
	PS_PROMOTION_STG.ACTIVE,
	PS_PROMOTION_STG.SEQUENCE,
	PS_PROMOTION_STG.ALGORITHM,
	PS_PROMOTION_STG.ALWAYS_APPLIES,
	PS_PROMOTION_STG.CHANNEL,
	PS_PROMOTION_STG.RESULT_PRODUCT_LINE,
	PS_PROMOTION_STG.RESULT_SKU,
	PS_PROMOTION_STG.ORDER_MIN_COST,
	PS_PROMOTION_STG.ORDER_MAX_COST,
	PS_PROMOTION_STG.NUMBER_REQUIRED_ATTACHED_SKU,
	PS_PROMOTION_STG.MAX_PROMOTION_APPLICATIONS,
	PS_PROMOTION_STG.PER_QUANTITY,
	PS_PROMOTION_STG.SKU_CATEGORY,
	PS_PROMOTION_STG.DISABLE_ON_CATEGORY_TRIGGER,
	PS_PROMOTION_STG.SHIPPING_PRICE_DISCOUNT,
	PS_PROMOTION_STG.SHIPPING_PERCENT_DISCOUNT,
	PS_PROMOTION_STG.SHIPPING_METHOD_FOR_DISCOUNT,
	PS_PROMOTION_STG.PROMOTION_USE_TYPE,
	PS_PROMOTION_STG.AUDIT_CREATE_DATE,
	PS_PROMOTION_STG.AUDIT_CREATED_BY,
	PS_PROMOTION_STG.AUDIT_MODIFY_DATE,
	PS_PROMOTION_STG.AUDIT_MODIFIED_BY,
	PS_PROMOTION_STG.ODS_CREATE_DATE,
	PS_PROMOTION_STG.ODS_MODIFY_DATE
from	'
 || VariableCheckTable || 
' PS_PROMOTION_STG 
where	exists  (
		select	SUB1.PROMOTION_ID
		from 	' 
|| VariableCheckTable ||
'  SUB1
		where 	SUB1.PROMOTION_ID=PS_PROMOTION_STG.PROMOTION_ID
		group by 	SUB1.PROMOTION_ID
		having 	count(1) > 1
		)
';

END;

& /*-----------------------------------------------*/
/* TASK No. 21 */
/* insert Not Null errors */



insert into RAX_APP_USER.E$_PS_PROMOTION_STG2070001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column PROMOTION_ID cannot be null.',
	sysdate,
	'(2070001)ODS_Project.LOAD_PROMOTION_STG_INT',
	'PROMOTION_ID',
	'NN',	
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_PS_PROMOTION_STG2070001
where	PROMOTION_ID is null

& /*-----------------------------------------------*/
/* TASK No. 22 */
/* insert Not Null errors */



insert into RAX_APP_USER.E$_PS_PROMOTION_STG2070001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ACTIVE cannot be null.',
	sysdate,
	'(2070001)ODS_Project.LOAD_PROMOTION_STG_INT',
	'ACTIVE',
	'NN',	
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_PS_PROMOTION_STG2070001
where	ACTIVE is null

& /*-----------------------------------------------*/
/* TASK No. 23 */
/* insert Not Null errors */



insert into RAX_APP_USER.E$_PS_PROMOTION_STG2070001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SEQUENCE cannot be null.',
	sysdate,
	'(2070001)ODS_Project.LOAD_PROMOTION_STG_INT',
	'SEQUENCE',
	'NN',	
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_PS_PROMOTION_STG2070001
where	SEQUENCE is null

& /*-----------------------------------------------*/
/* TASK No. 24 */
/* insert Not Null errors */



insert into RAX_APP_USER.E$_PS_PROMOTION_STG2070001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ALWAYS_APPLIES cannot be null.',
	sysdate,
	'(2070001)ODS_Project.LOAD_PROMOTION_STG_INT',
	'ALWAYS_APPLIES',
	'NN',	
	PROMOTION_ID,
	PROMOTION_CODE,
	DESCRIPTION,
	ORDER_PRICE_DISCOUNT,
	ORDER_PERCENT_DISCOUNT,
	ITEM_PRICE_DISCOUNT,
	ITEM_PERCENT_DISCOUNT,
	START_DATE,
	END_DATE,
	ACTIVE,
	SEQUENCE,
	ALGORITHM,
	ALWAYS_APPLIES,
	CHANNEL,
	RESULT_PRODUCT_LINE,
	RESULT_SKU,
	ORDER_MIN_COST,
	ORDER_MAX_COST,
	NUMBER_REQUIRED_ATTACHED_SKU,
	MAX_PROMOTION_APPLICATIONS,
	PER_QUANTITY,
	SKU_CATEGORY,
	DISABLE_ON_CATEGORY_TRIGGER,
	SHIPPING_PRICE_DISCOUNT,
	SHIPPING_PERCENT_DISCOUNT,
	SHIPPING_METHOD_FOR_DISCOUNT,
	PROMOTION_USE_TYPE,
	AUDIT_CREATE_DATE,
	AUDIT_CREATED_BY,
	AUDIT_MODIFY_DATE,
	AUDIT_MODIFIED_BY,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_PS_PROMOTION_STG2070001
where	ALWAYS_APPLIES is null

& /*-----------------------------------------------*/
/* TASK No. 25 */
/* create index on error table */
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */


 /* create index 	RAX_APP_USER.E$_PS_PROMOTION_STG2070001
on	RAX_APP_USER.E$_PS_PROMOTION_STG2070001 (ODI_ROW_ID) */ 


BEGIN
    EXECUTE IMMEDIATE 'create index 	RAX_APP_USER.E$_PS_PROMOTION_STG2070001
on	RAX_APP_USER.E$_PS_PROMOTION_STG2070001 (ODI_ROW_ID)';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -972 AND SQLCODE != -1418 AND SQLCODE != -1408 AND SQLCODE != -955 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 26 */
/* delete errors from controlled table */



delete from	RAX_APP_USER.I$_PS_PROMOTION_STG2070001  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_PS_PROMOTION_STG2070001 E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)

& /*-----------------------------------------------*/
/* TASK No. 27 */
/* insert check sum into check table */



insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_STAGE',
	'PS_PROMOTION_STG',
	'ODS_STAGE.PS_PROMOTION_STG2070001',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_PS_PROMOTION_STG2070001 E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(2070001)ODS_Project.LOAD_PROMOTION_STG_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE

& /*-----------------------------------------------*/
/* TASK No. 28 */
/* Merge Rows */



merge into	ODS_STAGE.PS_PROMOTION_STG T
using	RAX_APP_USER.I$_PS_PROMOTION_STG2070001 S
on	(
		T.PROMOTION_ID=S.PROMOTION_ID
	)
when matched
then update set
	T.PROMOTION_CODE	= S.PROMOTION_CODE,
	T.DESCRIPTION	= S.DESCRIPTION,
	T.ORDER_PRICE_DISCOUNT	= S.ORDER_PRICE_DISCOUNT,
	T.ORDER_PERCENT_DISCOUNT	= S.ORDER_PERCENT_DISCOUNT,
	T.ITEM_PRICE_DISCOUNT	= S.ITEM_PRICE_DISCOUNT,
	T.ITEM_PERCENT_DISCOUNT	= S.ITEM_PERCENT_DISCOUNT,
	T.START_DATE	= S.START_DATE,
	T.END_DATE	= S.END_DATE,
	T.ACTIVE	= S.ACTIVE,
	T.SEQUENCE	= S.SEQUENCE,
	T.ALGORITHM	= S.ALGORITHM,
	T.ALWAYS_APPLIES	= S.ALWAYS_APPLIES,
	T.CHANNEL	= S.CHANNEL,
	T.RESULT_PRODUCT_LINE	= S.RESULT_PRODUCT_LINE,
	T.RESULT_SKU	= S.RESULT_SKU,
	T.ORDER_MIN_COST	= S.ORDER_MIN_COST,
	T.ORDER_MAX_COST	= S.ORDER_MAX_COST,
	T.NUMBER_REQUIRED_ATTACHED_SKU	= S.NUMBER_REQUIRED_ATTACHED_SKU,
	T.MAX_PROMOTION_APPLICATIONS	= S.MAX_PROMOTION_APPLICATIONS,
	T.PER_QUANTITY	= S.PER_QUANTITY,
	T.SKU_CATEGORY	= S.SKU_CATEGORY,
	T.DISABLE_ON_CATEGORY_TRIGGER	= S.DISABLE_ON_CATEGORY_TRIGGER,
	T.SHIPPING_PRICE_DISCOUNT	= S.SHIPPING_PRICE_DISCOUNT,
	T.SHIPPING_PERCENT_DISCOUNT	= S.SHIPPING_PERCENT_DISCOUNT,
	T.SHIPPING_METHOD_FOR_DISCOUNT	= S.SHIPPING_METHOD_FOR_DISCOUNT,
	T.PROMOTION_USE_TYPE	= S.PROMOTION_USE_TYPE,
	T.AUDIT_CREATE_DATE	= S.AUDIT_CREATE_DATE,
	T.AUDIT_CREATED_BY	= S.AUDIT_CREATED_BY,
	T.AUDIT_MODIFY_DATE	= S.AUDIT_MODIFY_DATE,
	T.AUDIT_MODIFIED_BY	= S.AUDIT_MODIFIED_BY
	,                              T.ODS_MODIFY_DATE	= sysdate
when not matched
then insert
	(
	T.PROMOTION_ID,
	T.PROMOTION_CODE,
	T.DESCRIPTION,
	T.ORDER_PRICE_DISCOUNT,
	T.ORDER_PERCENT_DISCOUNT,
	T.ITEM_PRICE_DISCOUNT,
	T.ITEM_PERCENT_DISCOUNT,
	T.START_DATE,
	T.END_DATE,
	T.ACTIVE,
	T.SEQUENCE,
	T.ALGORITHM,
	T.ALWAYS_APPLIES,
	T.CHANNEL,
	T.RESULT_PRODUCT_LINE,
	T.RESULT_SKU,
	T.ORDER_MIN_COST,
	T.ORDER_MAX_COST,
	T.NUMBER_REQUIRED_ATTACHED_SKU,
	T.MAX_PROMOTION_APPLICATIONS,
	T.PER_QUANTITY,
	T.SKU_CATEGORY,
	T.DISABLE_ON_CATEGORY_TRIGGER,
	T.SHIPPING_PRICE_DISCOUNT,
	T.SHIPPING_PERCENT_DISCOUNT,
	T.SHIPPING_METHOD_FOR_DISCOUNT,
	T.PROMOTION_USE_TYPE,
	T.AUDIT_CREATE_DATE,
	T.AUDIT_CREATED_BY,
	T.AUDIT_MODIFY_DATE,
	T.AUDIT_MODIFIED_BY
	,                               T.ODS_CREATE_DATE,
	T.ODS_MODIFY_DATE
	)
values
	(
	S.PROMOTION_ID,
	S.PROMOTION_CODE,
	S.DESCRIPTION,
	S.ORDER_PRICE_DISCOUNT,
	S.ORDER_PERCENT_DISCOUNT,
	S.ITEM_PRICE_DISCOUNT,
	S.ITEM_PERCENT_DISCOUNT,
	S.START_DATE,
	S.END_DATE,
	S.ACTIVE,
	S.SEQUENCE,
	S.ALGORITHM,
	S.ALWAYS_APPLIES,
	S.CHANNEL,
	S.RESULT_PRODUCT_LINE,
	S.RESULT_SKU,
	S.ORDER_MIN_COST,
	S.ORDER_MAX_COST,
	S.NUMBER_REQUIRED_ATTACHED_SKU,
	S.MAX_PROMOTION_APPLICATIONS,
	S.PER_QUANTITY,
	S.SKU_CATEGORY,
	S.DISABLE_ON_CATEGORY_TRIGGER,
	S.SHIPPING_PRICE_DISCOUNT,
	S.SHIPPING_PERCENT_DISCOUNT,
	S.SHIPPING_METHOD_FOR_DISCOUNT,
	S.PROMOTION_USE_TYPE,
	S.AUDIT_CREATE_DATE,
	S.AUDIT_CREATED_BY,
	S.AUDIT_MODIFY_DATE,
	S.AUDIT_MODIFIED_BY
	,                               sysdate,
	sysdate
	)

& /*-----------------------------------------------*/
/* TASK No. 29 */
/* Commit transaction */
/*commit*/
/*-----------------------------------------------*/
/* TASK No. 30 */
/* Drop flow table */


 /* drop table RAX_APP_USER.I$_PS_PROMOTION_STG2070001 */ 


BEGIN
    EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_PS_PROMOTION_STG2070001';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 1000008 */
/* Drop work table */


 /* drop table RAX_APP_USER.C$_0PS_PROMOTION_STG purge */ 


BEGIN
    EXECUTE IMMEDIATE 'drop table RAX_APP_USER.C$_0PS_PROMOTION_STG purge';
    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
    END;
    

& /*-----------------------------------------------*/
/* TASK No. 31 */
/* LOAD Promotion_Master_XR */



MERGE INTO ods_stage.promotion_master_xr d
   USING (SELECT s.promotion_id
            FROM ods_stage.ps_promotion_stg s
           WHERE s.ods_modify_date >=  TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap) s
   ON (s.promotion_id = d.ps_promotion_id)
   WHEN NOT MATCHED THEN
      INSERT (promotion_master_oid, ps_promotion_id, system_of_record,
              ods_create_date, ods_modify_date)
      VALUES (ods_stage.promotion_master_oid_seq.NEXTVAL,
              s.promotion_id, 'PS', SYSDATE, SYSDATE)

& /*-----------------------------------------------*/
/* TASK No. 32 */
/* LOAD_PROMOTION_MASTER */



MERGE INTO ods_own.promotion_master d
   USING (SELECT *
            FROM (SELECT xr.promotion_master_oid, stg.promotion_code,
                         stg.description, stg.active,
                         ss.source_system_oid,
                         SYSDATE AS ods_create_date,
                         SYSDATE AS ods_modify_date
                    FROM ods_stage.promotion_master_xr xr,
                         ods_stage.ps_promotion_stg stg,
                         ods_own.source_system ss
                   WHERE 1 = 1
                     AND xr.ps_promotion_id = stg.promotion_id
                     AND stg.ods_modify_date >=  
                         TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap
                     AND ss.source_system_short_name = 'PS') s) s
   ON (d.promotion_master_oid = s.promotion_master_oid)
   WHEN MATCHED THEN
      UPDATE
         SET d.promotion_code = s.promotion_code,
             d.description = s.description, d.active = s.active,
             d.ods_modify_date = s.ods_modify_date
         WHERE    DECODE (s.promotion_code, d.promotion_code, 1, 0) =  0
               OR DECODE (s.description, d.description, 1, 0) = 0
               OR DECODE (s.active, d.active, 1, 0) = 0
   WHEN NOT MATCHED THEN
      INSERT (promotion_master_oid, promotion_code, description,
              active, source_system_oid, ods_create_date,
              ods_modify_date)
      VALUES (s.promotion_master_oid, s.promotion_code, s.description,
              s.active, s.source_system_oid, s.ods_create_date,
              s.ods_modify_date)

& /*-----------------------------------------------*/
/* TASK No. 33 */
/* Update Coupon_Promotion (late arriving parent) */



MERGE INTO ods_own.coupon_promotion d
   USING (SELECT cp.coupon_promotion_oid, pxr.promotion_master_oid
            FROM ods_own.coupon_promotion cp,
                 ods_own.promotion_master pm,
                 ods_stage.promotion_master_xr pxr,
                 ods_stage.ps_coupon_promotion_xr cpxr
           WHERE cp.coupon_promotion_oid = cpxr.coupon_promotion_oid
             AND cpxr.sk_promotion_id = pxr.ps_promotion_id
             AND pxr.promotion_master_oid = pm.promotion_master_oid
             AND cp.promotion_master_oid IS NULL
             AND pm.ods_modify_date >=  
                         TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')    -:v_cdc_overlap) s
   ON (d.coupon_promotion_oid = s.coupon_promotion_oid)
   WHEN MATCHED THEN
      UPDATE
         SET d.promotion_master_oid = s.promotion_master_oid,
             d.ods_modify_date = SYSDATE

& /*-----------------------------------------------*/
/* TASK No. 34 */
/* Update Promotion_Master_OID in ODS_OWN.Promotion */



MERGE INTO ods_own.promotion d
   USING (SELECT promotion_master_oid, promotion_code
            FROM ods_own.promotion_master pm
           WHERE 1 = 1 AND ods_modify_date >= TO_DATE(SUBSTR(:v_cdc_load_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  -:v_cdc_overlap) s
   ON (d.promotion_id = s.promotion_code)
   WHEN MATCHED THEN
      UPDATE
         SET d.promotion_master_oid = s.promotion_master_oid,
             d.ods_modify_date = SYSDATE
         WHERE     DECODE (s.promotion_master_oid,
                           d.promotion_master_oid, 1,
                           0
                          ) = 0
               AND d.promotion_oid IN (
                                       SELECT promotion_oid
                                         FROM ods_stage.oms_promotion_xr)

& /*-----------------------------------------------*/
/* TASK No. 35 */
/* Update CDC Load Status */
/*
UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env
*/



UPDATE ODS_OWN.ODS_CDC_LOAD_STATUS
SET LAST_CDC_COMPLETION_DATE=TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
+ nvl((TIMEZONE_OFFSET/24), 0) 
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

& /*-----------------------------------------------*/
/* TASK No. 36 */
/* Insert CDC Audit Record */
/*
INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME              
)
values (
:v_cdc_load_table_name,
:v_sess_no,
'LOAD_PS_PROMOTION_PKG',
'001',
TO_DATE(
             SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS'),
TO_DATE (SUBSTR (:v_cdc_load_date, 1, 19),
                           'YYYY-MM-DD HH24:MI:SS'
                          )
,:v_cdc_overlap,
SYSDATE,
 :v_env)
*/



INSERT INTO RAX_APP_USER.ODS_CDC_LOAD_STATUS_AUDIT
(TABLE_NAME,
SESS_NO,                      
SESS_NAME,                    
SCEN_VERSION,                 
SESS_BEG,                     
ORIG_LAST_CDC_COMPLETION_DATE,
OVERLAP,
CREATE_DATE,
CONTEXT_NAME,
TIMEZONE_OFFSET              
)
select 
:v_cdc_load_table_name
,:v_sess_no
,'LOAD_PS_PROMOTION_PKG'
,'001'
,TO_DATE(SUBSTR(:v_sess_beg, 1, 19), 'RRRR-MM-DD HH24:MI:SS')
,TO_DATE (SUBSTR(:v_cdc_load_date, 1, 19),'YYYY-MM-DD HH24:MI:SS')
,:v_cdc_overlap
,SYSDATE
,:v_env
,TIMEZONE_OFFSET
from 
ODS_OWN.ODS_CDC_LOAD_STATUS
WHERE ODS_TABLE_NAME=:v_cdc_load_table_name
AND CONTEXT_NAME = :v_env

& /*-----------------------------------------------*/





&