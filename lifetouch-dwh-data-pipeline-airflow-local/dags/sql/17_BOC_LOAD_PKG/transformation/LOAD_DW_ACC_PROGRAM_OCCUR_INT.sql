/* TASK No. 1 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0BOC_ACC_PRG_OCCR_STG 

-- &


/*-----------------------------------------------*/
/* TASK No. 2 */
/* Create work table */

-- create table RAX_APP_USER.C$_0BOC_ACC_PRG_OCCR_STG
-- (
-- 	C1_ACCOUNT_PROGRAM_OCCURENCE_I	NUMBER(19) NULL,
-- 	C2_APO_ID	VARCHAR2(9) NULL,
-- 	C3_ACCOUNT_NAME	VARCHAR2(255) NULL,
-- 	C4_ACTIVE	NUMBER(1) NULL,
-- 	C5_CREATEDATE	TIMESTAMP(6) NULL,
-- 	C6_CREATEDBY	VARCHAR2(255) NULL,
-- 	C7_MODIFIEDBY	VARCHAR2(255) NULL,
-- 	C8_MODIFYDATE	TIMESTAMP(6) NULL,
-- 	C9_COUNTRY_CODE	VARCHAR2(6) NULL,
-- 	C10_CURRENCY_CODE	VARCHAR2(3) NULL,
-- 	C11_VISION_JOB_NUMBER	VARCHAR2(255) NULL,
-- 	C12_LOCK_ID	NUMBER(19) NULL,
-- 	C13_PROGRAM_TYPE	VARCHAR2(255) NULL,
-- 	C14_YEAR_ENDING	NUMBER(8) NULL,
-- 	C15_LOCKED	NUMBER(1) NULL,
-- 	C16_SERVICE_CENTER_NAME	VARCHAR2(20) NULL
-- )
-- NOLOGGING

-- &


/*-----------------------------------------------*/
/* TASK No. 3 */
/* Load data */

/* SOURCE CODE */
-- select	
-- 	ACCOUNT_PROGRAM_OCCURENCE.ACCOUNT_PROGRAM_OCCURENCE_ID	   C1_ACCOUNT_PROGRAM_OCCURENCE_I,
-- 	ACCOUNT_PROGRAM_OCCURENCE.APO_ID	   C2_APO_ID,
-- 	ACCOUNT_PROGRAM_OCCURENCE.ACCOUNT_NAME	   C3_ACCOUNT_NAME,
-- 	ACCOUNT_PROGRAM_OCCURENCE.ACTIVE	   C4_ACTIVE,
-- 	ACCOUNT_PROGRAM_OCCURENCE.CREATEDATE	   C5_CREATEDATE,
-- 	ACCOUNT_PROGRAM_OCCURENCE.CREATEDBY	   C6_CREATEDBY,
-- 	ACCOUNT_PROGRAM_OCCURENCE.MODIFIEDBY	   C7_MODIFIEDBY,
-- 	ACCOUNT_PROGRAM_OCCURENCE.MODIFYDATE	   C8_MODIFYDATE,
-- 	ACCOUNT_PROGRAM_OCCURENCE.COUNTRY_CODE	   C9_COUNTRY_CODE,
-- 	ACCOUNT_PROGRAM_OCCURENCE.CURRENCY_CODE	   C10_CURRENCY_CODE,
-- 	ACCOUNT_PROGRAM_OCCURENCE.VISION_JOB_NUMBER	   C11_VISION_JOB_NUMBER,
-- 	ACCOUNT_PROGRAM_OCCURENCE.LOCK_ID	   C12_LOCK_ID,
-- 	ACCOUNT_PROGRAM_OCCURENCE.PROGRAM_TYPE	   C13_PROGRAM_TYPE,
-- 	ACCOUNT_PROGRAM_OCCURENCE.YEAR_ENDING	   C14_YEAR_ENDING,
-- 	ACCOUNT_PROGRAM_OCCURENCE.LOCKED	   C15_LOCKED,
-- 	ACCOUNT_PROGRAM_OCCURENCE.SERVICE_CENTER_NAME	   C16_SERVICE_CENTER_NAME
-- from	BOC_OWN.ACCOUNT_PROGRAM_OCCURENCE   ACCOUNT_PROGRAM_OCCURENCE
-- where	(1=1)
-- And (ACCOUNT_PROGRAM_OCCURENCE.MODIFYDATE >= ( TO_DATE(SUBSTR(:v_cdc_ld_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  - :v_cdc_oms_overlap))





-- &

/* TARGET CODE */
-- insert into RAX_APP_USER.C$_0BOC_ACC_PRG_OCCR_STG
-- (
-- 	C1_ACCOUNT_PROGRAM_OCCURENCE_I,
-- 	C2_APO_ID,
-- 	C3_ACCOUNT_NAME,
-- 	C4_ACTIVE,
-- 	C5_CREATEDATE,
-- 	C6_CREATEDBY,
-- 	C7_MODIFIEDBY,
-- 	C8_MODIFYDATE,
-- 	C9_COUNTRY_CODE,
-- 	C10_CURRENCY_CODE,
-- 	C11_VISION_JOB_NUMBER,
-- 	C12_LOCK_ID,
-- 	C13_PROGRAM_TYPE,
-- 	C14_YEAR_ENDING,
-- 	C15_LOCKED,
-- 	C16_SERVICE_CENTER_NAME
-- )
-- values
-- (
-- 	:C1_ACCOUNT_PROGRAM_OCCURENCE_I,
-- 	:C2_APO_ID,
-- 	:C3_ACCOUNT_NAME,
-- 	:C4_ACTIVE,
-- 	:C5_CREATEDATE,
-- 	:C6_CREATEDBY,
-- 	:C7_MODIFIEDBY,
-- 	:C8_MODIFYDATE,
-- 	:C9_COUNTRY_CODE,
-- 	:C10_CURRENCY_CODE,
-- 	:C11_VISION_JOB_NUMBER,
-- 	:C12_LOCK_ID,
-- 	:C13_PROGRAM_TYPE,
-- 	:C14_YEAR_ENDING,
-- 	:C15_LOCKED,
-- 	:C16_SERVICE_CENTER_NAME
-- )

-- &


/*-----------------------------------------------*/
/* TASK No. 4 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0BOC_ACC_PRG_OCCR_STG',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 6 */
/* Set vID */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 6 */




/*-----------------------------------------------*/
/* TASK No. 7 */
/* Drop flow table */

-- drop table RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001 

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 8 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001
(
	ACCOUNT_PROGRAM_OCCURENCE_ID		NUMBER(19) NULL,
	APO_ID		VARCHAR2(9) NULL,
	ACCOUNT_NAME		VARCHAR2(255) NULL,
	ACTIVE		NUMBER(1) NULL,
	CREATEDATE		TIMESTAMP(6) NULL,
	CREATEDBY		VARCHAR2(255) NULL,
	MODIFIEDBY		VARCHAR2(255) NULL,
	MODIFYDATE		TIMESTAMP(6) NULL,
	COUNTRY_CODE		VARCHAR2(6) NULL,
	CURRENCY_CODE		VARCHAR2(3) NULL,
	VISION_JOB_NUMBER		VARCHAR2(255) NULL,
	LOCK_ID		NUMBER(19) NULL,
	PROGRAM_TYPE		VARCHAR2(255) NULL,
	YEAR_ENDING		NUMBER(8) NULL,
	LOCKED		NUMBER(1) NULL,
	SERVICE_CENTER_NAME		VARCHAR2(20) NULL,
	ODS_CREATE_DATE		DATE NULL,
	ODS_MODIFY_DATE		DATE NULL,
	ACC_PROG_OCCUR_OID		NUMBER NULL,
	IND_UPDATE		CHAR(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = POST_FLOW */
 


  
  
  


insert into	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001
(
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	APO_ID,
	ACCOUNT_NAME,
	ACTIVE,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	COUNTRY_CODE,
	CURRENCY_CODE,
	VISION_JOB_NUMBER,
	LOCK_ID,
	PROGRAM_TYPE,
	YEAR_ENDING,
	LOCKED,
	SERVICE_CENTER_NAME,
	IND_UPDATE
)


select 	 
	
	C1_ACCOUNT_PROGRAM_OCCURENCE_I,
	C2_APO_ID,
	C3_ACCOUNT_NAME,
	C4_ACTIVE,
	C5_CREATEDATE,
	C6_CREATEDBY,
	C7_MODIFIEDBY,
	C8_MODIFYDATE,
	C9_COUNTRY_CODE,
	C10_CURRENCY_CODE,
	C11_VISION_JOB_NUMBER,
	C12_LOCK_ID,
	C13_PROGRAM_TYPE,
	C14_YEAR_ENDING,
	C15_LOCKED,
	C16_SERVICE_CENTER_NAME,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0BOC_ACC_PRG_OCCR_STG
where	(1=1)






  

 


&


/*-----------------------------------------------*/
/* TASK No. 10 */
/* Create Index on flow table */

-- create index	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG_IDX730001
-- on		RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001 (ACCOUNT_PROGRAM_OCCURENCE_ID)
-- NOLOGGING


BEGIN
   EXECUTE IMMEDIATE 'create index	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG_IDX730001
on		RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001 (ACCOUNT_PROGRAM_OCCURENCE_ID)';
EXCEPTION
   WHEN OTHERS THEN
      -- Handle the case where the identifier is too long (ORA-00972)
      IF SQLCODE = -972 THEN
         DBMS_OUTPUT.PUT_LINE('Identifier is too long. Skipping creation of index.');
      ELSE
         RAISE;
      END IF;
END;


&


/*-----------------------------------------------*/
/* TASK No. 11 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_BOC_ACC_PRG_OCCR_STG730001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* Flag rows for update */

/* DETECTION_STRATEGY = POST_FLOW */


update	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001
set	IND_UPDATE = 'U'
where	(ACCOUNT_PROGRAM_OCCURENCE_ID)
	in	(
		select	ACCOUNT_PROGRAM_OCCURENCE_ID
		from	ODS_STAGE.BOC_ACC_PROG_OCCUR_STAGE
		)



&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* Flag useless rows */

/* DETECTION_STRATEGY = POST_FLOW */


update	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001 S
set	IND_UPDATE = 'N'
where	exists (
	select 	'X'
	from 	ODS_STAGE.BOC_ACC_PROG_OCCUR_STAGE 	T
	where	T.ACCOUNT_PROGRAM_OCCURENCE_ID	= S.ACCOUNT_PROGRAM_OCCURENCE_ID
		and	((T.APO_ID = S.APO_ID) or (T.APO_ID IS NULL and S.APO_ID IS NULL))
and	((T.ACCOUNT_NAME = S.ACCOUNT_NAME) or (T.ACCOUNT_NAME IS NULL and S.ACCOUNT_NAME IS NULL))
and	((T.ACTIVE = S.ACTIVE) or (T.ACTIVE IS NULL and S.ACTIVE IS NULL))
and	((T.CREATEDATE = S.CREATEDATE) or (T.CREATEDATE IS NULL and S.CREATEDATE IS NULL))
and	((T.CREATEDBY = S.CREATEDBY) or (T.CREATEDBY IS NULL and S.CREATEDBY IS NULL))
and	((T.MODIFIEDBY = S.MODIFIEDBY) or (T.MODIFIEDBY IS NULL and S.MODIFIEDBY IS NULL))
and	((T.MODIFYDATE = S.MODIFYDATE) or (T.MODIFYDATE IS NULL and S.MODIFYDATE IS NULL))
and	((T.COUNTRY_CODE = S.COUNTRY_CODE) or (T.COUNTRY_CODE IS NULL and S.COUNTRY_CODE IS NULL))
and	((T.CURRENCY_CODE = S.CURRENCY_CODE) or (T.CURRENCY_CODE IS NULL and S.CURRENCY_CODE IS NULL))
and	((T.VISION_JOB_NUMBER = S.VISION_JOB_NUMBER) or (T.VISION_JOB_NUMBER IS NULL and S.VISION_JOB_NUMBER IS NULL))
and	((T.LOCK_ID = S.LOCK_ID) or (T.LOCK_ID IS NULL and S.LOCK_ID IS NULL))
and	((T.PROGRAM_TYPE = S.PROGRAM_TYPE) or (T.PROGRAM_TYPE IS NULL and S.PROGRAM_TYPE IS NULL))
and	((T.YEAR_ENDING = S.YEAR_ENDING) or (T.YEAR_ENDING IS NULL and S.YEAR_ENDING IS NULL))
and	((T.LOCKED = S.LOCKED) or (T.LOCKED IS NULL and S.LOCKED IS NULL))
and	((T.SERVICE_CENTER_NAME = S.SERVICE_CENTER_NAME) or (T.SERVICE_CENTER_NAME IS NULL and S.SERVICE_CENTER_NAME IS NULL))
	)



&


/*-----------------------------------------------*/
/* TASK No. 14 */
/* Update existing rows */

/* DETECTION_STRATEGY = POST_FLOW */
update	ODS_STAGE.BOC_ACC_PROG_OCCUR_STAGE T
set 	
	(
	T.APO_ID,
	T.ACCOUNT_NAME,
	T.ACTIVE,
	T.CREATEDATE,
	T.CREATEDBY,
	T.MODIFIEDBY,
	T.MODIFYDATE,
	T.COUNTRY_CODE,
	T.CURRENCY_CODE,
	T.VISION_JOB_NUMBER,
	T.LOCK_ID,
	T.PROGRAM_TYPE,
	T.YEAR_ENDING,
	T.LOCKED,
	T.SERVICE_CENTER_NAME
	) =
		(
		select	S.APO_ID,
			S.ACCOUNT_NAME,
			S.ACTIVE,
			S.CREATEDATE,
			S.CREATEDBY,
			S.MODIFIEDBY,
			S.MODIFYDATE,
			S.COUNTRY_CODE,
			S.CURRENCY_CODE,
			S.VISION_JOB_NUMBER,
			S.LOCK_ID,
			S.PROGRAM_TYPE,
			S.YEAR_ENDING,
			S.LOCKED,
			S.SERVICE_CENTER_NAME
		from	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001 S
		where	T.ACCOUNT_PROGRAM_OCCURENCE_ID	=S.ACCOUNT_PROGRAM_OCCURENCE_ID
	    	 )
	,               T.ODS_MODIFY_DATE = SYSDATE

where	(ACCOUNT_PROGRAM_OCCURENCE_ID)
	in	(
		select	ACCOUNT_PROGRAM_OCCURENCE_ID
		from	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001
		where	IND_UPDATE = 'U'
		)




&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* Insert new rows */

/* DETECTION_STRATEGY = POST_FLOW */
insert into 	ODS_STAGE.BOC_ACC_PROG_OCCUR_STAGE T
	(
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	APO_ID,
	ACCOUNT_NAME,
	ACTIVE,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	COUNTRY_CODE,
	CURRENCY_CODE,
	VISION_JOB_NUMBER,
	LOCK_ID,
	PROGRAM_TYPE,
	YEAR_ENDING,
	LOCKED,
	SERVICE_CENTER_NAME
	,                ODS_CREATE_DATE,
	ODS_MODIFY_DATE,
	ACC_PROG_OCCUR_OID
	)
select 	ACCOUNT_PROGRAM_OCCURENCE_ID,
	APO_ID,
	ACCOUNT_NAME,
	ACTIVE,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	COUNTRY_CODE,
	CURRENCY_CODE,
	VISION_JOB_NUMBER,
	LOCK_ID,
	PROGRAM_TYPE,
	YEAR_ENDING,
	LOCKED,
	SERVICE_CENTER_NAME
	,                SYSDATE,
	SYSDATE,
	ODS_STAGE.BOC_ACC_PROG_OCCUR_SEQ.nextval
from	RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001 S



where	IND_UPDATE = 'I'



&


/*-----------------------------------------------*/
/* TASK No. 16 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 17 */
/* Drop flow table */

drop table RAX_APP_USER.I$_BOC_ACC_PRG_OCCR_STG730001 

&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* sub-select inline view */

(


select 	 
	
	C1_ACCOUNT_PROGRAM_OCCURENCE_I    ACCOUNT_PROGRAM_OCCURENCE_ID,
	C2_APO_ID    APO_ID,
	C3_ACCOUNT_NAME    ACCOUNT_NAME,
	C4_ACTIVE    ACTIVE,
	C5_CREATEDATE    CREATEDATE,
	C6_CREATEDBY    CREATEDBY,
	C7_MODIFIEDBY    MODIFIEDBY,
	C8_MODIFYDATE    MODIFYDATE,
	C9_COUNTRY_CODE    COUNTRY_CODE,
	C10_CURRENCY_CODE    CURRENCY_CODE,
	C11_VISION_JOB_NUMBER    VISION_JOB_NUMBER,
	C12_LOCK_ID    LOCK_ID,
	C13_PROGRAM_TYPE    PROGRAM_TYPE,
	C14_YEAR_ENDING    YEAR_ENDING,
	C15_LOCKED    LOCKED,
	C16_SERVICE_CENTER_NAME    SERVICE_CENTER_NAME,
	SYSDATE    ODS_CREATE_DATE,
	SYSDATE    ODS_MODIFY_DATE,
	ODS_STAGE.BOC_ACC_PROG_OCCUR_SEQ.nextval    ACC_PROG_OCCUR_OID
from	RAX_APP_USER.C$_0BOC_ACC_PRG_OCCR_STG
where	(1=1)





)

&


/*-----------------------------------------------*/
/* TASK No. 1000005 */
/* Drop work table */

drop table RAX_APP_USER.C$_0BOC_ACC_PRG_OCCR_STG 

&


/*-----------------------------------------------*/
