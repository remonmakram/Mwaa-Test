/* TASK No. 1 */
/* Drop work table */

-- drop table RAX_APP_USER.C$_0BOC_ORDER_BATCH_STAGE 

-- &


/*-----------------------------------------------*/
/* TASK No. 2 */
/* Create work table */

-- create table RAX_APP_USER.C$_0BOC_ORDER_BATCH_STAGE
-- (
-- 	C1_ORDER_BATCH_ID	NUMBER(19) NULL,
-- 	C2_APO_ID	VARCHAR2(255) NULL,
-- 	C3_CREATEDATE	TIMESTAMP(6) NULL,
-- 	C4_CREATEDBY	VARCHAR2(255) NULL,
-- 	C5_MODIFIEDBY	VARCHAR2(255) NULL,
-- 	C6_MODIFYDATE	TIMESTAMP(6) NULL,
-- 	C7_OMS_BATCH_ID	VARCHAR2(255) NULL,
-- 	C8_COUNTRY_CODE	VARCHAR2(255) NULL,
-- 	C9_EXPECTED_ORDERS	VARCHAR2(255) NULL,
-- 	C10_BATCH_SEQ	NUMBER(19) NULL,
-- 	C11_STATUS	VARCHAR2(255) NULL,
-- 	C12_EXCEPTION_COUNT	NUMBER(10) NULL,
-- 	C13_LAST_EXCEPTION_MESSAGE	VARCHAR2(255) NULL,
-- 	C14_SHIP_TYPE	VARCHAR2(255) NULL,
-- 	C15_PROCESS_TYPE	VARCHAR2(255) NULL,
-- 	C16_ACCOUNT_PROGRAM_OCCURENCE_	NUMBER(19) NULL
-- )
-- NOLOGGING

-- &


/*-----------------------------------------------*/
/* TASK No. 3 */
/* Load data */

/* SOURCE CODE */
-- select	
-- 	ORDER_BATCH.ORDER_BATCH_ID	   C1_ORDER_BATCH_ID,
-- 	ORDER_BATCH.APO_ID	   C2_APO_ID,
-- 	ORDER_BATCH.CREATEDATE	   C3_CREATEDATE,
-- 	ORDER_BATCH.CREATEDBY	   C4_CREATEDBY,
-- 	ORDER_BATCH.MODIFIEDBY	   C5_MODIFIEDBY,
-- 	ORDER_BATCH.MODIFYDATE	   C6_MODIFYDATE,
-- 	ORDER_BATCH.OMS_BATCH_ID	   C7_OMS_BATCH_ID,
-- 	ORDER_BATCH.COUNTRY_CODE	   C8_COUNTRY_CODE,
-- 	ORDER_BATCH.EXPECTED_ORDERS	   C9_EXPECTED_ORDERS,
-- 	ORDER_BATCH.BATCH_SEQ	   C10_BATCH_SEQ,
-- 	ORDER_BATCH.STATUS	   C11_STATUS,
-- 	ORDER_BATCH.EXCEPTION_COUNT	   C12_EXCEPTION_COUNT,
-- 	ORDER_BATCH.LAST_EXCEPTION_MESSAGE	   C13_LAST_EXCEPTION_MESSAGE,
-- 	ORDER_BATCH.SHIP_TYPE	   C14_SHIP_TYPE,
-- 	ORDER_BATCH.PROCESS_TYPE	   C15_PROCESS_TYPE,
-- 	ORDER_BATCH.ACCOUNT_PROGRAM_OCCURENCE_ID	   C16_ACCOUNT_PROGRAM_OCCURENCE_
-- from	BOC_OWN.ORDER_BATCH   ORDER_BATCH
-- where	(1=1)
-- And (ORDER_BATCH.MODIFYDATE >= ( TO_DATE(SUBSTR(:v_cdc_ld_date, 1, 19), 'YYYY-MM-DD HH24:MI:SS')  - :v_cdc_oms_overlap))





-- &

/* TARGET CODE */
-- insert into RAX_APP_USER.C$_0BOC_ORDER_BATCH_STAGE
-- (
-- 	C1_ORDER_BATCH_ID,
-- 	C2_APO_ID,
-- 	C3_CREATEDATE,
-- 	C4_CREATEDBY,
-- 	C5_MODIFIEDBY,
-- 	C6_MODIFYDATE,
-- 	C7_OMS_BATCH_ID,
-- 	C8_COUNTRY_CODE,
-- 	C9_EXPECTED_ORDERS,
-- 	C10_BATCH_SEQ,
-- 	C11_STATUS,
-- 	C12_EXCEPTION_COUNT,
-- 	C13_LAST_EXCEPTION_MESSAGE,
-- 	C14_SHIP_TYPE,
-- 	C15_PROCESS_TYPE,
-- 	C16_ACCOUNT_PROGRAM_OCCURENCE_
-- )
-- values
-- (
-- 	:C1_ORDER_BATCH_ID,
-- 	:C2_APO_ID,
-- 	:C3_CREATEDATE,
-- 	:C4_CREATEDBY,
-- 	:C5_MODIFIEDBY,
-- 	:C6_MODIFYDATE,
-- 	:C7_OMS_BATCH_ID,
-- 	:C8_COUNTRY_CODE,
-- 	:C9_EXPECTED_ORDERS,
-- 	:C10_BATCH_SEQ,
-- 	:C11_STATUS,
-- 	:C12_EXCEPTION_COUNT,
-- 	:C13_LAST_EXCEPTION_MESSAGE,
-- 	:C14_SHIP_TYPE,
-- 	:C15_PROCESS_TYPE,
-- 	:C16_ACCOUNT_PROGRAM_OCCURENCE_
-- )

-- &


/*-----------------------------------------------*/
/* TASK No. 4 */
/* Analyze work table */



BEGIN
DBMS_STATS.GATHER_TABLE_STATS (
    ownname =>	'RAX_APP_USER',
    tabname =>	'C$_0BOC_ORDER_BATCH_STAGE',
    estimate_percent =>	DBMS_STATS.AUTO_SAMPLE_SIZE
);
END;




&


/*-----------------------------------------------*/
/* TASK No. 6 */
/* Set vID */

/* NONE or SET VARIABLE STATEMENT FOUND, CHECK ODI TASK NO. 6 */




/*-----------------------------------------------*/
/* TASK No. 7 */
/* Drop flow table */

-- drop table RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001 

BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;


&


/*-----------------------------------------------*/
/* TASK No. 8 */
/* Create flow table I$ */

create table RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
(
	ORDER_BATCH_ID		NUMBER(19) NULL,
	APO_ID		VARCHAR2(255) NULL,
	CREATEDATE		TIMESTAMP(6) NULL,
	CREATEDBY		VARCHAR2(255) NULL,
	MODIFIEDBY		VARCHAR2(255) NULL,
	MODIFYDATE		TIMESTAMP(6) NULL,
	OMS_BATCH_ID		VARCHAR2(255) NULL,
	COUNTRY_CODE		VARCHAR2(255) NULL,
	EXPECTED_ORDERS		VARCHAR2(255) NULL,
	BATCH_SEQ		NUMBER(19) NULL,
	STATUS		VARCHAR2(255) NULL,
	EXCEPTION_COUNT		NUMBER(10) NULL,
	LAST_EXCEPTION_MESSAGE		VARCHAR2(255) NULL,
	SHIP_TYPE		VARCHAR2(255) NULL,
	PROCESS_TYPE		VARCHAR2(255) NULL,
	ACCOUNT_PROGRAM_OCCURENCE_ID		NUMBER(19) NULL,
	ORDER_BATCH_OID		NUMBER NULL,
	ODS_CREATE_DATE		DATE NULL,
	ODS_MODIFY_DATE		DATE NULL,
	IND_UPDATE		CHAR(1)
)
NOLOGGING

&


/*-----------------------------------------------*/
/* TASK No. 9 */
/* Insert flow into I$ table */

/* DETECTION_STRATEGY = POST_FLOW */
 


  


insert into	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
(
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	IND_UPDATE
)


select 	 
	
	C1_ORDER_BATCH_ID,
	C2_APO_ID,
	C3_CREATEDATE,
	C4_CREATEDBY,
	C5_MODIFIEDBY,
	C6_MODIFYDATE,
	C7_OMS_BATCH_ID,
	C8_COUNTRY_CODE,
	C9_EXPECTED_ORDERS,
	C10_BATCH_SEQ,
	C11_STATUS,
	C12_EXCEPTION_COUNT,
	C13_LAST_EXCEPTION_MESSAGE,
	C14_SHIP_TYPE,
	C15_PROCESS_TYPE,
	C16_ACCOUNT_PROGRAM_OCCURENCE_,

	'I' IND_UPDATE

from	RAX_APP_USER.C$_0BOC_ORDER_BATCH_STAGE
where	(1=1)






  

 


&


/*-----------------------------------------------*/
/* TASK No. 10 */
/* Create Index on flow table */

-- create index	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE_IDX725001
-- on		RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001 (ORDER_BATCH_ID)
-- NOLOGGING

BEGIN
   EXECUTE IMMEDIATE 'CREATE INDEX RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE_IDX725001 
                      ON RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001 (ORDER_BATCH_ID)';
EXCEPTION
   WHEN OTHERS THEN
      -- Handle the case where the identifier is too long (ORA-00972)
      IF SQLCODE = -972 THEN
         DBMS_OUTPUT.PUT_LINE('Identifier is too long. Skipping creation of index.');
      ELSE
         RAISE;
      END IF;
END;

&



/*-----------------------------------------------*/
/* TASK No. 11 */
/* Analyze integration table */



begin
    dbms_stats.gather_table_stats(
	ownname => 'RAX_APP_USER',
	tabname => 'I$_BOC_ORDER_BATCH_STAGE725001',
	estimate_percent => dbms_stats.auto_sample_size
    );
end;



&


/*-----------------------------------------------*/
/* TASK No. 12 */
/* create check table */


-- create table RAX_APP_USER.SNP_CHECK_TAB
-- (
-- 	CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
-- 	RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
-- 	FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
-- 	ERR_TYPE		VARCHAR2(1 CHAR) NULL,
-- 	ERR_MESS		VARCHAR2(250 CHAR) NULL ,
-- 	CHECK_DATE	DATE NULL,
-- 	ORIGIN		VARCHAR2(100 CHAR) NULL,
-- 	CONS_NAME	VARCHAR2(35 CHAR) NULL,
-- 	CONS_TYPE		VARCHAR2(2 CHAR) NULL,
-- 	ERR_COUNT		NUMBER(10) NULL
-- )

BEGIN
   EXECUTE IMMEDIATE '
      create table RAX_APP_USER.SNP_CHECK_TAB
		(
			CATALOG_NAME	VARCHAR2(100 CHAR) NULL ,
			SCHEMA_NAME	VARCHAR2(100 CHAR) NULL ,
			RESOURCE_NAME	VARCHAR2(100 CHAR) NULL,
			FULL_RES_NAME	VARCHAR2(100 CHAR) NULL,
			ERR_TYPE		VARCHAR2(1 CHAR) NULL,
			ERR_MESS		VARCHAR2(250 CHAR) NULL ,
			CHECK_DATE	DATE NULL,
			ORIGIN		VARCHAR2(100 CHAR) NULL,
			CONS_NAME	VARCHAR2(35 CHAR) NULL,
			CONS_TYPE		VARCHAR2(2 CHAR) NULL,
			ERR_COUNT		NUMBER(10) NULL
		)
   ';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -955 THEN  -- ORA-00955: name is already used by an existing object
         RAISE;
      ELSE
         DBMS_OUTPUT.PUT_LINE('Table RAX_APP_USER.SNP_CHECK_TAB already exists.');
      END IF;
END;
	

&


/*-----------------------------------------------*/
/* TASK No. 13 */
/* delete previous check sum */

delete from	RAX_APP_USER.SNP_CHECK_TAB
where	SCHEMA_NAME	= 'ODS_STAGE'
and	ORIGIN 		= '(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT'
and	ERR_TYPE 		= 'F'


&


BEGIN  
   EXECUTE IMMEDIATE 'drop table RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001';  
EXCEPTION  
   WHEN OTHERS THEN  
      IF SQLCODE != -942 THEN  
         RAISE;  
      END IF;  
END;


&



/*-----------------------------------------------*/
/* TASK No. 14 */
/* create error table */


create table RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_ROW_ID 		UROWID,
	ODI_ERR_TYPE		VARCHAR2(1 CHAR) NULL, 
	ODI_ERR_MESS		VARCHAR2(250 CHAR) NULL,
	ODI_CHECK_DATE	DATE NULL, 
	ORDER_BATCH_ID	NUMBER(19) NULL,
	APO_ID	VARCHAR2(255) NULL,
	CREATEDATE	TIMESTAMP(6) NULL,
	CREATEDBY	VARCHAR2(255) NULL,
	MODIFIEDBY	VARCHAR2(255) NULL,
	MODIFYDATE	TIMESTAMP(6) NULL,
	OMS_BATCH_ID	VARCHAR2(255) NULL,
	COUNTRY_CODE	VARCHAR2(255) NULL,
	EXPECTED_ORDERS	VARCHAR2(255) NULL,
	PICTURE_DATE	TIMESTAMP(6) NULL,
	BATCH_SEQ	NUMBER(19) NULL,
	STATUS	VARCHAR2(255) NULL,
	EXCEPTION_COUNT	NUMBER(10) NULL,
	LAST_EXCEPTION_MESSAGE	VARCHAR2(255) NULL,
	SHIP_TYPE	VARCHAR2(255) NULL,
	PROCESS_TYPE	VARCHAR2(255) NULL,
	ACCOUNT_PROGRAM_OCCURENCE_ID	NUMBER(19) NULL,
	ORDER_BATCH_OID	NUMBER NULL,
	ODS_CREATE_DATE	DATE NULL,
	ODS_MODIFY_DATE	DATE NULL,
	ODI_ORIGIN		VARCHAR2(100 CHAR) NULL,
	ODI_CONS_NAME	VARCHAR2(35 CHAR) NULL,
	ODI_CONS_TYPE		VARCHAR2(2 CHAR) NULL,
	ODI_PK			VARCHAR2(32 CHAR) PRIMARY KEY,
	ODI_SESS_NO		VARCHAR2(19 CHAR)
)



&


/*-----------------------------------------------*/
/* TASK No. 15 */
/* delete previous errors */

delete from 	RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
where	(ODI_ERR_TYPE = 'S'	and 'F' = 'S')
or	(ODI_ERR_TYPE = 'F'	and ODI_ORIGIN = '(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT')


&


/*-----------------------------------------------*/
/* TASK No. 16 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ORDER_BATCH_ID cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'ORDER_BATCH_ID',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	ORDER_BATCH_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 17 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column CREATEDATE cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'CREATEDATE',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	CREATEDATE is null



&


/*-----------------------------------------------*/
/* TASK No. 18 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column CREATEDBY cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'CREATEDBY',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	CREATEDBY is null



&


/*-----------------------------------------------*/
/* TASK No. 19 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column MODIFIEDBY cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'MODIFIEDBY',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	MODIFIEDBY is null



&


/*-----------------------------------------------*/
/* TASK No. 20 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column MODIFYDATE cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'MODIFYDATE',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	MODIFYDATE is null



&


/*-----------------------------------------------*/
/* TASK No. 21 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column OMS_BATCH_ID cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'OMS_BATCH_ID',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	OMS_BATCH_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 22 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column STATUS cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'STATUS',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	STATUS is null



&


/*-----------------------------------------------*/
/* TASK No. 23 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column SHIP_TYPE cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'SHIP_TYPE',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	SHIP_TYPE is null



&


/*-----------------------------------------------*/
/* TASK No. 24 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column PROCESS_TYPE cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'PROCESS_TYPE',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	PROCESS_TYPE is null



&


/*-----------------------------------------------*/
/* TASK No. 25 */
/* insert Not Null errors */

insert into RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
(
	ODI_PK,
	ODI_SESS_NO,
	ODI_ROW_ID,
	ODI_ERR_TYPE,
	ODI_ERR_MESS,
	ODI_CHECK_DATE,
	ODI_ORIGIN,
	ODI_CONS_NAME,
	ODI_CONS_TYPE,
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
)
select
	SYS_GUID(),
	:v_sess_no, 
	rowid,
	'F', 
	'ODI-15066: The column ACCOUNT_PROGRAM_OCCURENCE_ID cannot be null.',
	sysdate,
	'(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT',
	'ACCOUNT_PROGRAM_OCCURENCE_ID',
	'NN',	
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID,
	ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
where	ACCOUNT_PROGRAM_OCCURENCE_ID is null



&


/*-----------------------------------------------*/
/* TASK No. 26 */
/* create index on error table */

 
/* FLOW CONTROL CREATE INDEX ON THE E$TABLE */
create index 	RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001
on	RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001 (ODI_ROW_ID)


&


/*-----------------------------------------------*/
/* TASK No. 27 */
/* delete errors from controlled table */

delete from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001  T
where	exists 	(
		select	1
		from	RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001 E
		where ODI_SESS_NO = :v_sess_no
		and T.rowid = E.ODI_ROW_ID
		)


&


/*-----------------------------------------------*/
/* TASK No. 28 */
/* insert check sum into check table */

insert into RAX_APP_USER.SNP_CHECK_TAB
(
	SCHEMA_NAME,
	RESOURCE_NAME,
	FULL_RES_NAME,
	ERR_TYPE,
	ERR_MESS,
	CHECK_DATE,
	ORIGIN,
	CONS_NAME,
	CONS_TYPE,
	ERR_COUNT
)
select	
	'ODS_STAGE',
	'BOC_ORDER_BATCH_STAGE',
	'ODS_STAGE.BOC_ORDER_BATCH_STAGE725001',
	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE,
	count(1) 
from	RAX_APP_USER.E$_BOC_ORDER_BATCH_STAGE725001 E
where	E.ODI_ERR_TYPE	= 'F'
and	E.ODI_ORIGIN 	= '(725001)ODS_Project.LOAD_DW_ORDER_BATCH_INT'
group by	E.ODI_ERR_TYPE,
	E.ODI_ERR_MESS,
	E.ODI_CHECK_DATE,
	E.ODI_ORIGIN,
	E.ODI_CONS_NAME,
	E.ODI_CONS_TYPE


&


/*-----------------------------------------------*/
/* TASK No. 29 */
/* Flag rows for update */

/* DETECTION_STRATEGY = POST_FLOW */


update	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
set	IND_UPDATE = 'U'
where	(ORDER_BATCH_ID)
	in	(
		select	ORDER_BATCH_ID
		from	ODS_STAGE.BOC_ORDER_BATCH_STAGE
		)



&


/*-----------------------------------------------*/
/* TASK No. 30 */
/* Flag useless rows */

/* DETECTION_STRATEGY = POST_FLOW */


update	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001 S
set	IND_UPDATE = 'N'
where	exists (
	select 	'X'
	from 	ODS_STAGE.BOC_ORDER_BATCH_STAGE 	T
	where	T.ORDER_BATCH_ID	= S.ORDER_BATCH_ID
		and	((T.APO_ID = S.APO_ID) or (T.APO_ID IS NULL and S.APO_ID IS NULL))
and	((T.CREATEDATE = S.CREATEDATE) or (T.CREATEDATE IS NULL and S.CREATEDATE IS NULL))
and	((T.CREATEDBY = S.CREATEDBY) or (T.CREATEDBY IS NULL and S.CREATEDBY IS NULL))
and	((T.MODIFIEDBY = S.MODIFIEDBY) or (T.MODIFIEDBY IS NULL and S.MODIFIEDBY IS NULL))
and	((T.MODIFYDATE = S.MODIFYDATE) or (T.MODIFYDATE IS NULL and S.MODIFYDATE IS NULL))
and	((T.OMS_BATCH_ID = S.OMS_BATCH_ID) or (T.OMS_BATCH_ID IS NULL and S.OMS_BATCH_ID IS NULL))
and	((T.COUNTRY_CODE = S.COUNTRY_CODE) or (T.COUNTRY_CODE IS NULL and S.COUNTRY_CODE IS NULL))
and	((T.EXPECTED_ORDERS = S.EXPECTED_ORDERS) or (T.EXPECTED_ORDERS IS NULL and S.EXPECTED_ORDERS IS NULL))
and	((T.BATCH_SEQ = S.BATCH_SEQ) or (T.BATCH_SEQ IS NULL and S.BATCH_SEQ IS NULL))
and	((T.STATUS = S.STATUS) or (T.STATUS IS NULL and S.STATUS IS NULL))
and	((T.EXCEPTION_COUNT = S.EXCEPTION_COUNT) or (T.EXCEPTION_COUNT IS NULL and S.EXCEPTION_COUNT IS NULL))
and	((T.LAST_EXCEPTION_MESSAGE = S.LAST_EXCEPTION_MESSAGE) or (T.LAST_EXCEPTION_MESSAGE IS NULL and S.LAST_EXCEPTION_MESSAGE IS NULL))
and	((T.SHIP_TYPE = S.SHIP_TYPE) or (T.SHIP_TYPE IS NULL and S.SHIP_TYPE IS NULL))
and	((T.PROCESS_TYPE = S.PROCESS_TYPE) or (T.PROCESS_TYPE IS NULL and S.PROCESS_TYPE IS NULL))
and	((T.ACCOUNT_PROGRAM_OCCURENCE_ID = S.ACCOUNT_PROGRAM_OCCURENCE_ID) or (T.ACCOUNT_PROGRAM_OCCURENCE_ID IS NULL and S.ACCOUNT_PROGRAM_OCCURENCE_ID IS NULL))
	)



&


/*-----------------------------------------------*/
/* TASK No. 31 */
/* Update existing rows */

/* DETECTION_STRATEGY = POST_FLOW */
update	ODS_STAGE.BOC_ORDER_BATCH_STAGE T
set 	
	(
	T.APO_ID,
	T.CREATEDATE,
	T.CREATEDBY,
	T.MODIFIEDBY,
	T.MODIFYDATE,
	T.OMS_BATCH_ID,
	T.COUNTRY_CODE,
	T.EXPECTED_ORDERS,
	T.BATCH_SEQ,
	T.STATUS,
	T.EXCEPTION_COUNT,
	T.LAST_EXCEPTION_MESSAGE,
	T.SHIP_TYPE,
	T.PROCESS_TYPE,
	T.ACCOUNT_PROGRAM_OCCURENCE_ID
	) =
		(
		select	S.APO_ID,
			S.CREATEDATE,
			S.CREATEDBY,
			S.MODIFIEDBY,
			S.MODIFYDATE,
			S.OMS_BATCH_ID,
			S.COUNTRY_CODE,
			S.EXPECTED_ORDERS,
			S.BATCH_SEQ,
			S.STATUS,
			S.EXCEPTION_COUNT,
			S.LAST_EXCEPTION_MESSAGE,
			S.SHIP_TYPE,
			S.PROCESS_TYPE,
			S.ACCOUNT_PROGRAM_OCCURENCE_ID
		from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001 S
		where	T.ORDER_BATCH_ID	=S.ORDER_BATCH_ID
	    	 )
	,               T.ODS_MODIFY_DATE = SYSDATE

where	(ORDER_BATCH_ID)
	in	(
		select	ORDER_BATCH_ID
		from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001
		where	IND_UPDATE = 'U'
		)




&


/*-----------------------------------------------*/
/* TASK No. 32 */
/* Insert new rows */

/* DETECTION_STRATEGY = POST_FLOW */
insert into 	ODS_STAGE.BOC_ORDER_BATCH_STAGE T
	(
	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID
	,                ORDER_BATCH_OID,
	ODS_CREATE_DATE,
	ODS_MODIFY_DATE
	)
select 	ORDER_BATCH_ID,
	APO_ID,
	CREATEDATE,
	CREATEDBY,
	MODIFIEDBY,
	MODIFYDATE,
	OMS_BATCH_ID,
	COUNTRY_CODE,
	EXPECTED_ORDERS,
	BATCH_SEQ,
	STATUS,
	EXCEPTION_COUNT,
	LAST_EXCEPTION_MESSAGE,
	SHIP_TYPE,
	PROCESS_TYPE,
	ACCOUNT_PROGRAM_OCCURENCE_ID
	,                ODS_STAGE.BOC_ORDER_BATCH_SEQ.nextval,
	SYSDATE,
	SYSDATE
from	RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001 S



where	IND_UPDATE = 'I'



&


/*-----------------------------------------------*/
/* TASK No. 33 */
/* Commit transaction */

/*commit*/


/*-----------------------------------------------*/
/* TASK No. 34 */
/* Drop flow table */

drop table RAX_APP_USER.I$_BOC_ORDER_BATCH_STAGE725001 

&


/*-----------------------------------------------*/
/* TASK No. 35 */
/* sub-select inline view */

(


select 	 
	
	C1_ORDER_BATCH_ID    ORDER_BATCH_ID,
	C2_APO_ID    APO_ID,
	C3_CREATEDATE    CREATEDATE,
	C4_CREATEDBY    CREATEDBY,
	C5_MODIFIEDBY    MODIFIEDBY,
	C6_MODIFYDATE    MODIFYDATE,
	C7_OMS_BATCH_ID    OMS_BATCH_ID,
	C8_COUNTRY_CODE    COUNTRY_CODE,
	C9_EXPECTED_ORDERS    EXPECTED_ORDERS,
	C10_BATCH_SEQ    BATCH_SEQ,
	C11_STATUS    STATUS,
	C12_EXCEPTION_COUNT    EXCEPTION_COUNT,
	C13_LAST_EXCEPTION_MESSAGE    LAST_EXCEPTION_MESSAGE,
	C14_SHIP_TYPE    SHIP_TYPE,
	C15_PROCESS_TYPE    PROCESS_TYPE,
	C16_ACCOUNT_PROGRAM_OCCURENCE_    ACCOUNT_PROGRAM_OCCURENCE_ID,
	ODS_STAGE.BOC_ORDER_BATCH_SEQ.nextval    ORDER_BATCH_OID,
	SYSDATE    ODS_CREATE_DATE,
	SYSDATE    ODS_MODIFY_DATE
from	RAX_APP_USER.C$_0BOC_ORDER_BATCH_STAGE
where	(1=1)





)

&


/*-----------------------------------------------*/
/* TASK No. 1000005 */
/* Drop work table */

drop table RAX_APP_USER.C$_0BOC_ORDER_BATCH_STAGE 

&


/*-----------------------------------------------*/
